// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`inventory 1`] = `
Array [
  Object {
    "docs": "AWS CDK app in TypeScript.",
    "docsurl": "https://github.com/eladb/projen/blob/master/API.md#projen-awscdktypescriptapp",
    "fqn": "projen.AwsCdkTypeScriptApp",
    "options": Array [
      Object {
        "default": "true",
        "docs": "Allow the project to include \`peerDependencies\` and \`bundledDependencies\`.",
        "name": "allowLibraryDependencies",
        "optional": true,
        "path": Array [
          "allowLibraryDependencies",
        ],
        "switch": "allow-library-dependencies",
        "type": "boolean",
      },
      Object {
        "default": "true",
        "docs": "Checks that after build there are no modified files on git.",
        "name": "antitamper",
        "optional": true,
        "path": Array [
          "antitamper",
        ],
        "switch": "antitamper",
        "type": "boolean",
      },
      Object {
        "default": "\\"main.ts\\"",
        "docs": "The CDK app's entrypoint (relative to the source directory, which is \\"src\\" by default).",
        "name": "appEntrypoint",
        "optional": true,
        "path": Array [
          "appEntrypoint",
        ],
        "switch": "app-entrypoint",
        "type": "string",
      },
      Object {
        "docs": "Author's e-mail.",
        "name": "authorEmail",
        "optional": true,
        "path": Array [
          "authorEmail",
        ],
        "switch": "author-email",
        "type": "string",
      },
      Object {
        "docs": "Author's name.",
        "name": "authorName",
        "optional": true,
        "path": Array [
          "authorName",
        ],
        "switch": "author-name",
        "type": "string",
      },
      Object {
        "docs": "Author's Organization.",
        "name": "authorOrganization",
        "optional": true,
        "path": Array [
          "authorOrganization",
        ],
        "switch": "author-organization",
        "type": "boolean",
      },
      Object {
        "docs": "Author's URL / Website.",
        "name": "authorUrl",
        "optional": true,
        "path": Array [
          "authorUrl",
        ],
        "switch": "author-url",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Automatically add all executables under the \`bin\` directory to your \`package.json\` file under the \`bin\` section.",
        "name": "autoDetectBin",
        "optional": true,
        "path": Array [
          "autoDetectBin",
        ],
        "switch": "auto-detect-bin",
        "type": "boolean",
      },
      Object {
        "docs": "Binary programs vended with your module.",
        "name": "bin",
        "optional": true,
        "path": Array [
          "bin",
        ],
        "switch": "bin",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Define a GitHub workflow for building PRs.",
        "name": "buildWorkflow",
        "optional": true,
        "path": Array [
          "buildWorkflow",
        ],
        "switch": "build-workflow",
        "type": "boolean",
      },
      Object {
        "name": "bundledDependencies",
        "optional": true,
        "path": Array [
          "bundledDependencies",
        ],
        "switch": "bundled-dependencies",
        "type": "unknown",
      },
      Object {
        "name": "bundledDeps",
        "optional": true,
        "path": Array [
          "bundledDeps",
        ],
        "switch": "bundled-deps",
        "type": "unknown",
      },
      Object {
        "docs": "Which AWS CDK modules (those that start with \\"@aws-cdk/\\") this app uses.",
        "name": "cdkDependencies",
        "optional": true,
        "path": Array [
          "cdkDependencies",
        ],
        "switch": "cdk-dependencies",
        "type": "unknown",
      },
      Object {
        "default": "1.63.0",
        "docs": "AWS CDK version to use.",
        "name": "cdkVersion",
        "path": Array [
          "cdkVersion",
        ],
        "switch": "cdk-version",
        "type": "string",
      },
      Object {
        "default": "false",
        "docs": "Use pinned version instead of caret version for CDK.",
        "name": "cdkVersionPinning",
        "optional": true,
        "path": Array [
          "cdkVersionPinning",
        ],
        "switch": "cdk-version-pinning",
        "type": "boolean",
      },
      Object {
        "default": "the default behavior is to delete the lib/ directory and run
jest typescript tests and only if all tests pass, run the compiler.",
        "docs": "Compile the code before running tests.",
        "name": "compileBeforeTest",
        "optional": true,
        "path": Array [
          "compileBeforeTest",
        ],
        "switch": "compile-before-test",
        "type": "boolean",
      },
      Object {
        "docs": "Additional context to include in \`cdk.json\`.",
        "name": "context",
        "optional": true,
        "path": Array [
          "context",
        ],
        "switch": "context",
        "type": "unknown",
      },
      Object {
        "default": "defaults to the value of authorName or \\"\\" if \`authorName\` is undefined.",
        "docs": "License copyright owner.",
        "name": "copyrightOwner",
        "optional": true,
        "path": Array [
          "copyrightOwner",
        ],
        "switch": "copyright-owner",
        "type": "string",
      },
      Object {
        "default": "current year",
        "docs": "The copyright years to put in the LICENSE file.",
        "name": "copyrightPeriod",
        "optional": true,
        "path": Array [
          "copyrightPeriod",
        ],
        "switch": "copyright-period",
        "type": "string",
      },
      Object {
        "default": "'master'",
        "docs": "The name of the main release branch.",
        "name": "defaultReleaseBranch",
        "optional": true,
        "path": Array [
          "defaultReleaseBranch",
        ],
        "switch": "default-release-branch",
        "type": "string",
      },
      Object {
        "default": "true;",
        "docs": "Include dependabot configuration.",
        "name": "dependabot",
        "optional": true,
        "path": Array [
          "dependabot",
        ],
        "switch": "dependabot",
        "type": "boolean",
      },
      Object {
        "name": "dependencies",
        "optional": true,
        "path": Array [
          "dependencies",
        ],
        "switch": "dependencies",
        "type": "unknown",
      },
      Object {
        "name": "deps",
        "optional": true,
        "path": Array [
          "deps",
        ],
        "switch": "deps",
        "type": "unknown",
      },
      Object {
        "docs": "The description is just a string that helps people understand the purpose of the package.",
        "name": "description",
        "optional": true,
        "path": Array [
          "description",
        ],
        "switch": "description",
        "type": "string",
      },
      Object {
        "name": "devDependencies",
        "optional": true,
        "path": Array [
          "devDependencies",
        ],
        "switch": "dev-dependencies",
        "type": "unknown",
      },
      Object {
        "name": "devDeps",
        "optional": true,
        "path": Array [
          "devDeps",
        ],
        "switch": "dev-deps",
        "type": "unknown",
      },
      Object {
        "default": "false",
        "docs": "Do not generate a \`tsconfig.json\` file (used by jsii projects since tsconfig.json is generated by the jsii compiler).",
        "name": "disableTsconfig",
        "optional": true,
        "path": Array [
          "disableTsconfig",
        ],
        "switch": "disable-tsconfig",
        "type": "boolean",
      },
      Object {
        "default": "false",
        "docs": "Docgen by Typedoc.",
        "name": "docgen",
        "optional": true,
        "path": Array [
          "docgen",
        ],
        "switch": "docgen",
        "type": "boolean",
      },
      Object {
        "default": "'docs'",
        "docs": "Docs directory.",
        "name": "docsDirectory",
        "optional": true,
        "path": Array [
          "docsDirectory",
        ],
        "switch": "docs-directory",
        "type": "string",
      },
      Object {
        "default": "lib/index.js",
        "docs": "Module entrypoint (\`main\` in \`package.json\`).",
        "name": "entrypoint",
        "optional": true,
        "path": Array [
          "entrypoint",
        ],
        "switch": "entrypoint",
        "type": "string",
      },
      Object {
        "default": ".d.ts file derived from the project's entrypoint (usually lib/index.d.ts)",
        "docs": "The .d.ts file that includes the type declarations for this module.",
        "name": "entrypointTypes",
        "optional": true,
        "path": Array [
          "entrypointTypes",
        ],
        "switch": "entrypoint-types",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Setup eslint.",
        "name": "eslint",
        "optional": true,
        "path": Array [
          "eslint",
        ],
        "switch": "eslint",
        "type": "boolean",
      },
      Object {
        "docs": "Additional entries to .gitignore.",
        "name": "gitignore",
        "optional": true,
        "path": Array [
          "gitignore",
        ],
        "switch": "gitignore",
        "type": "unknown",
      },
      Object {
        "docs": "Package's Homepage / Website.",
        "name": "homepage",
        "optional": true,
        "path": Array [
          "homepage",
        ],
        "switch": "homepage",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Setup jest unit tests.",
        "name": "jest",
        "optional": true,
        "path": Array [
          "jest",
        ],
        "switch": "jest",
        "type": "boolean",
      },
      Object {
        "docs": "Keywords to include in \`package.json\`.",
        "name": "keywords",
        "optional": true,
        "path": Array [
          "keywords",
        ],
        "switch": "keywords",
        "type": "unknown",
      },
      Object {
        "default": "\\"lib\\"",
        "docs": "Compiler artifacts output directory.",
        "name": "libdir",
        "optional": true,
        "path": Array [
          "libdir",
        ],
        "switch": "libdir",
        "type": "string",
      },
      Object {
        "docs": "License's SPDX identifier.",
        "name": "license",
        "optional": true,
        "path": Array [
          "license",
        ],
        "switch": "license",
        "type": "string",
      },
      Object {
        "default": "no max",
        "docs": "Minimum node.js version to require via \`engines\` (inclusive).",
        "name": "maxNodeVersion",
        "optional": true,
        "path": Array [
          "maxNodeVersion",
        ],
        "switch": "max-node-version",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Adds mergify configuration.",
        "name": "mergify",
        "optional": true,
        "path": Array [
          "mergify",
        ],
        "switch": "mergify",
        "type": "boolean",
      },
      Object {
        "default": "\\"auto-merge\\"",
        "docs": "Automatically merge PRs that build successfully and have this label.",
        "name": "mergifyAutoMergeLabel",
        "optional": true,
        "path": Array [
          "mergifyAutoMergeLabel",
        ],
        "switch": "mergify-auto-merge-label",
        "type": "string",
      },
      Object {
        "default": "no \\"engines\\" specified",
        "docs": "Node.js version to require via package.json \`engines\` (inclusive).",
        "name": "minNodeVersion",
        "optional": true,
        "path": Array [
          "minNodeVersion",
        ],
        "switch": "min-node-version",
        "type": "string",
      },
      Object {
        "default": "$BASEDIR",
        "docs": "This is the name of your package.",
        "name": "name",
        "path": Array [
          "name",
        ],
        "switch": "name",
        "type": "string",
      },
      Object {
        "default": "\\"latest\\"",
        "docs": "The dist-tag to use when releasing to npm.",
        "name": "npmDistTag",
        "optional": true,
        "path": Array [
          "npmDistTag",
        ],
        "switch": "npm-dist-tag",
        "type": "string",
      },
      Object {
        "default": "\\"registry.npmjs.org\\"",
        "docs": "The registry url to use when releasing packages.",
        "name": "npmRegistry",
        "optional": true,
        "path": Array [
          "npmRegistry",
        ],
        "switch": "npm-registry",
        "type": "string",
      },
      Object {
        "docs": "Additional entries to .npmignore.",
        "name": "npmignore",
        "optional": true,
        "path": Array [
          "npmignore",
        ],
        "switch": "npmignore",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Defines an .npmignore file. Normally this is only needed for libraries that are packaged as tarballs.",
        "name": "npmignoreEnabled",
        "optional": true,
        "path": Array [
          "npmignoreEnabled",
        ],
        "switch": "npmignore-enabled",
        "type": "boolean",
      },
      Object {
        "default": "true",
        "docs": "Defines a \`yarn package\` command that will produce a tarball and place it under \`dist/js\`.",
        "name": "package",
        "optional": true,
        "path": Array [
          "package",
        ],
        "switch": "package",
        "type": "boolean",
      },
      Object {
        "name": "peerDependencies",
        "optional": true,
        "path": Array [
          "peerDependencies",
        ],
        "switch": "peer-dependencies",
        "type": "unknown",
      },
      Object {
        "name": "peerDeps",
        "optional": true,
        "path": Array [
          "peerDeps",
        ],
        "switch": "peer-deps",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Indicates of \\"projen\\" should be installed as a devDependency.",
        "name": "projenDevDependency",
        "optional": true,
        "path": Array [
          "projenDevDependency",
        ],
        "switch": "projen-dev-dependency",
        "type": "boolean",
      },
      Object {
        "default": "\\"true\\" if mergify auto-merge is enabled (default)",
        "docs": "Automatically merge projen upgrade PRs when build passes.",
        "name": "projenUpgradeAutoMerge",
        "optional": true,
        "path": Array [
          "projenUpgradeAutoMerge",
        ],
        "switch": "projen-upgrade-auto-merge",
        "type": "boolean",
      },
      Object {
        "default": "[ '0 6 * * *' ]",
        "docs": "Customize the projenUpgrade schedule in cron expression.",
        "name": "projenUpgradeSchedule",
        "optional": true,
        "path": Array [
          "projenUpgradeSchedule",
        ],
        "switch": "projen-upgrade-schedule",
        "type": "unknown",
      },
      Object {
        "default": "no automatic projen upgrade pull requests",
        "docs": "Periodically submits a pull request for projen upgrades (executes \`yarn projen:upgrade\`).",
        "name": "projenUpgradeSecret",
        "optional": true,
        "path": Array [
          "projenUpgradeSecret",
        ],
        "switch": "projen-upgrade-secret",
        "type": "string",
      },
      Object {
        "default": "[ \\"master\\" ] - based on the value of defaultReleaseBranch.",
        "docs": "Branches which trigger a release.",
        "name": "releaseBranches",
        "optional": true,
        "path": Array [
          "releaseBranches",
        ],
        "switch": "release-branches",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Automatically release new versions every commit to one of branches in \`releaseBranches\`.",
        "name": "releaseEveryCommit",
        "optional": true,
        "path": Array [
          "releaseEveryCommit",
        ],
        "switch": "release-every-commit",
        "type": "boolean",
      },
      Object {
        "default": "no scheduled releases",
        "docs": "CRON schedule to trigger new releases.",
        "name": "releaseSchedule",
        "optional": true,
        "path": Array [
          "releaseSchedule",
        ],
        "switch": "release-schedule",
        "type": "string",
      },
      Object {
        "default": "false",
        "docs": "Automatically release to npm when new versions are introduced.",
        "name": "releaseToNpm",
        "optional": true,
        "path": Array [
          "releaseToNpm",
        ],
        "switch": "release-to-npm",
        "type": "boolean",
      },
      Object {
        "default": "true",
        "docs": "Define a GitHub workflow for releasing from \\"master\\" when new versions are bumped.",
        "name": "releaseWorkflow",
        "optional": true,
        "path": Array [
          "releaseWorkflow",
        ],
        "switch": "release-workflow",
        "type": "boolean",
      },
      Object {
        "docs": "The repository is the location where the actual code for your package lives.",
        "name": "repository",
        "optional": true,
        "path": Array [
          "repository",
        ],
        "switch": "repository",
        "type": "string",
      },
      Object {
        "docs": "If the package.json for your package is not in the root directory (for example if it is part of a monorepo), you can specify the directory in which it lives.",
        "name": "repositoryDirectory",
        "optional": true,
        "path": Array [
          "repositoryDirectory",
        ],
        "switch": "repository-directory",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Generate one-time sample in \`src/\` and \`test/\` if there are no files there.",
        "name": "sampleCode",
        "optional": true,
        "path": Array [
          "sampleCode",
        ],
        "switch": "sample-code",
        "type": "boolean",
      },
      Object {
        "default": "{}",
        "docs": "npm scripts to include.",
        "name": "scripts",
        "optional": true,
        "path": Array [
          "scripts",
        ],
        "switch": "scripts",
        "type": "unknown",
      },
      Object {
        "default": "\\"src\\"",
        "docs": "Typescript sources directory.",
        "name": "srcdir",
        "optional": true,
        "path": Array [
          "srcdir",
        ],
        "switch": "srcdir",
        "type": "string",
      },
      Object {
        "docs": "Package's Stability.",
        "name": "stability",
        "optional": true,
        "path": Array [
          "stability",
        ],
        "switch": "stability",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Defines a \`yarn start\` interactive experience.",
        "name": "start",
        "optional": true,
        "path": Array [
          "start",
        ],
        "switch": "start",
        "type": "boolean",
      },
      Object {
        "default": "\\"test\\"",
        "docs": "Tests directory.",
        "name": "testdir",
        "optional": true,
        "path": Array [
          "testdir",
        ],
        "switch": "testdir",
        "type": "string",
      },
      Object {
        "default": "\\"yarn install --frozen-lockfile && yarn projen\\"",
        "docs": "Workflow steps to use in order to bootstrap this repo.",
        "name": "workflowBootstrapSteps",
        "optional": true,
        "path": Array [
          "workflowBootstrapSteps",
        ],
        "switch": "workflow-bootstrap-steps",
        "type": "unknown",
      },
      Object {
        "default": "default image",
        "docs": "Container image to use for GitHub workflows.",
        "name": "workflowContainerImage",
        "optional": true,
        "path": Array [
          "workflowContainerImage",
        ],
        "switch": "workflow-container-image",
        "type": "string",
      },
      Object {
        "default": "same as \`minNodeVersion\`",
        "docs": "The node version to use in GitHub workflows.",
        "name": "workflowNodeVersion",
        "optional": true,
        "path": Array [
          "workflowNodeVersion",
        ],
        "switch": "workflow-node-version",
        "type": "string",
      },
    ],
    "pjid": "awscdk-app-ts",
    "typename": "AwsCdkTypeScriptApp",
  },
  Object {
    "docs": "AWS CDK construct library project.",
    "docsurl": "https://github.com/eladb/projen/blob/master/API.md#projen-awscdkconstructlibrary",
    "fqn": "projen.AwsCdkConstructLibrary",
    "options": Array [
      Object {
        "default": "true",
        "docs": "Allow the project to include \`peerDependencies\` and \`bundledDependencies\`.",
        "name": "allowLibraryDependencies",
        "optional": true,
        "path": Array [
          "allowLibraryDependencies",
        ],
        "switch": "allow-library-dependencies",
        "type": "boolean",
      },
      Object {
        "default": "true",
        "docs": "Checks that after build there are no modified files on git.",
        "name": "antitamper",
        "optional": true,
        "path": Array [
          "antitamper",
        ],
        "switch": "antitamper",
        "type": "boolean",
      },
      Object {
        "default": "$GIT_USER_EMAIL",
        "docs": "Email or URL of the library author.",
        "name": "authorAddress",
        "path": Array [
          "authorAddress",
        ],
        "switch": "author-address",
        "type": "string",
      },
      Object {
        "name": "authorEmail",
        "optional": true,
        "path": Array [
          "authorEmail",
        ],
        "switch": "author-email",
        "type": "string",
      },
      Object {
        "default": "$GIT_USER_NAME",
        "docs": "The name of the library author.",
        "name": "authorName",
        "path": Array [
          "authorName",
        ],
        "switch": "author-name",
        "type": "string",
      },
      Object {
        "name": "authorOrganization",
        "optional": true,
        "path": Array [
          "authorOrganization",
        ],
        "switch": "author-organization",
        "type": "boolean",
      },
      Object {
        "name": "authorUrl",
        "optional": true,
        "path": Array [
          "authorUrl",
        ],
        "switch": "author-url",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Automatically add all executables under the \`bin\` directory to your \`package.json\` file under the \`bin\` section.",
        "name": "autoDetectBin",
        "optional": true,
        "path": Array [
          "autoDetectBin",
        ],
        "switch": "auto-detect-bin",
        "type": "boolean",
      },
      Object {
        "docs": "Binary programs vended with your module.",
        "name": "bin",
        "optional": true,
        "path": Array [
          "bin",
        ],
        "switch": "bin",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Define a GitHub workflow for building PRs.",
        "name": "buildWorkflow",
        "optional": true,
        "path": Array [
          "buildWorkflow",
        ],
        "switch": "build-workflow",
        "type": "boolean",
      },
      Object {
        "name": "bundledDependencies",
        "optional": true,
        "path": Array [
          "bundledDependencies",
        ],
        "switch": "bundled-dependencies",
        "type": "unknown",
      },
      Object {
        "name": "bundledDeps",
        "optional": true,
        "path": Array [
          "bundledDeps",
        ],
        "switch": "bundled-deps",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Install the @aws-cdk/assert library?",
        "name": "cdkAssert",
        "optional": true,
        "path": Array [
          "cdkAssert",
        ],
        "switch": "cdk-assert",
        "type": "boolean",
      },
      Object {
        "docs": "Which AWS CDK modules (those that start with \\"@aws-cdk/\\") does this library require when consumed?",
        "name": "cdkDependencies",
        "optional": true,
        "path": Array [
          "cdkDependencies",
        ],
        "switch": "cdk-dependencies",
        "type": "unknown",
      },
      Object {
        "docs": "AWS CDK modules required for testing.",
        "name": "cdkTestDependencies",
        "optional": true,
        "path": Array [
          "cdkTestDependencies",
        ],
        "switch": "cdk-test-dependencies",
        "type": "unknown",
      },
      Object {
        "default": "1.60.0",
        "docs": "Minmum target version this library is tested against.",
        "name": "cdkVersion",
        "path": Array [
          "cdkVersion",
        ],
        "switch": "cdk-version",
        "type": "string",
      },
      Object {
        "default": "false",
        "docs": "Automatically run API compatibility test against the latest version published to npm after compilation.",
        "name": "compat",
        "optional": true,
        "path": Array [
          "compat",
        ],
        "switch": "compat",
        "type": "boolean",
      },
      Object {
        "default": ".compatignore",
        "docs": "Name of the ignore file for API compatibility tests.",
        "name": "compatIgnore",
        "optional": true,
        "path": Array [
          "compatIgnore",
        ],
        "switch": "compat-ignore",
        "type": "string",
      },
      Object {
        "default": "defaults to the value of authorName or \\"\\" if \`authorName\` is undefined.",
        "docs": "License copyright owner.",
        "name": "copyrightOwner",
        "optional": true,
        "path": Array [
          "copyrightOwner",
        ],
        "switch": "copyright-owner",
        "type": "string",
      },
      Object {
        "default": "current year",
        "docs": "The copyright years to put in the LICENSE file.",
        "name": "copyrightPeriod",
        "optional": true,
        "path": Array [
          "copyrightPeriod",
        ],
        "switch": "copyright-period",
        "type": "string",
      },
      Object {
        "default": "'master'",
        "docs": "The name of the main release branch.",
        "name": "defaultReleaseBranch",
        "optional": true,
        "path": Array [
          "defaultReleaseBranch",
        ],
        "switch": "default-release-branch",
        "type": "string",
      },
      Object {
        "default": "true;",
        "docs": "Include dependabot configuration.",
        "name": "dependabot",
        "optional": true,
        "path": Array [
          "dependabot",
        ],
        "switch": "dependabot",
        "type": "boolean",
      },
      Object {
        "name": "dependencies",
        "optional": true,
        "path": Array [
          "dependencies",
        ],
        "switch": "dependencies",
        "type": "unknown",
      },
      Object {
        "name": "deps",
        "optional": true,
        "path": Array [
          "deps",
        ],
        "switch": "deps",
        "type": "unknown",
      },
      Object {
        "docs": "Library description.",
        "name": "description",
        "optional": true,
        "path": Array [
          "description",
        ],
        "switch": "description",
        "type": "string",
      },
      Object {
        "name": "devDependencies",
        "optional": true,
        "path": Array [
          "devDependencies",
        ],
        "switch": "dev-dependencies",
        "type": "unknown",
      },
      Object {
        "name": "devDeps",
        "optional": true,
        "path": Array [
          "devDeps",
        ],
        "switch": "dev-deps",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Automatically generate API.md from jsii.",
        "name": "docgen",
        "optional": true,
        "path": Array [
          "docgen",
        ],
        "switch": "docgen",
        "type": "boolean",
      },
      Object {
        "default": "lib/index.js",
        "docs": "Module entrypoint (\`main\` in \`package.json\`).",
        "name": "entrypoint",
        "optional": true,
        "path": Array [
          "entrypoint",
        ],
        "switch": "entrypoint",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Install eslint.",
        "name": "eslint",
        "optional": true,
        "path": Array [
          "eslint",
        ],
        "switch": "eslint",
        "type": "boolean",
      },
      Object {
        "default": "true",
        "docs": "Use jest for unit tests.",
        "name": "jest",
        "optional": true,
        "path": Array [
          "jest",
        ],
        "switch": "jest",
        "type": "boolean",
      },
      Object {
        "docs": "Keywords to include in \`package.json\`.",
        "name": "keywords",
        "optional": true,
        "path": Array [
          "keywords",
        ],
        "switch": "keywords",
        "type": "unknown",
      },
      Object {
        "default": "\\"lib\\"",
        "docs": "Compiler artifacts output directory.",
        "name": "libdir",
        "optional": true,
        "path": Array [
          "libdir",
        ],
        "switch": "libdir",
        "type": "string",
      },
      Object {
        "name": "license",
        "optional": true,
        "path": Array [
          "license",
        ],
        "switch": "license",
        "type": "string",
      },
      Object {
        "default": "no max",
        "docs": "Minimum node.js version to require via \`engines\` (inclusive).",
        "name": "maxNodeVersion",
        "optional": true,
        "path": Array [
          "maxNodeVersion",
        ],
        "switch": "max-node-version",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Adds mergify configuration.",
        "name": "mergify",
        "optional": true,
        "path": Array [
          "mergify",
        ],
        "switch": "mergify",
        "type": "boolean",
      },
      Object {
        "default": "\\"auto-merge\\"",
        "docs": "Automatically merge PRs that build successfully and have this label.",
        "name": "mergifyAutoMergeLabel",
        "optional": true,
        "path": Array [
          "mergifyAutoMergeLabel",
        ],
        "switch": "mergify-auto-merge-label",
        "type": "string",
      },
      Object {
        "default": "no \\"engines\\" specified",
        "docs": "Node.js version to require via package.json \`engines\` (inclusive).",
        "name": "minNodeVersion",
        "optional": true,
        "path": Array [
          "minNodeVersion",
        ],
        "switch": "min-node-version",
        "type": "string",
      },
      Object {
        "default": "$BASEDIR",
        "docs": "The name of the library.",
        "name": "name",
        "path": Array [
          "name",
        ],
        "switch": "name",
        "type": "string",
      },
      Object {
        "default": "\\"latest\\"",
        "docs": "The dist-tag to use when releasing to npm.",
        "name": "npmDistTag",
        "optional": true,
        "path": Array [
          "npmDistTag",
        ],
        "switch": "npm-dist-tag",
        "type": "string",
      },
      Object {
        "default": "\\"registry.npmjs.org\\"",
        "docs": "The registry url to use when releasing packages.",
        "name": "npmRegistry",
        "optional": true,
        "path": Array [
          "npmRegistry",
        ],
        "switch": "npm-registry",
        "type": "string",
      },
      Object {
        "docs": "Additional entries to .npmignore.",
        "name": "npmignore",
        "optional": true,
        "path": Array [
          "npmignore",
        ],
        "switch": "npmignore",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Defines an .npmignore file. Normally this is only needed for libraries that are packaged as tarballs.",
        "name": "npmignoreEnabled",
        "optional": true,
        "path": Array [
          "npmignoreEnabled",
        ],
        "switch": "npmignore-enabled",
        "type": "boolean",
      },
      Object {
        "name": "peerDependencies",
        "optional": true,
        "path": Array [
          "peerDependencies",
        ],
        "switch": "peer-dependencies",
        "type": "unknown",
      },
      Object {
        "name": "peerDeps",
        "optional": true,
        "path": Array [
          "peerDeps",
        ],
        "switch": "peer-deps",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Indicates of \\"projen\\" should be installed as a devDependency.",
        "name": "projenDevDependency",
        "optional": true,
        "path": Array [
          "projenDevDependency",
        ],
        "switch": "projen-dev-dependency",
        "type": "boolean",
      },
      Object {
        "default": "\\"true\\" if mergify auto-merge is enabled (default)",
        "docs": "Automatically merge projen upgrade PRs when build passes.",
        "name": "projenUpgradeAutoMerge",
        "optional": true,
        "path": Array [
          "projenUpgradeAutoMerge",
        ],
        "switch": "projen-upgrade-auto-merge",
        "type": "boolean",
      },
      Object {
        "default": "[ '0 6 * * *' ]",
        "docs": "Customize the projenUpgrade schedule in cron expression.",
        "name": "projenUpgradeSchedule",
        "optional": true,
        "path": Array [
          "projenUpgradeSchedule",
        ],
        "switch": "projen-upgrade-schedule",
        "type": "unknown",
      },
      Object {
        "default": "no automatic projen upgrade pull requests",
        "docs": "Periodically submits a pull request for projen upgrades (executes \`yarn projen:upgrade\`).",
        "name": "projenUpgradeSecret",
        "optional": true,
        "path": Array [
          "projenUpgradeSecret",
        ],
        "switch": "projen-upgrade-secret",
        "type": "string",
      },
      Object {
        "default": "[ \\"master\\" ] - based on the value of defaultReleaseBranch.",
        "docs": "Branches which trigger a release.",
        "name": "releaseBranches",
        "optional": true,
        "path": Array [
          "releaseBranches",
        ],
        "switch": "release-branches",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Automatically release new versions every commit to one of branches in \`releaseBranches\`.",
        "name": "releaseEveryCommit",
        "optional": true,
        "path": Array [
          "releaseEveryCommit",
        ],
        "switch": "release-every-commit",
        "type": "boolean",
      },
      Object {
        "default": "no scheduled releases",
        "docs": "CRON schedule to trigger new releases.",
        "name": "releaseSchedule",
        "optional": true,
        "path": Array [
          "releaseSchedule",
        ],
        "switch": "release-schedule",
        "type": "string",
      },
      Object {
        "default": "false",
        "docs": "Automatically release to npm when new versions are introduced.",
        "name": "releaseToNpm",
        "optional": true,
        "path": Array [
          "releaseToNpm",
        ],
        "switch": "release-to-npm",
        "type": "boolean",
      },
      Object {
        "default": "true",
        "docs": "Define a GitHub workflow for releasing from \\"master\\" when new versions are bumped.",
        "name": "releaseWorkflow",
        "optional": true,
        "path": Array [
          "releaseWorkflow",
        ],
        "switch": "release-workflow",
        "type": "boolean",
      },
      Object {
        "default": "$GIT_REMOTE",
        "docs": "Git repository URL.",
        "name": "repository",
        "path": Array [
          "repository",
        ],
        "switch": "repository",
        "type": "string",
      },
      Object {
        "default": "\\".\\"",
        "name": "rootdir",
        "optional": true,
        "path": Array [
          "rootdir",
        ],
        "switch": "rootdir",
        "type": "string",
      },
      Object {
        "default": "{}",
        "docs": "npm scripts to include.",
        "name": "scripts",
        "optional": true,
        "path": Array [
          "scripts",
        ],
        "switch": "scripts",
        "type": "unknown",
      },
      Object {
        "default": "\\"src\\"",
        "docs": "Typescript sources directory.",
        "name": "srcdir",
        "optional": true,
        "path": Array [
          "srcdir",
        ],
        "switch": "srcdir",
        "type": "string",
      },
      Object {
        "name": "stability",
        "optional": true,
        "path": Array [
          "stability",
        ],
        "switch": "stability",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Defines a \`yarn start\` interactive experience.",
        "name": "start",
        "optional": true,
        "path": Array [
          "start",
        ],
        "switch": "start",
        "type": "boolean",
      },
      Object {
        "default": "\\"test\\"",
        "docs": "Tests directory.",
        "name": "testdir",
        "optional": true,
        "path": Array [
          "testdir",
        ],
        "switch": "testdir",
        "type": "string",
      },
      Object {
        "default": "\\"yarn install --frozen-lockfile && yarn projen\\"",
        "docs": "Workflow steps to use in order to bootstrap this repo.",
        "name": "workflowBootstrapSteps",
        "optional": true,
        "path": Array [
          "workflowBootstrapSteps",
        ],
        "switch": "workflow-bootstrap-steps",
        "type": "unknown",
      },
      Object {
        "default": "default image",
        "docs": "Container image to use for GitHub workflows.",
        "name": "workflowContainerImage",
        "optional": true,
        "path": Array [
          "workflowContainerImage",
        ],
        "switch": "workflow-container-image",
        "type": "string",
      },
      Object {
        "default": "same as \`minNodeVersion\`",
        "docs": "The node version to use in GitHub workflows.",
        "name": "workflowNodeVersion",
        "optional": true,
        "path": Array [
          "workflowNodeVersion",
        ],
        "switch": "workflow-node-version",
        "type": "string",
      },
    ],
    "pjid": "awscdk-construct",
    "typename": "AwsCdkConstructLibrary",
  },
  Object {
    "docs": "CDK8s construct library project.",
    "docsurl": "https://github.com/eladb/projen/blob/master/API.md#projen-constructlibrarycdk8s",
    "fqn": "projen.ConstructLibraryCdk8s",
    "options": Array [
      Object {
        "default": "true",
        "docs": "Allow the project to include \`peerDependencies\` and \`bundledDependencies\`.",
        "name": "allowLibraryDependencies",
        "optional": true,
        "path": Array [
          "allowLibraryDependencies",
        ],
        "switch": "allow-library-dependencies",
        "type": "boolean",
      },
      Object {
        "default": "true",
        "docs": "Checks that after build there are no modified files on git.",
        "name": "antitamper",
        "optional": true,
        "path": Array [
          "antitamper",
        ],
        "switch": "antitamper",
        "type": "boolean",
      },
      Object {
        "default": "$GIT_USER_EMAIL",
        "docs": "Email or URL of the library author.",
        "name": "authorAddress",
        "path": Array [
          "authorAddress",
        ],
        "switch": "author-address",
        "type": "string",
      },
      Object {
        "name": "authorEmail",
        "optional": true,
        "path": Array [
          "authorEmail",
        ],
        "switch": "author-email",
        "type": "string",
      },
      Object {
        "default": "$GIT_USER_NAME",
        "docs": "The name of the library author.",
        "name": "authorName",
        "path": Array [
          "authorName",
        ],
        "switch": "author-name",
        "type": "string",
      },
      Object {
        "name": "authorOrganization",
        "optional": true,
        "path": Array [
          "authorOrganization",
        ],
        "switch": "author-organization",
        "type": "boolean",
      },
      Object {
        "name": "authorUrl",
        "optional": true,
        "path": Array [
          "authorUrl",
        ],
        "switch": "author-url",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Automatically add all executables under the \`bin\` directory to your \`package.json\` file under the \`bin\` section.",
        "name": "autoDetectBin",
        "optional": true,
        "path": Array [
          "autoDetectBin",
        ],
        "switch": "auto-detect-bin",
        "type": "boolean",
      },
      Object {
        "docs": "Binary programs vended with your module.",
        "name": "bin",
        "optional": true,
        "path": Array [
          "bin",
        ],
        "switch": "bin",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Define a GitHub workflow for building PRs.",
        "name": "buildWorkflow",
        "optional": true,
        "path": Array [
          "buildWorkflow",
        ],
        "switch": "build-workflow",
        "type": "boolean",
      },
      Object {
        "name": "bundledDependencies",
        "optional": true,
        "path": Array [
          "bundledDependencies",
        ],
        "switch": "bundled-dependencies",
        "type": "unknown",
      },
      Object {
        "name": "bundledDeps",
        "optional": true,
        "path": Array [
          "bundledDeps",
        ],
        "switch": "bundled-deps",
        "type": "unknown",
      },
      Object {
        "default": "0.28.0",
        "docs": "Minimum target version this library is tested against.",
        "name": "cdk8sVersion",
        "path": Array [
          "cdk8sVersion",
        ],
        "switch": "cdk8s-version",
        "type": "string",
      },
      Object {
        "default": "false",
        "docs": "Automatically run API compatibility test against the latest version published to npm after compilation.",
        "name": "compat",
        "optional": true,
        "path": Array [
          "compat",
        ],
        "switch": "compat",
        "type": "boolean",
      },
      Object {
        "default": ".compatignore",
        "docs": "Name of the ignore file for API compatibility tests.",
        "name": "compatIgnore",
        "optional": true,
        "path": Array [
          "compatIgnore",
        ],
        "switch": "compat-ignore",
        "type": "string",
      },
      Object {
        "default": "defaults to the value of authorName or \\"\\" if \`authorName\` is undefined.",
        "docs": "License copyright owner.",
        "name": "copyrightOwner",
        "optional": true,
        "path": Array [
          "copyrightOwner",
        ],
        "switch": "copyright-owner",
        "type": "string",
      },
      Object {
        "default": "current year",
        "docs": "The copyright years to put in the LICENSE file.",
        "name": "copyrightPeriod",
        "optional": true,
        "path": Array [
          "copyrightPeriod",
        ],
        "switch": "copyright-period",
        "type": "string",
      },
      Object {
        "default": "'master'",
        "docs": "The name of the main release branch.",
        "name": "defaultReleaseBranch",
        "optional": true,
        "path": Array [
          "defaultReleaseBranch",
        ],
        "switch": "default-release-branch",
        "type": "string",
      },
      Object {
        "default": "true;",
        "docs": "Include dependabot configuration.",
        "name": "dependabot",
        "optional": true,
        "path": Array [
          "dependabot",
        ],
        "switch": "dependabot",
        "type": "boolean",
      },
      Object {
        "name": "dependencies",
        "optional": true,
        "path": Array [
          "dependencies",
        ],
        "switch": "dependencies",
        "type": "unknown",
      },
      Object {
        "name": "deps",
        "optional": true,
        "path": Array [
          "deps",
        ],
        "switch": "deps",
        "type": "unknown",
      },
      Object {
        "docs": "Library description.",
        "name": "description",
        "optional": true,
        "path": Array [
          "description",
        ],
        "switch": "description",
        "type": "string",
      },
      Object {
        "name": "devDependencies",
        "optional": true,
        "path": Array [
          "devDependencies",
        ],
        "switch": "dev-dependencies",
        "type": "unknown",
      },
      Object {
        "name": "devDeps",
        "optional": true,
        "path": Array [
          "devDeps",
        ],
        "switch": "dev-deps",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Automatically generate API.md from jsii.",
        "name": "docgen",
        "optional": true,
        "path": Array [
          "docgen",
        ],
        "switch": "docgen",
        "type": "boolean",
      },
      Object {
        "default": "lib/index.js",
        "docs": "Module entrypoint (\`main\` in \`package.json\`).",
        "name": "entrypoint",
        "optional": true,
        "path": Array [
          "entrypoint",
        ],
        "switch": "entrypoint",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Install eslint.",
        "name": "eslint",
        "optional": true,
        "path": Array [
          "eslint",
        ],
        "switch": "eslint",
        "type": "boolean",
      },
      Object {
        "default": "true",
        "docs": "Use jest for unit tests.",
        "name": "jest",
        "optional": true,
        "path": Array [
          "jest",
        ],
        "switch": "jest",
        "type": "boolean",
      },
      Object {
        "docs": "Keywords to include in \`package.json\`.",
        "name": "keywords",
        "optional": true,
        "path": Array [
          "keywords",
        ],
        "switch": "keywords",
        "type": "unknown",
      },
      Object {
        "default": "\\"lib\\"",
        "docs": "Compiler artifacts output directory.",
        "name": "libdir",
        "optional": true,
        "path": Array [
          "libdir",
        ],
        "switch": "libdir",
        "type": "string",
      },
      Object {
        "name": "license",
        "optional": true,
        "path": Array [
          "license",
        ],
        "switch": "license",
        "type": "string",
      },
      Object {
        "default": "no max",
        "docs": "Minimum node.js version to require via \`engines\` (inclusive).",
        "name": "maxNodeVersion",
        "optional": true,
        "path": Array [
          "maxNodeVersion",
        ],
        "switch": "max-node-version",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Adds mergify configuration.",
        "name": "mergify",
        "optional": true,
        "path": Array [
          "mergify",
        ],
        "switch": "mergify",
        "type": "boolean",
      },
      Object {
        "default": "\\"auto-merge\\"",
        "docs": "Automatically merge PRs that build successfully and have this label.",
        "name": "mergifyAutoMergeLabel",
        "optional": true,
        "path": Array [
          "mergifyAutoMergeLabel",
        ],
        "switch": "mergify-auto-merge-label",
        "type": "string",
      },
      Object {
        "default": "no \\"engines\\" specified",
        "docs": "Node.js version to require via package.json \`engines\` (inclusive).",
        "name": "minNodeVersion",
        "optional": true,
        "path": Array [
          "minNodeVersion",
        ],
        "switch": "min-node-version",
        "type": "string",
      },
      Object {
        "default": "$BASEDIR",
        "docs": "The name of the library.",
        "name": "name",
        "path": Array [
          "name",
        ],
        "switch": "name",
        "type": "string",
      },
      Object {
        "default": "\\"latest\\"",
        "docs": "The dist-tag to use when releasing to npm.",
        "name": "npmDistTag",
        "optional": true,
        "path": Array [
          "npmDistTag",
        ],
        "switch": "npm-dist-tag",
        "type": "string",
      },
      Object {
        "default": "\\"registry.npmjs.org\\"",
        "docs": "The registry url to use when releasing packages.",
        "name": "npmRegistry",
        "optional": true,
        "path": Array [
          "npmRegistry",
        ],
        "switch": "npm-registry",
        "type": "string",
      },
      Object {
        "docs": "Additional entries to .npmignore.",
        "name": "npmignore",
        "optional": true,
        "path": Array [
          "npmignore",
        ],
        "switch": "npmignore",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Defines an .npmignore file. Normally this is only needed for libraries that are packaged as tarballs.",
        "name": "npmignoreEnabled",
        "optional": true,
        "path": Array [
          "npmignoreEnabled",
        ],
        "switch": "npmignore-enabled",
        "type": "boolean",
      },
      Object {
        "name": "peerDependencies",
        "optional": true,
        "path": Array [
          "peerDependencies",
        ],
        "switch": "peer-dependencies",
        "type": "unknown",
      },
      Object {
        "name": "peerDeps",
        "optional": true,
        "path": Array [
          "peerDeps",
        ],
        "switch": "peer-deps",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Indicates of \\"projen\\" should be installed as a devDependency.",
        "name": "projenDevDependency",
        "optional": true,
        "path": Array [
          "projenDevDependency",
        ],
        "switch": "projen-dev-dependency",
        "type": "boolean",
      },
      Object {
        "default": "\\"true\\" if mergify auto-merge is enabled (default)",
        "docs": "Automatically merge projen upgrade PRs when build passes.",
        "name": "projenUpgradeAutoMerge",
        "optional": true,
        "path": Array [
          "projenUpgradeAutoMerge",
        ],
        "switch": "projen-upgrade-auto-merge",
        "type": "boolean",
      },
      Object {
        "default": "[ '0 6 * * *' ]",
        "docs": "Customize the projenUpgrade schedule in cron expression.",
        "name": "projenUpgradeSchedule",
        "optional": true,
        "path": Array [
          "projenUpgradeSchedule",
        ],
        "switch": "projen-upgrade-schedule",
        "type": "unknown",
      },
      Object {
        "default": "no automatic projen upgrade pull requests",
        "docs": "Periodically submits a pull request for projen upgrades (executes \`yarn projen:upgrade\`).",
        "name": "projenUpgradeSecret",
        "optional": true,
        "path": Array [
          "projenUpgradeSecret",
        ],
        "switch": "projen-upgrade-secret",
        "type": "string",
      },
      Object {
        "default": "[ \\"master\\" ] - based on the value of defaultReleaseBranch.",
        "docs": "Branches which trigger a release.",
        "name": "releaseBranches",
        "optional": true,
        "path": Array [
          "releaseBranches",
        ],
        "switch": "release-branches",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Automatically release new versions every commit to one of branches in \`releaseBranches\`.",
        "name": "releaseEveryCommit",
        "optional": true,
        "path": Array [
          "releaseEveryCommit",
        ],
        "switch": "release-every-commit",
        "type": "boolean",
      },
      Object {
        "default": "no scheduled releases",
        "docs": "CRON schedule to trigger new releases.",
        "name": "releaseSchedule",
        "optional": true,
        "path": Array [
          "releaseSchedule",
        ],
        "switch": "release-schedule",
        "type": "string",
      },
      Object {
        "default": "false",
        "docs": "Automatically release to npm when new versions are introduced.",
        "name": "releaseToNpm",
        "optional": true,
        "path": Array [
          "releaseToNpm",
        ],
        "switch": "release-to-npm",
        "type": "boolean",
      },
      Object {
        "default": "true",
        "docs": "Define a GitHub workflow for releasing from \\"master\\" when new versions are bumped.",
        "name": "releaseWorkflow",
        "optional": true,
        "path": Array [
          "releaseWorkflow",
        ],
        "switch": "release-workflow",
        "type": "boolean",
      },
      Object {
        "default": "$GIT_REMOTE",
        "docs": "Git repository URL.",
        "name": "repository",
        "path": Array [
          "repository",
        ],
        "switch": "repository",
        "type": "string",
      },
      Object {
        "default": "\\".\\"",
        "name": "rootdir",
        "optional": true,
        "path": Array [
          "rootdir",
        ],
        "switch": "rootdir",
        "type": "string",
      },
      Object {
        "default": "{}",
        "docs": "npm scripts to include.",
        "name": "scripts",
        "optional": true,
        "path": Array [
          "scripts",
        ],
        "switch": "scripts",
        "type": "unknown",
      },
      Object {
        "default": "\\"src\\"",
        "docs": "Typescript sources directory.",
        "name": "srcdir",
        "optional": true,
        "path": Array [
          "srcdir",
        ],
        "switch": "srcdir",
        "type": "string",
      },
      Object {
        "name": "stability",
        "optional": true,
        "path": Array [
          "stability",
        ],
        "switch": "stability",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Defines a \`yarn start\` interactive experience.",
        "name": "start",
        "optional": true,
        "path": Array [
          "start",
        ],
        "switch": "start",
        "type": "boolean",
      },
      Object {
        "default": "\\"test\\"",
        "docs": "Tests directory.",
        "name": "testdir",
        "optional": true,
        "path": Array [
          "testdir",
        ],
        "switch": "testdir",
        "type": "string",
      },
      Object {
        "default": "\\"yarn install --frozen-lockfile && yarn projen\\"",
        "docs": "Workflow steps to use in order to bootstrap this repo.",
        "name": "workflowBootstrapSteps",
        "optional": true,
        "path": Array [
          "workflowBootstrapSteps",
        ],
        "switch": "workflow-bootstrap-steps",
        "type": "unknown",
      },
      Object {
        "default": "default image",
        "docs": "Container image to use for GitHub workflows.",
        "name": "workflowContainerImage",
        "optional": true,
        "path": Array [
          "workflowContainerImage",
        ],
        "switch": "workflow-container-image",
        "type": "string",
      },
      Object {
        "default": "same as \`minNodeVersion\`",
        "docs": "The node version to use in GitHub workflows.",
        "name": "workflowNodeVersion",
        "optional": true,
        "path": Array [
          "workflowNodeVersion",
        ],
        "switch": "workflow-node-version",
        "type": "string",
      },
    ],
    "pjid": "cdk8s-construct",
    "typename": "ConstructLibraryCdk8s",
  },
  Object {
    "docs": "Multi-language jsii library project.",
    "docsurl": "https://github.com/eladb/projen/blob/master/API.md#projen-jsiiproject",
    "fqn": "projen.JsiiProject",
    "options": Array [
      Object {
        "default": "true",
        "docs": "Allow the project to include \`peerDependencies\` and \`bundledDependencies\`.",
        "name": "allowLibraryDependencies",
        "optional": true,
        "path": Array [
          "allowLibraryDependencies",
        ],
        "switch": "allow-library-dependencies",
        "type": "boolean",
      },
      Object {
        "default": "true",
        "docs": "Checks that after build there are no modified files on git.",
        "name": "antitamper",
        "optional": true,
        "path": Array [
          "antitamper",
        ],
        "switch": "antitamper",
        "type": "boolean",
      },
      Object {
        "default": "$GIT_USER_EMAIL",
        "docs": "Email or URL of the library author.",
        "name": "authorAddress",
        "path": Array [
          "authorAddress",
        ],
        "switch": "author-address",
        "type": "string",
      },
      Object {
        "name": "authorEmail",
        "optional": true,
        "path": Array [
          "authorEmail",
        ],
        "switch": "author-email",
        "type": "string",
      },
      Object {
        "default": "$GIT_USER_NAME",
        "docs": "The name of the library author.",
        "name": "authorName",
        "path": Array [
          "authorName",
        ],
        "switch": "author-name",
        "type": "string",
      },
      Object {
        "name": "authorOrganization",
        "optional": true,
        "path": Array [
          "authorOrganization",
        ],
        "switch": "author-organization",
        "type": "boolean",
      },
      Object {
        "name": "authorUrl",
        "optional": true,
        "path": Array [
          "authorUrl",
        ],
        "switch": "author-url",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Automatically add all executables under the \`bin\` directory to your \`package.json\` file under the \`bin\` section.",
        "name": "autoDetectBin",
        "optional": true,
        "path": Array [
          "autoDetectBin",
        ],
        "switch": "auto-detect-bin",
        "type": "boolean",
      },
      Object {
        "docs": "Binary programs vended with your module.",
        "name": "bin",
        "optional": true,
        "path": Array [
          "bin",
        ],
        "switch": "bin",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Define a GitHub workflow for building PRs.",
        "name": "buildWorkflow",
        "optional": true,
        "path": Array [
          "buildWorkflow",
        ],
        "switch": "build-workflow",
        "type": "boolean",
      },
      Object {
        "name": "bundledDependencies",
        "optional": true,
        "path": Array [
          "bundledDependencies",
        ],
        "switch": "bundled-dependencies",
        "type": "unknown",
      },
      Object {
        "name": "bundledDeps",
        "optional": true,
        "path": Array [
          "bundledDeps",
        ],
        "switch": "bundled-deps",
        "type": "unknown",
      },
      Object {
        "default": "false",
        "docs": "Automatically run API compatibility test against the latest version published to npm after compilation.",
        "name": "compat",
        "optional": true,
        "path": Array [
          "compat",
        ],
        "switch": "compat",
        "type": "boolean",
      },
      Object {
        "default": ".compatignore",
        "docs": "Name of the ignore file for API compatibility tests.",
        "name": "compatIgnore",
        "optional": true,
        "path": Array [
          "compatIgnore",
        ],
        "switch": "compat-ignore",
        "type": "string",
      },
      Object {
        "default": "defaults to the value of authorName or \\"\\" if \`authorName\` is undefined.",
        "docs": "License copyright owner.",
        "name": "copyrightOwner",
        "optional": true,
        "path": Array [
          "copyrightOwner",
        ],
        "switch": "copyright-owner",
        "type": "string",
      },
      Object {
        "default": "current year",
        "docs": "The copyright years to put in the LICENSE file.",
        "name": "copyrightPeriod",
        "optional": true,
        "path": Array [
          "copyrightPeriod",
        ],
        "switch": "copyright-period",
        "type": "string",
      },
      Object {
        "default": "'master'",
        "docs": "The name of the main release branch.",
        "name": "defaultReleaseBranch",
        "optional": true,
        "path": Array [
          "defaultReleaseBranch",
        ],
        "switch": "default-release-branch",
        "type": "string",
      },
      Object {
        "default": "true;",
        "docs": "Include dependabot configuration.",
        "name": "dependabot",
        "optional": true,
        "path": Array [
          "dependabot",
        ],
        "switch": "dependabot",
        "type": "boolean",
      },
      Object {
        "name": "dependencies",
        "optional": true,
        "path": Array [
          "dependencies",
        ],
        "switch": "dependencies",
        "type": "unknown",
      },
      Object {
        "name": "deps",
        "optional": true,
        "path": Array [
          "deps",
        ],
        "switch": "deps",
        "type": "unknown",
      },
      Object {
        "docs": "Library description.",
        "name": "description",
        "optional": true,
        "path": Array [
          "description",
        ],
        "switch": "description",
        "type": "string",
      },
      Object {
        "name": "devDependencies",
        "optional": true,
        "path": Array [
          "devDependencies",
        ],
        "switch": "dev-dependencies",
        "type": "unknown",
      },
      Object {
        "name": "devDeps",
        "optional": true,
        "path": Array [
          "devDeps",
        ],
        "switch": "dev-deps",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Automatically generate API.md from jsii.",
        "name": "docgen",
        "optional": true,
        "path": Array [
          "docgen",
        ],
        "switch": "docgen",
        "type": "boolean",
      },
      Object {
        "default": "lib/index.js",
        "docs": "Module entrypoint (\`main\` in \`package.json\`).",
        "name": "entrypoint",
        "optional": true,
        "path": Array [
          "entrypoint",
        ],
        "switch": "entrypoint",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Install eslint.",
        "name": "eslint",
        "optional": true,
        "path": Array [
          "eslint",
        ],
        "switch": "eslint",
        "type": "boolean",
      },
      Object {
        "default": "true",
        "docs": "Use jest for unit tests.",
        "name": "jest",
        "optional": true,
        "path": Array [
          "jest",
        ],
        "switch": "jest",
        "type": "boolean",
      },
      Object {
        "docs": "Keywords to include in \`package.json\`.",
        "name": "keywords",
        "optional": true,
        "path": Array [
          "keywords",
        ],
        "switch": "keywords",
        "type": "unknown",
      },
      Object {
        "default": "\\"lib\\"",
        "docs": "Compiler artifacts output directory.",
        "name": "libdir",
        "optional": true,
        "path": Array [
          "libdir",
        ],
        "switch": "libdir",
        "type": "string",
      },
      Object {
        "name": "license",
        "optional": true,
        "path": Array [
          "license",
        ],
        "switch": "license",
        "type": "string",
      },
      Object {
        "default": "no max",
        "docs": "Minimum node.js version to require via \`engines\` (inclusive).",
        "name": "maxNodeVersion",
        "optional": true,
        "path": Array [
          "maxNodeVersion",
        ],
        "switch": "max-node-version",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Adds mergify configuration.",
        "name": "mergify",
        "optional": true,
        "path": Array [
          "mergify",
        ],
        "switch": "mergify",
        "type": "boolean",
      },
      Object {
        "default": "\\"auto-merge\\"",
        "docs": "Automatically merge PRs that build successfully and have this label.",
        "name": "mergifyAutoMergeLabel",
        "optional": true,
        "path": Array [
          "mergifyAutoMergeLabel",
        ],
        "switch": "mergify-auto-merge-label",
        "type": "string",
      },
      Object {
        "default": "no \\"engines\\" specified",
        "docs": "Node.js version to require via package.json \`engines\` (inclusive).",
        "name": "minNodeVersion",
        "optional": true,
        "path": Array [
          "minNodeVersion",
        ],
        "switch": "min-node-version",
        "type": "string",
      },
      Object {
        "default": "$BASEDIR",
        "docs": "The name of the library.",
        "name": "name",
        "path": Array [
          "name",
        ],
        "switch": "name",
        "type": "string",
      },
      Object {
        "default": "\\"latest\\"",
        "docs": "The dist-tag to use when releasing to npm.",
        "name": "npmDistTag",
        "optional": true,
        "path": Array [
          "npmDistTag",
        ],
        "switch": "npm-dist-tag",
        "type": "string",
      },
      Object {
        "default": "\\"registry.npmjs.org\\"",
        "docs": "The registry url to use when releasing packages.",
        "name": "npmRegistry",
        "optional": true,
        "path": Array [
          "npmRegistry",
        ],
        "switch": "npm-registry",
        "type": "string",
      },
      Object {
        "docs": "Additional entries to .npmignore.",
        "name": "npmignore",
        "optional": true,
        "path": Array [
          "npmignore",
        ],
        "switch": "npmignore",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Defines an .npmignore file. Normally this is only needed for libraries that are packaged as tarballs.",
        "name": "npmignoreEnabled",
        "optional": true,
        "path": Array [
          "npmignoreEnabled",
        ],
        "switch": "npmignore-enabled",
        "type": "boolean",
      },
      Object {
        "name": "peerDependencies",
        "optional": true,
        "path": Array [
          "peerDependencies",
        ],
        "switch": "peer-dependencies",
        "type": "unknown",
      },
      Object {
        "name": "peerDeps",
        "optional": true,
        "path": Array [
          "peerDeps",
        ],
        "switch": "peer-deps",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Indicates of \\"projen\\" should be installed as a devDependency.",
        "name": "projenDevDependency",
        "optional": true,
        "path": Array [
          "projenDevDependency",
        ],
        "switch": "projen-dev-dependency",
        "type": "boolean",
      },
      Object {
        "default": "\\"true\\" if mergify auto-merge is enabled (default)",
        "docs": "Automatically merge projen upgrade PRs when build passes.",
        "name": "projenUpgradeAutoMerge",
        "optional": true,
        "path": Array [
          "projenUpgradeAutoMerge",
        ],
        "switch": "projen-upgrade-auto-merge",
        "type": "boolean",
      },
      Object {
        "default": "[ '0 6 * * *' ]",
        "docs": "Customize the projenUpgrade schedule in cron expression.",
        "name": "projenUpgradeSchedule",
        "optional": true,
        "path": Array [
          "projenUpgradeSchedule",
        ],
        "switch": "projen-upgrade-schedule",
        "type": "unknown",
      },
      Object {
        "default": "no automatic projen upgrade pull requests",
        "docs": "Periodically submits a pull request for projen upgrades (executes \`yarn projen:upgrade\`).",
        "name": "projenUpgradeSecret",
        "optional": true,
        "path": Array [
          "projenUpgradeSecret",
        ],
        "switch": "projen-upgrade-secret",
        "type": "string",
      },
      Object {
        "default": "[ \\"master\\" ] - based on the value of defaultReleaseBranch.",
        "docs": "Branches which trigger a release.",
        "name": "releaseBranches",
        "optional": true,
        "path": Array [
          "releaseBranches",
        ],
        "switch": "release-branches",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Automatically release new versions every commit to one of branches in \`releaseBranches\`.",
        "name": "releaseEveryCommit",
        "optional": true,
        "path": Array [
          "releaseEveryCommit",
        ],
        "switch": "release-every-commit",
        "type": "boolean",
      },
      Object {
        "default": "no scheduled releases",
        "docs": "CRON schedule to trigger new releases.",
        "name": "releaseSchedule",
        "optional": true,
        "path": Array [
          "releaseSchedule",
        ],
        "switch": "release-schedule",
        "type": "string",
      },
      Object {
        "default": "false",
        "docs": "Automatically release to npm when new versions are introduced.",
        "name": "releaseToNpm",
        "optional": true,
        "path": Array [
          "releaseToNpm",
        ],
        "switch": "release-to-npm",
        "type": "boolean",
      },
      Object {
        "default": "true",
        "docs": "Define a GitHub workflow for releasing from \\"master\\" when new versions are bumped.",
        "name": "releaseWorkflow",
        "optional": true,
        "path": Array [
          "releaseWorkflow",
        ],
        "switch": "release-workflow",
        "type": "boolean",
      },
      Object {
        "default": "$GIT_REMOTE",
        "docs": "Git repository URL.",
        "name": "repository",
        "path": Array [
          "repository",
        ],
        "switch": "repository",
        "type": "string",
      },
      Object {
        "default": "\\".\\"",
        "name": "rootdir",
        "optional": true,
        "path": Array [
          "rootdir",
        ],
        "switch": "rootdir",
        "type": "string",
      },
      Object {
        "default": "{}",
        "docs": "npm scripts to include.",
        "name": "scripts",
        "optional": true,
        "path": Array [
          "scripts",
        ],
        "switch": "scripts",
        "type": "unknown",
      },
      Object {
        "default": "\\"src\\"",
        "docs": "Typescript sources directory.",
        "name": "srcdir",
        "optional": true,
        "path": Array [
          "srcdir",
        ],
        "switch": "srcdir",
        "type": "string",
      },
      Object {
        "name": "stability",
        "optional": true,
        "path": Array [
          "stability",
        ],
        "switch": "stability",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Defines a \`yarn start\` interactive experience.",
        "name": "start",
        "optional": true,
        "path": Array [
          "start",
        ],
        "switch": "start",
        "type": "boolean",
      },
      Object {
        "default": "\\"test\\"",
        "docs": "Tests directory.",
        "name": "testdir",
        "optional": true,
        "path": Array [
          "testdir",
        ],
        "switch": "testdir",
        "type": "string",
      },
      Object {
        "default": "\\"yarn install --frozen-lockfile && yarn projen\\"",
        "docs": "Workflow steps to use in order to bootstrap this repo.",
        "name": "workflowBootstrapSteps",
        "optional": true,
        "path": Array [
          "workflowBootstrapSteps",
        ],
        "switch": "workflow-bootstrap-steps",
        "type": "unknown",
      },
      Object {
        "default": "default image",
        "docs": "Container image to use for GitHub workflows.",
        "name": "workflowContainerImage",
        "optional": true,
        "path": Array [
          "workflowContainerImage",
        ],
        "switch": "workflow-container-image",
        "type": "string",
      },
      Object {
        "default": "same as \`minNodeVersion\`",
        "docs": "The node version to use in GitHub workflows.",
        "name": "workflowNodeVersion",
        "optional": true,
        "path": Array [
          "workflowNodeVersion",
        ],
        "switch": "workflow-node-version",
        "type": "string",
      },
    ],
    "pjid": "jsii",
    "typename": "JsiiProject",
  },
  Object {
    "docs": "NextJS project.",
    "docsurl": "https://github.com/eladb/projen/blob/master/API.md#projen-nextjsproject",
    "fqn": "projen.NextJsProject",
    "options": Array [
      Object {
        "default": "true",
        "docs": "Allow the project to include \`peerDependencies\` and \`bundledDependencies\`.",
        "name": "allowLibraryDependencies",
        "optional": true,
        "path": Array [
          "allowLibraryDependencies",
        ],
        "switch": "allow-library-dependencies",
        "type": "boolean",
      },
      Object {
        "default": "true",
        "docs": "Checks that after build there are no modified files on git.",
        "name": "antitamper",
        "optional": true,
        "path": Array [
          "antitamper",
        ],
        "switch": "antitamper",
        "type": "boolean",
      },
      Object {
        "default": "'public'",
        "docs": "Assets directory.",
        "name": "assetsDir",
        "optional": true,
        "path": Array [
          "assetsDir",
        ],
        "switch": "assets-dir",
        "type": "string",
      },
      Object {
        "docs": "Author's e-mail.",
        "name": "authorEmail",
        "optional": true,
        "path": Array [
          "authorEmail",
        ],
        "switch": "author-email",
        "type": "string",
      },
      Object {
        "docs": "Author's name.",
        "name": "authorName",
        "optional": true,
        "path": Array [
          "authorName",
        ],
        "switch": "author-name",
        "type": "string",
      },
      Object {
        "docs": "Author's Organization.",
        "name": "authorOrganization",
        "optional": true,
        "path": Array [
          "authorOrganization",
        ],
        "switch": "author-organization",
        "type": "boolean",
      },
      Object {
        "docs": "Author's URL / Website.",
        "name": "authorUrl",
        "optional": true,
        "path": Array [
          "authorUrl",
        ],
        "switch": "author-url",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Automatically add all executables under the \`bin\` directory to your \`package.json\` file under the \`bin\` section.",
        "name": "autoDetectBin",
        "optional": true,
        "path": Array [
          "autoDetectBin",
        ],
        "switch": "auto-detect-bin",
        "type": "boolean",
      },
      Object {
        "docs": "Binary programs vended with your module.",
        "name": "bin",
        "optional": true,
        "path": Array [
          "bin",
        ],
        "switch": "bin",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Define a GitHub workflow for building PRs.",
        "name": "buildWorkflow",
        "optional": true,
        "path": Array [
          "buildWorkflow",
        ],
        "switch": "build-workflow",
        "type": "boolean",
      },
      Object {
        "name": "bundledDependencies",
        "optional": true,
        "path": Array [
          "bundledDependencies",
        ],
        "switch": "bundled-dependencies",
        "type": "unknown",
      },
      Object {
        "name": "bundledDeps",
        "optional": true,
        "path": Array [
          "bundledDeps",
        ],
        "switch": "bundled-deps",
        "type": "unknown",
      },
      Object {
        "default": "defaults to the value of authorName or \\"\\" if \`authorName\` is undefined.",
        "docs": "License copyright owner.",
        "name": "copyrightOwner",
        "optional": true,
        "path": Array [
          "copyrightOwner",
        ],
        "switch": "copyright-owner",
        "type": "string",
      },
      Object {
        "default": "current year",
        "docs": "The copyright years to put in the LICENSE file.",
        "name": "copyrightPeriod",
        "optional": true,
        "path": Array [
          "copyrightPeriod",
        ],
        "switch": "copyright-period",
        "type": "string",
      },
      Object {
        "default": "'master'",
        "docs": "The name of the main release branch.",
        "name": "defaultReleaseBranch",
        "optional": true,
        "path": Array [
          "defaultReleaseBranch",
        ],
        "switch": "default-release-branch",
        "type": "string",
      },
      Object {
        "default": "true;",
        "docs": "Include dependabot configuration.",
        "name": "dependabot",
        "optional": true,
        "path": Array [
          "dependabot",
        ],
        "switch": "dependabot",
        "type": "boolean",
      },
      Object {
        "name": "dependencies",
        "optional": true,
        "path": Array [
          "dependencies",
        ],
        "switch": "dependencies",
        "type": "unknown",
      },
      Object {
        "name": "deps",
        "optional": true,
        "path": Array [
          "deps",
        ],
        "switch": "deps",
        "type": "unknown",
      },
      Object {
        "docs": "The description is just a string that helps people understand the purpose of the package.",
        "name": "description",
        "optional": true,
        "path": Array [
          "description",
        ],
        "switch": "description",
        "type": "string",
      },
      Object {
        "name": "devDependencies",
        "optional": true,
        "path": Array [
          "devDependencies",
        ],
        "switch": "dev-dependencies",
        "type": "unknown",
      },
      Object {
        "name": "devDeps",
        "optional": true,
        "path": Array [
          "devDeps",
        ],
        "switch": "dev-deps",
        "type": "unknown",
      },
      Object {
        "default": "lib/index.js",
        "docs": "Module entrypoint (\`main\` in \`package.json\`).",
        "name": "entrypoint",
        "optional": true,
        "path": Array [
          "entrypoint",
        ],
        "switch": "entrypoint",
        "type": "string",
      },
      Object {
        "docs": "Additional entries to .gitignore.",
        "name": "gitignore",
        "optional": true,
        "path": Array [
          "gitignore",
        ],
        "switch": "gitignore",
        "type": "unknown",
      },
      Object {
        "docs": "Package's Homepage / Website.",
        "name": "homepage",
        "optional": true,
        "path": Array [
          "homepage",
        ],
        "switch": "homepage",
        "type": "string",
      },
      Object {
        "docs": "Keywords to include in \`package.json\`.",
        "name": "keywords",
        "optional": true,
        "path": Array [
          "keywords",
        ],
        "switch": "keywords",
        "type": "unknown",
      },
      Object {
        "default": "\\"lib\\"",
        "docs": "Compiler artifacts output directory.",
        "name": "libdir",
        "optional": true,
        "path": Array [
          "libdir",
        ],
        "switch": "libdir",
        "type": "string",
      },
      Object {
        "docs": "License's SPDX identifier.",
        "name": "license",
        "optional": true,
        "path": Array [
          "license",
        ],
        "switch": "license",
        "type": "string",
      },
      Object {
        "default": "no max",
        "docs": "Minimum node.js version to require via \`engines\` (inclusive).",
        "name": "maxNodeVersion",
        "optional": true,
        "path": Array [
          "maxNodeVersion",
        ],
        "switch": "max-node-version",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Adds mergify configuration.",
        "name": "mergify",
        "optional": true,
        "path": Array [
          "mergify",
        ],
        "switch": "mergify",
        "type": "boolean",
      },
      Object {
        "default": "\\"auto-merge\\"",
        "docs": "Automatically merge PRs that build successfully and have this label.",
        "name": "mergifyAutoMergeLabel",
        "optional": true,
        "path": Array [
          "mergifyAutoMergeLabel",
        ],
        "switch": "mergify-auto-merge-label",
        "type": "string",
      },
      Object {
        "default": "no \\"engines\\" specified",
        "docs": "Node.js version to require via package.json \`engines\` (inclusive).",
        "name": "minNodeVersion",
        "optional": true,
        "path": Array [
          "minNodeVersion",
        ],
        "switch": "min-node-version",
        "type": "string",
      },
      Object {
        "default": "$BASEDIR",
        "docs": "This is the name of your package.",
        "name": "name",
        "path": Array [
          "name",
        ],
        "switch": "name",
        "type": "string",
      },
      Object {
        "default": "\\"latest\\"",
        "docs": "The dist-tag to use when releasing to npm.",
        "name": "npmDistTag",
        "optional": true,
        "path": Array [
          "npmDistTag",
        ],
        "switch": "npm-dist-tag",
        "type": "string",
      },
      Object {
        "default": "\\"registry.npmjs.org\\"",
        "docs": "The registry url to use when releasing packages.",
        "name": "npmRegistry",
        "optional": true,
        "path": Array [
          "npmRegistry",
        ],
        "switch": "npm-registry",
        "type": "string",
      },
      Object {
        "docs": "Additional entries to .npmignore.",
        "name": "npmignore",
        "optional": true,
        "path": Array [
          "npmignore",
        ],
        "switch": "npmignore",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Defines an .npmignore file. Normally this is only needed for libraries that are packaged as tarballs.",
        "name": "npmignoreEnabled",
        "optional": true,
        "path": Array [
          "npmignoreEnabled",
        ],
        "switch": "npmignore-enabled",
        "type": "boolean",
      },
      Object {
        "default": "'pages'",
        "docs": "Pages directory.",
        "name": "pagesDir",
        "optional": true,
        "path": Array [
          "pagesDir",
        ],
        "switch": "pages-dir",
        "type": "string",
      },
      Object {
        "name": "peerDependencies",
        "optional": true,
        "path": Array [
          "peerDependencies",
        ],
        "switch": "peer-dependencies",
        "type": "unknown",
      },
      Object {
        "name": "peerDeps",
        "optional": true,
        "path": Array [
          "peerDeps",
        ],
        "switch": "peer-deps",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Indicates of \\"projen\\" should be installed as a devDependency.",
        "name": "projenDevDependency",
        "optional": true,
        "path": Array [
          "projenDevDependency",
        ],
        "switch": "projen-dev-dependency",
        "type": "boolean",
      },
      Object {
        "default": "\\"true\\" if mergify auto-merge is enabled (default)",
        "docs": "Automatically merge projen upgrade PRs when build passes.",
        "name": "projenUpgradeAutoMerge",
        "optional": true,
        "path": Array [
          "projenUpgradeAutoMerge",
        ],
        "switch": "projen-upgrade-auto-merge",
        "type": "boolean",
      },
      Object {
        "default": "[ '0 6 * * *' ]",
        "docs": "Customize the projenUpgrade schedule in cron expression.",
        "name": "projenUpgradeSchedule",
        "optional": true,
        "path": Array [
          "projenUpgradeSchedule",
        ],
        "switch": "projen-upgrade-schedule",
        "type": "unknown",
      },
      Object {
        "default": "no automatic projen upgrade pull requests",
        "docs": "Periodically submits a pull request for projen upgrades (executes \`yarn projen:upgrade\`).",
        "name": "projenUpgradeSecret",
        "optional": true,
        "path": Array [
          "projenUpgradeSecret",
        ],
        "switch": "projen-upgrade-secret",
        "type": "string",
      },
      Object {
        "default": "[ \\"master\\" ] - based on the value of defaultReleaseBranch.",
        "docs": "Branches which trigger a release.",
        "name": "releaseBranches",
        "optional": true,
        "path": Array [
          "releaseBranches",
        ],
        "switch": "release-branches",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Automatically release new versions every commit to one of branches in \`releaseBranches\`.",
        "name": "releaseEveryCommit",
        "optional": true,
        "path": Array [
          "releaseEveryCommit",
        ],
        "switch": "release-every-commit",
        "type": "boolean",
      },
      Object {
        "default": "no scheduled releases",
        "docs": "CRON schedule to trigger new releases.",
        "name": "releaseSchedule",
        "optional": true,
        "path": Array [
          "releaseSchedule",
        ],
        "switch": "release-schedule",
        "type": "string",
      },
      Object {
        "default": "false",
        "docs": "Automatically release to npm when new versions are introduced.",
        "name": "releaseToNpm",
        "optional": true,
        "path": Array [
          "releaseToNpm",
        ],
        "switch": "release-to-npm",
        "type": "boolean",
      },
      Object {
        "default": "true",
        "docs": "Define a GitHub workflow for releasing from \\"master\\" when new versions are bumped.",
        "name": "releaseWorkflow",
        "optional": true,
        "path": Array [
          "releaseWorkflow",
        ],
        "switch": "release-workflow",
        "type": "boolean",
      },
      Object {
        "docs": "The repository is the location where the actual code for your package lives.",
        "name": "repository",
        "optional": true,
        "path": Array [
          "repository",
        ],
        "switch": "repository",
        "type": "string",
      },
      Object {
        "docs": "If the package.json for your package is not in the root directory (for example if it is part of a monorepo), you can specify the directory in which it lives.",
        "name": "repositoryDirectory",
        "optional": true,
        "path": Array [
          "repositoryDirectory",
        ],
        "switch": "repository-directory",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Generate one-time sample in \`pages/\` and \`public/\` if there are no files there.",
        "name": "sampleCode",
        "optional": true,
        "path": Array [
          "sampleCode",
        ],
        "switch": "sample-code",
        "type": "boolean",
      },
      Object {
        "default": "{}",
        "docs": "npm scripts to include.",
        "name": "scripts",
        "optional": true,
        "path": Array [
          "scripts",
        ],
        "switch": "scripts",
        "type": "unknown",
      },
      Object {
        "default": "\\"src\\"",
        "docs": "Typescript sources directory.",
        "name": "srcdir",
        "optional": true,
        "path": Array [
          "srcdir",
        ],
        "switch": "srcdir",
        "type": "string",
      },
      Object {
        "docs": "Package's Stability.",
        "name": "stability",
        "optional": true,
        "path": Array [
          "stability",
        ],
        "switch": "stability",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Defines a \`yarn start\` interactive experience.",
        "name": "start",
        "optional": true,
        "path": Array [
          "start",
        ],
        "switch": "start",
        "type": "boolean",
      },
      Object {
        "default": "\\"test\\"",
        "docs": "Tests directory.",
        "name": "testdir",
        "optional": true,
        "path": Array [
          "testdir",
        ],
        "switch": "testdir",
        "type": "string",
      },
      Object {
        "default": "\\"yarn install --frozen-lockfile && yarn projen\\"",
        "docs": "Workflow steps to use in order to bootstrap this repo.",
        "name": "workflowBootstrapSteps",
        "optional": true,
        "path": Array [
          "workflowBootstrapSteps",
        ],
        "switch": "workflow-bootstrap-steps",
        "type": "unknown",
      },
      Object {
        "default": "default image",
        "docs": "Container image to use for GitHub workflows.",
        "name": "workflowContainerImage",
        "optional": true,
        "path": Array [
          "workflowContainerImage",
        ],
        "switch": "workflow-container-image",
        "type": "string",
      },
      Object {
        "default": "same as \`minNodeVersion\`",
        "docs": "The node version to use in GitHub workflows.",
        "name": "workflowNodeVersion",
        "optional": true,
        "path": Array [
          "workflowNodeVersion",
        ],
        "switch": "workflow-node-version",
        "type": "string",
      },
    ],
    "pjid": "nextjs",
    "typename": "NextJsProject",
  },
  Object {
    "docs": "Node.js project.",
    "docsurl": "https://github.com/eladb/projen/blob/master/API.md#projen-nodeproject",
    "fqn": "projen.NodeProject",
    "options": Array [
      Object {
        "default": "true",
        "docs": "Allow the project to include \`peerDependencies\` and \`bundledDependencies\`.",
        "name": "allowLibraryDependencies",
        "optional": true,
        "path": Array [
          "allowLibraryDependencies",
        ],
        "switch": "allow-library-dependencies",
        "type": "boolean",
      },
      Object {
        "default": "true",
        "docs": "Checks that after build there are no modified files on git.",
        "name": "antitamper",
        "optional": true,
        "path": Array [
          "antitamper",
        ],
        "switch": "antitamper",
        "type": "boolean",
      },
      Object {
        "docs": "Author's e-mail.",
        "name": "authorEmail",
        "optional": true,
        "path": Array [
          "authorEmail",
        ],
        "switch": "author-email",
        "type": "string",
      },
      Object {
        "docs": "Author's name.",
        "name": "authorName",
        "optional": true,
        "path": Array [
          "authorName",
        ],
        "switch": "author-name",
        "type": "string",
      },
      Object {
        "docs": "Author's Organization.",
        "name": "authorOrganization",
        "optional": true,
        "path": Array [
          "authorOrganization",
        ],
        "switch": "author-organization",
        "type": "boolean",
      },
      Object {
        "docs": "Author's URL / Website.",
        "name": "authorUrl",
        "optional": true,
        "path": Array [
          "authorUrl",
        ],
        "switch": "author-url",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Automatically add all executables under the \`bin\` directory to your \`package.json\` file under the \`bin\` section.",
        "name": "autoDetectBin",
        "optional": true,
        "path": Array [
          "autoDetectBin",
        ],
        "switch": "auto-detect-bin",
        "type": "boolean",
      },
      Object {
        "docs": "Binary programs vended with your module.",
        "name": "bin",
        "optional": true,
        "path": Array [
          "bin",
        ],
        "switch": "bin",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Define a GitHub workflow for building PRs.",
        "name": "buildWorkflow",
        "optional": true,
        "path": Array [
          "buildWorkflow",
        ],
        "switch": "build-workflow",
        "type": "boolean",
      },
      Object {
        "name": "bundledDependencies",
        "optional": true,
        "path": Array [
          "bundledDependencies",
        ],
        "switch": "bundled-dependencies",
        "type": "unknown",
      },
      Object {
        "name": "bundledDeps",
        "optional": true,
        "path": Array [
          "bundledDeps",
        ],
        "switch": "bundled-deps",
        "type": "unknown",
      },
      Object {
        "default": "defaults to the value of authorName or \\"\\" if \`authorName\` is undefined.",
        "docs": "License copyright owner.",
        "name": "copyrightOwner",
        "optional": true,
        "path": Array [
          "copyrightOwner",
        ],
        "switch": "copyright-owner",
        "type": "string",
      },
      Object {
        "default": "current year",
        "docs": "The copyright years to put in the LICENSE file.",
        "name": "copyrightPeriod",
        "optional": true,
        "path": Array [
          "copyrightPeriod",
        ],
        "switch": "copyright-period",
        "type": "string",
      },
      Object {
        "default": "'master'",
        "docs": "The name of the main release branch.",
        "name": "defaultReleaseBranch",
        "optional": true,
        "path": Array [
          "defaultReleaseBranch",
        ],
        "switch": "default-release-branch",
        "type": "string",
      },
      Object {
        "default": "true;",
        "docs": "Include dependabot configuration.",
        "name": "dependabot",
        "optional": true,
        "path": Array [
          "dependabot",
        ],
        "switch": "dependabot",
        "type": "boolean",
      },
      Object {
        "name": "dependencies",
        "optional": true,
        "path": Array [
          "dependencies",
        ],
        "switch": "dependencies",
        "type": "unknown",
      },
      Object {
        "name": "deps",
        "optional": true,
        "path": Array [
          "deps",
        ],
        "switch": "deps",
        "type": "unknown",
      },
      Object {
        "docs": "The description is just a string that helps people understand the purpose of the package.",
        "name": "description",
        "optional": true,
        "path": Array [
          "description",
        ],
        "switch": "description",
        "type": "string",
      },
      Object {
        "name": "devDependencies",
        "optional": true,
        "path": Array [
          "devDependencies",
        ],
        "switch": "dev-dependencies",
        "type": "unknown",
      },
      Object {
        "name": "devDeps",
        "optional": true,
        "path": Array [
          "devDeps",
        ],
        "switch": "dev-deps",
        "type": "unknown",
      },
      Object {
        "default": "lib/index.js",
        "docs": "Module entrypoint (\`main\` in \`package.json\`).",
        "name": "entrypoint",
        "optional": true,
        "path": Array [
          "entrypoint",
        ],
        "switch": "entrypoint",
        "type": "string",
      },
      Object {
        "docs": "Additional entries to .gitignore.",
        "name": "gitignore",
        "optional": true,
        "path": Array [
          "gitignore",
        ],
        "switch": "gitignore",
        "type": "unknown",
      },
      Object {
        "docs": "Package's Homepage / Website.",
        "name": "homepage",
        "optional": true,
        "path": Array [
          "homepage",
        ],
        "switch": "homepage",
        "type": "string",
      },
      Object {
        "docs": "Keywords to include in \`package.json\`.",
        "name": "keywords",
        "optional": true,
        "path": Array [
          "keywords",
        ],
        "switch": "keywords",
        "type": "unknown",
      },
      Object {
        "default": "\\"lib\\"",
        "docs": "Compiler artifacts output directory.",
        "name": "libdir",
        "optional": true,
        "path": Array [
          "libdir",
        ],
        "switch": "libdir",
        "type": "string",
      },
      Object {
        "docs": "License's SPDX identifier.",
        "name": "license",
        "optional": true,
        "path": Array [
          "license",
        ],
        "switch": "license",
        "type": "string",
      },
      Object {
        "default": "no max",
        "docs": "Minimum node.js version to require via \`engines\` (inclusive).",
        "name": "maxNodeVersion",
        "optional": true,
        "path": Array [
          "maxNodeVersion",
        ],
        "switch": "max-node-version",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Adds mergify configuration.",
        "name": "mergify",
        "optional": true,
        "path": Array [
          "mergify",
        ],
        "switch": "mergify",
        "type": "boolean",
      },
      Object {
        "default": "\\"auto-merge\\"",
        "docs": "Automatically merge PRs that build successfully and have this label.",
        "name": "mergifyAutoMergeLabel",
        "optional": true,
        "path": Array [
          "mergifyAutoMergeLabel",
        ],
        "switch": "mergify-auto-merge-label",
        "type": "string",
      },
      Object {
        "default": "no \\"engines\\" specified",
        "docs": "Node.js version to require via package.json \`engines\` (inclusive).",
        "name": "minNodeVersion",
        "optional": true,
        "path": Array [
          "minNodeVersion",
        ],
        "switch": "min-node-version",
        "type": "string",
      },
      Object {
        "default": "$BASEDIR",
        "docs": "This is the name of your package.",
        "name": "name",
        "path": Array [
          "name",
        ],
        "switch": "name",
        "type": "string",
      },
      Object {
        "default": "\\"latest\\"",
        "docs": "The dist-tag to use when releasing to npm.",
        "name": "npmDistTag",
        "optional": true,
        "path": Array [
          "npmDistTag",
        ],
        "switch": "npm-dist-tag",
        "type": "string",
      },
      Object {
        "default": "\\"registry.npmjs.org\\"",
        "docs": "The registry url to use when releasing packages.",
        "name": "npmRegistry",
        "optional": true,
        "path": Array [
          "npmRegistry",
        ],
        "switch": "npm-registry",
        "type": "string",
      },
      Object {
        "docs": "Additional entries to .npmignore.",
        "name": "npmignore",
        "optional": true,
        "path": Array [
          "npmignore",
        ],
        "switch": "npmignore",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Defines an .npmignore file. Normally this is only needed for libraries that are packaged as tarballs.",
        "name": "npmignoreEnabled",
        "optional": true,
        "path": Array [
          "npmignoreEnabled",
        ],
        "switch": "npmignore-enabled",
        "type": "boolean",
      },
      Object {
        "name": "peerDependencies",
        "optional": true,
        "path": Array [
          "peerDependencies",
        ],
        "switch": "peer-dependencies",
        "type": "unknown",
      },
      Object {
        "name": "peerDeps",
        "optional": true,
        "path": Array [
          "peerDeps",
        ],
        "switch": "peer-deps",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Indicates of \\"projen\\" should be installed as a devDependency.",
        "name": "projenDevDependency",
        "optional": true,
        "path": Array [
          "projenDevDependency",
        ],
        "switch": "projen-dev-dependency",
        "type": "boolean",
      },
      Object {
        "default": "\\"true\\" if mergify auto-merge is enabled (default)",
        "docs": "Automatically merge projen upgrade PRs when build passes.",
        "name": "projenUpgradeAutoMerge",
        "optional": true,
        "path": Array [
          "projenUpgradeAutoMerge",
        ],
        "switch": "projen-upgrade-auto-merge",
        "type": "boolean",
      },
      Object {
        "default": "[ '0 6 * * *' ]",
        "docs": "Customize the projenUpgrade schedule in cron expression.",
        "name": "projenUpgradeSchedule",
        "optional": true,
        "path": Array [
          "projenUpgradeSchedule",
        ],
        "switch": "projen-upgrade-schedule",
        "type": "unknown",
      },
      Object {
        "default": "no automatic projen upgrade pull requests",
        "docs": "Periodically submits a pull request for projen upgrades (executes \`yarn projen:upgrade\`).",
        "name": "projenUpgradeSecret",
        "optional": true,
        "path": Array [
          "projenUpgradeSecret",
        ],
        "switch": "projen-upgrade-secret",
        "type": "string",
      },
      Object {
        "default": "[ \\"master\\" ] - based on the value of defaultReleaseBranch.",
        "docs": "Branches which trigger a release.",
        "name": "releaseBranches",
        "optional": true,
        "path": Array [
          "releaseBranches",
        ],
        "switch": "release-branches",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Automatically release new versions every commit to one of branches in \`releaseBranches\`.",
        "name": "releaseEveryCommit",
        "optional": true,
        "path": Array [
          "releaseEveryCommit",
        ],
        "switch": "release-every-commit",
        "type": "boolean",
      },
      Object {
        "default": "no scheduled releases",
        "docs": "CRON schedule to trigger new releases.",
        "name": "releaseSchedule",
        "optional": true,
        "path": Array [
          "releaseSchedule",
        ],
        "switch": "release-schedule",
        "type": "string",
      },
      Object {
        "default": "false",
        "docs": "Automatically release to npm when new versions are introduced.",
        "name": "releaseToNpm",
        "optional": true,
        "path": Array [
          "releaseToNpm",
        ],
        "switch": "release-to-npm",
        "type": "boolean",
      },
      Object {
        "default": "true",
        "docs": "Define a GitHub workflow for releasing from \\"master\\" when new versions are bumped.",
        "name": "releaseWorkflow",
        "optional": true,
        "path": Array [
          "releaseWorkflow",
        ],
        "switch": "release-workflow",
        "type": "boolean",
      },
      Object {
        "docs": "The repository is the location where the actual code for your package lives.",
        "name": "repository",
        "optional": true,
        "path": Array [
          "repository",
        ],
        "switch": "repository",
        "type": "string",
      },
      Object {
        "docs": "If the package.json for your package is not in the root directory (for example if it is part of a monorepo), you can specify the directory in which it lives.",
        "name": "repositoryDirectory",
        "optional": true,
        "path": Array [
          "repositoryDirectory",
        ],
        "switch": "repository-directory",
        "type": "string",
      },
      Object {
        "default": "{}",
        "docs": "npm scripts to include.",
        "name": "scripts",
        "optional": true,
        "path": Array [
          "scripts",
        ],
        "switch": "scripts",
        "type": "unknown",
      },
      Object {
        "default": "\\"src\\"",
        "docs": "Typescript sources directory.",
        "name": "srcdir",
        "optional": true,
        "path": Array [
          "srcdir",
        ],
        "switch": "srcdir",
        "type": "string",
      },
      Object {
        "docs": "Package's Stability.",
        "name": "stability",
        "optional": true,
        "path": Array [
          "stability",
        ],
        "switch": "stability",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Defines a \`yarn start\` interactive experience.",
        "name": "start",
        "optional": true,
        "path": Array [
          "start",
        ],
        "switch": "start",
        "type": "boolean",
      },
      Object {
        "default": "\\"test\\"",
        "docs": "Tests directory.",
        "name": "testdir",
        "optional": true,
        "path": Array [
          "testdir",
        ],
        "switch": "testdir",
        "type": "string",
      },
      Object {
        "default": "\\"yarn install --frozen-lockfile && yarn projen\\"",
        "docs": "Workflow steps to use in order to bootstrap this repo.",
        "name": "workflowBootstrapSteps",
        "optional": true,
        "path": Array [
          "workflowBootstrapSteps",
        ],
        "switch": "workflow-bootstrap-steps",
        "type": "unknown",
      },
      Object {
        "default": "default image",
        "docs": "Container image to use for GitHub workflows.",
        "name": "workflowContainerImage",
        "optional": true,
        "path": Array [
          "workflowContainerImage",
        ],
        "switch": "workflow-container-image",
        "type": "string",
      },
      Object {
        "default": "same as \`minNodeVersion\`",
        "docs": "The node version to use in GitHub workflows.",
        "name": "workflowNodeVersion",
        "optional": true,
        "path": Array [
          "workflowNodeVersion",
        ],
        "switch": "workflow-node-version",
        "type": "string",
      },
    ],
    "pjid": "node",
    "typename": "NodeProject",
  },
  Object {
    "docs": "Base project.",
    "docsurl": "https://github.com/eladb/projen/blob/master/API.md#projen-project",
    "fqn": "projen.Project",
    "options": Array [],
    "pjid": "project",
    "typename": "Project",
  },
  Object {
    "docs": "TypeScript project.",
    "docsurl": "https://github.com/eladb/projen/blob/master/API.md#projen-typescriptproject",
    "fqn": "projen.TypeScriptProject",
    "options": Array [
      Object {
        "default": "true",
        "docs": "Allow the project to include \`peerDependencies\` and \`bundledDependencies\`.",
        "name": "allowLibraryDependencies",
        "optional": true,
        "path": Array [
          "allowLibraryDependencies",
        ],
        "switch": "allow-library-dependencies",
        "type": "boolean",
      },
      Object {
        "default": "true",
        "docs": "Checks that after build there are no modified files on git.",
        "name": "antitamper",
        "optional": true,
        "path": Array [
          "antitamper",
        ],
        "switch": "antitamper",
        "type": "boolean",
      },
      Object {
        "docs": "Author's e-mail.",
        "name": "authorEmail",
        "optional": true,
        "path": Array [
          "authorEmail",
        ],
        "switch": "author-email",
        "type": "string",
      },
      Object {
        "docs": "Author's name.",
        "name": "authorName",
        "optional": true,
        "path": Array [
          "authorName",
        ],
        "switch": "author-name",
        "type": "string",
      },
      Object {
        "docs": "Author's Organization.",
        "name": "authorOrganization",
        "optional": true,
        "path": Array [
          "authorOrganization",
        ],
        "switch": "author-organization",
        "type": "boolean",
      },
      Object {
        "docs": "Author's URL / Website.",
        "name": "authorUrl",
        "optional": true,
        "path": Array [
          "authorUrl",
        ],
        "switch": "author-url",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Automatically add all executables under the \`bin\` directory to your \`package.json\` file under the \`bin\` section.",
        "name": "autoDetectBin",
        "optional": true,
        "path": Array [
          "autoDetectBin",
        ],
        "switch": "auto-detect-bin",
        "type": "boolean",
      },
      Object {
        "docs": "Binary programs vended with your module.",
        "name": "bin",
        "optional": true,
        "path": Array [
          "bin",
        ],
        "switch": "bin",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Define a GitHub workflow for building PRs.",
        "name": "buildWorkflow",
        "optional": true,
        "path": Array [
          "buildWorkflow",
        ],
        "switch": "build-workflow",
        "type": "boolean",
      },
      Object {
        "name": "bundledDependencies",
        "optional": true,
        "path": Array [
          "bundledDependencies",
        ],
        "switch": "bundled-dependencies",
        "type": "unknown",
      },
      Object {
        "name": "bundledDeps",
        "optional": true,
        "path": Array [
          "bundledDeps",
        ],
        "switch": "bundled-deps",
        "type": "unknown",
      },
      Object {
        "default": "the default behavior is to delete the lib/ directory and run
jest typescript tests and only if all tests pass, run the compiler.",
        "docs": "Compile the code before running tests.",
        "name": "compileBeforeTest",
        "optional": true,
        "path": Array [
          "compileBeforeTest",
        ],
        "switch": "compile-before-test",
        "type": "boolean",
      },
      Object {
        "default": "defaults to the value of authorName or \\"\\" if \`authorName\` is undefined.",
        "docs": "License copyright owner.",
        "name": "copyrightOwner",
        "optional": true,
        "path": Array [
          "copyrightOwner",
        ],
        "switch": "copyright-owner",
        "type": "string",
      },
      Object {
        "default": "current year",
        "docs": "The copyright years to put in the LICENSE file.",
        "name": "copyrightPeriod",
        "optional": true,
        "path": Array [
          "copyrightPeriod",
        ],
        "switch": "copyright-period",
        "type": "string",
      },
      Object {
        "default": "'master'",
        "docs": "The name of the main release branch.",
        "name": "defaultReleaseBranch",
        "optional": true,
        "path": Array [
          "defaultReleaseBranch",
        ],
        "switch": "default-release-branch",
        "type": "string",
      },
      Object {
        "default": "true;",
        "docs": "Include dependabot configuration.",
        "name": "dependabot",
        "optional": true,
        "path": Array [
          "dependabot",
        ],
        "switch": "dependabot",
        "type": "boolean",
      },
      Object {
        "name": "dependencies",
        "optional": true,
        "path": Array [
          "dependencies",
        ],
        "switch": "dependencies",
        "type": "unknown",
      },
      Object {
        "name": "deps",
        "optional": true,
        "path": Array [
          "deps",
        ],
        "switch": "deps",
        "type": "unknown",
      },
      Object {
        "docs": "The description is just a string that helps people understand the purpose of the package.",
        "name": "description",
        "optional": true,
        "path": Array [
          "description",
        ],
        "switch": "description",
        "type": "string",
      },
      Object {
        "name": "devDependencies",
        "optional": true,
        "path": Array [
          "devDependencies",
        ],
        "switch": "dev-dependencies",
        "type": "unknown",
      },
      Object {
        "name": "devDeps",
        "optional": true,
        "path": Array [
          "devDeps",
        ],
        "switch": "dev-deps",
        "type": "unknown",
      },
      Object {
        "default": "false",
        "docs": "Do not generate a \`tsconfig.json\` file (used by jsii projects since tsconfig.json is generated by the jsii compiler).",
        "name": "disableTsconfig",
        "optional": true,
        "path": Array [
          "disableTsconfig",
        ],
        "switch": "disable-tsconfig",
        "type": "boolean",
      },
      Object {
        "default": "false",
        "docs": "Docgen by Typedoc.",
        "name": "docgen",
        "optional": true,
        "path": Array [
          "docgen",
        ],
        "switch": "docgen",
        "type": "boolean",
      },
      Object {
        "default": "'docs'",
        "docs": "Docs directory.",
        "name": "docsDirectory",
        "optional": true,
        "path": Array [
          "docsDirectory",
        ],
        "switch": "docs-directory",
        "type": "string",
      },
      Object {
        "default": "lib/index.js",
        "docs": "Module entrypoint (\`main\` in \`package.json\`).",
        "name": "entrypoint",
        "optional": true,
        "path": Array [
          "entrypoint",
        ],
        "switch": "entrypoint",
        "type": "string",
      },
      Object {
        "default": ".d.ts file derived from the project's entrypoint (usually lib/index.d.ts)",
        "docs": "The .d.ts file that includes the type declarations for this module.",
        "name": "entrypointTypes",
        "optional": true,
        "path": Array [
          "entrypointTypes",
        ],
        "switch": "entrypoint-types",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Setup eslint.",
        "name": "eslint",
        "optional": true,
        "path": Array [
          "eslint",
        ],
        "switch": "eslint",
        "type": "boolean",
      },
      Object {
        "docs": "Additional entries to .gitignore.",
        "name": "gitignore",
        "optional": true,
        "path": Array [
          "gitignore",
        ],
        "switch": "gitignore",
        "type": "unknown",
      },
      Object {
        "docs": "Package's Homepage / Website.",
        "name": "homepage",
        "optional": true,
        "path": Array [
          "homepage",
        ],
        "switch": "homepage",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Setup jest unit tests.",
        "name": "jest",
        "optional": true,
        "path": Array [
          "jest",
        ],
        "switch": "jest",
        "type": "boolean",
      },
      Object {
        "docs": "Keywords to include in \`package.json\`.",
        "name": "keywords",
        "optional": true,
        "path": Array [
          "keywords",
        ],
        "switch": "keywords",
        "type": "unknown",
      },
      Object {
        "default": "\\"lib\\"",
        "docs": "Compiler artifacts output directory.",
        "name": "libdir",
        "optional": true,
        "path": Array [
          "libdir",
        ],
        "switch": "libdir",
        "type": "string",
      },
      Object {
        "docs": "License's SPDX identifier.",
        "name": "license",
        "optional": true,
        "path": Array [
          "license",
        ],
        "switch": "license",
        "type": "string",
      },
      Object {
        "default": "no max",
        "docs": "Minimum node.js version to require via \`engines\` (inclusive).",
        "name": "maxNodeVersion",
        "optional": true,
        "path": Array [
          "maxNodeVersion",
        ],
        "switch": "max-node-version",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Adds mergify configuration.",
        "name": "mergify",
        "optional": true,
        "path": Array [
          "mergify",
        ],
        "switch": "mergify",
        "type": "boolean",
      },
      Object {
        "default": "\\"auto-merge\\"",
        "docs": "Automatically merge PRs that build successfully and have this label.",
        "name": "mergifyAutoMergeLabel",
        "optional": true,
        "path": Array [
          "mergifyAutoMergeLabel",
        ],
        "switch": "mergify-auto-merge-label",
        "type": "string",
      },
      Object {
        "default": "no \\"engines\\" specified",
        "docs": "Node.js version to require via package.json \`engines\` (inclusive).",
        "name": "minNodeVersion",
        "optional": true,
        "path": Array [
          "minNodeVersion",
        ],
        "switch": "min-node-version",
        "type": "string",
      },
      Object {
        "default": "$BASEDIR",
        "docs": "This is the name of your package.",
        "name": "name",
        "path": Array [
          "name",
        ],
        "switch": "name",
        "type": "string",
      },
      Object {
        "default": "\\"latest\\"",
        "docs": "The dist-tag to use when releasing to npm.",
        "name": "npmDistTag",
        "optional": true,
        "path": Array [
          "npmDistTag",
        ],
        "switch": "npm-dist-tag",
        "type": "string",
      },
      Object {
        "default": "\\"registry.npmjs.org\\"",
        "docs": "The registry url to use when releasing packages.",
        "name": "npmRegistry",
        "optional": true,
        "path": Array [
          "npmRegistry",
        ],
        "switch": "npm-registry",
        "type": "string",
      },
      Object {
        "docs": "Additional entries to .npmignore.",
        "name": "npmignore",
        "optional": true,
        "path": Array [
          "npmignore",
        ],
        "switch": "npmignore",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Defines an .npmignore file. Normally this is only needed for libraries that are packaged as tarballs.",
        "name": "npmignoreEnabled",
        "optional": true,
        "path": Array [
          "npmignoreEnabled",
        ],
        "switch": "npmignore-enabled",
        "type": "boolean",
      },
      Object {
        "default": "true",
        "docs": "Defines a \`yarn package\` command that will produce a tarball and place it under \`dist/js\`.",
        "name": "package",
        "optional": true,
        "path": Array [
          "package",
        ],
        "switch": "package",
        "type": "boolean",
      },
      Object {
        "name": "peerDependencies",
        "optional": true,
        "path": Array [
          "peerDependencies",
        ],
        "switch": "peer-dependencies",
        "type": "unknown",
      },
      Object {
        "name": "peerDeps",
        "optional": true,
        "path": Array [
          "peerDeps",
        ],
        "switch": "peer-deps",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Indicates of \\"projen\\" should be installed as a devDependency.",
        "name": "projenDevDependency",
        "optional": true,
        "path": Array [
          "projenDevDependency",
        ],
        "switch": "projen-dev-dependency",
        "type": "boolean",
      },
      Object {
        "default": "\\"true\\" if mergify auto-merge is enabled (default)",
        "docs": "Automatically merge projen upgrade PRs when build passes.",
        "name": "projenUpgradeAutoMerge",
        "optional": true,
        "path": Array [
          "projenUpgradeAutoMerge",
        ],
        "switch": "projen-upgrade-auto-merge",
        "type": "boolean",
      },
      Object {
        "default": "[ '0 6 * * *' ]",
        "docs": "Customize the projenUpgrade schedule in cron expression.",
        "name": "projenUpgradeSchedule",
        "optional": true,
        "path": Array [
          "projenUpgradeSchedule",
        ],
        "switch": "projen-upgrade-schedule",
        "type": "unknown",
      },
      Object {
        "default": "no automatic projen upgrade pull requests",
        "docs": "Periodically submits a pull request for projen upgrades (executes \`yarn projen:upgrade\`).",
        "name": "projenUpgradeSecret",
        "optional": true,
        "path": Array [
          "projenUpgradeSecret",
        ],
        "switch": "projen-upgrade-secret",
        "type": "string",
      },
      Object {
        "default": "[ \\"master\\" ] - based on the value of defaultReleaseBranch.",
        "docs": "Branches which trigger a release.",
        "name": "releaseBranches",
        "optional": true,
        "path": Array [
          "releaseBranches",
        ],
        "switch": "release-branches",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Automatically release new versions every commit to one of branches in \`releaseBranches\`.",
        "name": "releaseEveryCommit",
        "optional": true,
        "path": Array [
          "releaseEveryCommit",
        ],
        "switch": "release-every-commit",
        "type": "boolean",
      },
      Object {
        "default": "no scheduled releases",
        "docs": "CRON schedule to trigger new releases.",
        "name": "releaseSchedule",
        "optional": true,
        "path": Array [
          "releaseSchedule",
        ],
        "switch": "release-schedule",
        "type": "string",
      },
      Object {
        "default": "false",
        "docs": "Automatically release to npm when new versions are introduced.",
        "name": "releaseToNpm",
        "optional": true,
        "path": Array [
          "releaseToNpm",
        ],
        "switch": "release-to-npm",
        "type": "boolean",
      },
      Object {
        "default": "true",
        "docs": "Define a GitHub workflow for releasing from \\"master\\" when new versions are bumped.",
        "name": "releaseWorkflow",
        "optional": true,
        "path": Array [
          "releaseWorkflow",
        ],
        "switch": "release-workflow",
        "type": "boolean",
      },
      Object {
        "docs": "The repository is the location where the actual code for your package lives.",
        "name": "repository",
        "optional": true,
        "path": Array [
          "repository",
        ],
        "switch": "repository",
        "type": "string",
      },
      Object {
        "docs": "If the package.json for your package is not in the root directory (for example if it is part of a monorepo), you can specify the directory in which it lives.",
        "name": "repositoryDirectory",
        "optional": true,
        "path": Array [
          "repositoryDirectory",
        ],
        "switch": "repository-directory",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Generate one-time sample in \`src/\` and \`test/\` if there are no files there.",
        "name": "sampleCode",
        "optional": true,
        "path": Array [
          "sampleCode",
        ],
        "switch": "sample-code",
        "type": "boolean",
      },
      Object {
        "default": "{}",
        "docs": "npm scripts to include.",
        "name": "scripts",
        "optional": true,
        "path": Array [
          "scripts",
        ],
        "switch": "scripts",
        "type": "unknown",
      },
      Object {
        "default": "\\"src\\"",
        "docs": "Typescript sources directory.",
        "name": "srcdir",
        "optional": true,
        "path": Array [
          "srcdir",
        ],
        "switch": "srcdir",
        "type": "string",
      },
      Object {
        "docs": "Package's Stability.",
        "name": "stability",
        "optional": true,
        "path": Array [
          "stability",
        ],
        "switch": "stability",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Defines a \`yarn start\` interactive experience.",
        "name": "start",
        "optional": true,
        "path": Array [
          "start",
        ],
        "switch": "start",
        "type": "boolean",
      },
      Object {
        "default": "\\"test\\"",
        "docs": "Tests directory.",
        "name": "testdir",
        "optional": true,
        "path": Array [
          "testdir",
        ],
        "switch": "testdir",
        "type": "string",
      },
      Object {
        "default": "\\"yarn install --frozen-lockfile && yarn projen\\"",
        "docs": "Workflow steps to use in order to bootstrap this repo.",
        "name": "workflowBootstrapSteps",
        "optional": true,
        "path": Array [
          "workflowBootstrapSteps",
        ],
        "switch": "workflow-bootstrap-steps",
        "type": "unknown",
      },
      Object {
        "default": "default image",
        "docs": "Container image to use for GitHub workflows.",
        "name": "workflowContainerImage",
        "optional": true,
        "path": Array [
          "workflowContainerImage",
        ],
        "switch": "workflow-container-image",
        "type": "string",
      },
      Object {
        "default": "same as \`minNodeVersion\`",
        "docs": "The node version to use in GitHub workflows.",
        "name": "workflowNodeVersion",
        "optional": true,
        "path": Array [
          "workflowNodeVersion",
        ],
        "switch": "workflow-node-version",
        "type": "string",
      },
    ],
    "pjid": "typescript",
    "typename": "TypeScriptProject",
  },
  Object {
    "docs": "TypeScript app.",
    "docsurl": "https://github.com/eladb/projen/blob/master/API.md#projen-typescriptappproject",
    "fqn": "projen.TypeScriptAppProject",
    "options": Array [
      Object {
        "default": "true",
        "docs": "Allow the project to include \`peerDependencies\` and \`bundledDependencies\`.",
        "name": "allowLibraryDependencies",
        "optional": true,
        "path": Array [
          "allowLibraryDependencies",
        ],
        "switch": "allow-library-dependencies",
        "type": "boolean",
      },
      Object {
        "default": "true",
        "docs": "Checks that after build there are no modified files on git.",
        "name": "antitamper",
        "optional": true,
        "path": Array [
          "antitamper",
        ],
        "switch": "antitamper",
        "type": "boolean",
      },
      Object {
        "docs": "Author's e-mail.",
        "name": "authorEmail",
        "optional": true,
        "path": Array [
          "authorEmail",
        ],
        "switch": "author-email",
        "type": "string",
      },
      Object {
        "docs": "Author's name.",
        "name": "authorName",
        "optional": true,
        "path": Array [
          "authorName",
        ],
        "switch": "author-name",
        "type": "string",
      },
      Object {
        "docs": "Author's Organization.",
        "name": "authorOrganization",
        "optional": true,
        "path": Array [
          "authorOrganization",
        ],
        "switch": "author-organization",
        "type": "boolean",
      },
      Object {
        "docs": "Author's URL / Website.",
        "name": "authorUrl",
        "optional": true,
        "path": Array [
          "authorUrl",
        ],
        "switch": "author-url",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Automatically add all executables under the \`bin\` directory to your \`package.json\` file under the \`bin\` section.",
        "name": "autoDetectBin",
        "optional": true,
        "path": Array [
          "autoDetectBin",
        ],
        "switch": "auto-detect-bin",
        "type": "boolean",
      },
      Object {
        "docs": "Binary programs vended with your module.",
        "name": "bin",
        "optional": true,
        "path": Array [
          "bin",
        ],
        "switch": "bin",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Define a GitHub workflow for building PRs.",
        "name": "buildWorkflow",
        "optional": true,
        "path": Array [
          "buildWorkflow",
        ],
        "switch": "build-workflow",
        "type": "boolean",
      },
      Object {
        "name": "bundledDependencies",
        "optional": true,
        "path": Array [
          "bundledDependencies",
        ],
        "switch": "bundled-dependencies",
        "type": "unknown",
      },
      Object {
        "name": "bundledDeps",
        "optional": true,
        "path": Array [
          "bundledDeps",
        ],
        "switch": "bundled-deps",
        "type": "unknown",
      },
      Object {
        "default": "the default behavior is to delete the lib/ directory and run
jest typescript tests and only if all tests pass, run the compiler.",
        "docs": "Compile the code before running tests.",
        "name": "compileBeforeTest",
        "optional": true,
        "path": Array [
          "compileBeforeTest",
        ],
        "switch": "compile-before-test",
        "type": "boolean",
      },
      Object {
        "default": "defaults to the value of authorName or \\"\\" if \`authorName\` is undefined.",
        "docs": "License copyright owner.",
        "name": "copyrightOwner",
        "optional": true,
        "path": Array [
          "copyrightOwner",
        ],
        "switch": "copyright-owner",
        "type": "string",
      },
      Object {
        "default": "current year",
        "docs": "The copyright years to put in the LICENSE file.",
        "name": "copyrightPeriod",
        "optional": true,
        "path": Array [
          "copyrightPeriod",
        ],
        "switch": "copyright-period",
        "type": "string",
      },
      Object {
        "default": "'master'",
        "docs": "The name of the main release branch.",
        "name": "defaultReleaseBranch",
        "optional": true,
        "path": Array [
          "defaultReleaseBranch",
        ],
        "switch": "default-release-branch",
        "type": "string",
      },
      Object {
        "default": "true;",
        "docs": "Include dependabot configuration.",
        "name": "dependabot",
        "optional": true,
        "path": Array [
          "dependabot",
        ],
        "switch": "dependabot",
        "type": "boolean",
      },
      Object {
        "name": "dependencies",
        "optional": true,
        "path": Array [
          "dependencies",
        ],
        "switch": "dependencies",
        "type": "unknown",
      },
      Object {
        "name": "deps",
        "optional": true,
        "path": Array [
          "deps",
        ],
        "switch": "deps",
        "type": "unknown",
      },
      Object {
        "docs": "The description is just a string that helps people understand the purpose of the package.",
        "name": "description",
        "optional": true,
        "path": Array [
          "description",
        ],
        "switch": "description",
        "type": "string",
      },
      Object {
        "name": "devDependencies",
        "optional": true,
        "path": Array [
          "devDependencies",
        ],
        "switch": "dev-dependencies",
        "type": "unknown",
      },
      Object {
        "name": "devDeps",
        "optional": true,
        "path": Array [
          "devDeps",
        ],
        "switch": "dev-deps",
        "type": "unknown",
      },
      Object {
        "default": "false",
        "docs": "Do not generate a \`tsconfig.json\` file (used by jsii projects since tsconfig.json is generated by the jsii compiler).",
        "name": "disableTsconfig",
        "optional": true,
        "path": Array [
          "disableTsconfig",
        ],
        "switch": "disable-tsconfig",
        "type": "boolean",
      },
      Object {
        "default": "false",
        "docs": "Docgen by Typedoc.",
        "name": "docgen",
        "optional": true,
        "path": Array [
          "docgen",
        ],
        "switch": "docgen",
        "type": "boolean",
      },
      Object {
        "default": "'docs'",
        "docs": "Docs directory.",
        "name": "docsDirectory",
        "optional": true,
        "path": Array [
          "docsDirectory",
        ],
        "switch": "docs-directory",
        "type": "string",
      },
      Object {
        "default": "lib/index.js",
        "docs": "Module entrypoint (\`main\` in \`package.json\`).",
        "name": "entrypoint",
        "optional": true,
        "path": Array [
          "entrypoint",
        ],
        "switch": "entrypoint",
        "type": "string",
      },
      Object {
        "default": ".d.ts file derived from the project's entrypoint (usually lib/index.d.ts)",
        "docs": "The .d.ts file that includes the type declarations for this module.",
        "name": "entrypointTypes",
        "optional": true,
        "path": Array [
          "entrypointTypes",
        ],
        "switch": "entrypoint-types",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Setup eslint.",
        "name": "eslint",
        "optional": true,
        "path": Array [
          "eslint",
        ],
        "switch": "eslint",
        "type": "boolean",
      },
      Object {
        "docs": "Additional entries to .gitignore.",
        "name": "gitignore",
        "optional": true,
        "path": Array [
          "gitignore",
        ],
        "switch": "gitignore",
        "type": "unknown",
      },
      Object {
        "docs": "Package's Homepage / Website.",
        "name": "homepage",
        "optional": true,
        "path": Array [
          "homepage",
        ],
        "switch": "homepage",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Setup jest unit tests.",
        "name": "jest",
        "optional": true,
        "path": Array [
          "jest",
        ],
        "switch": "jest",
        "type": "boolean",
      },
      Object {
        "docs": "Keywords to include in \`package.json\`.",
        "name": "keywords",
        "optional": true,
        "path": Array [
          "keywords",
        ],
        "switch": "keywords",
        "type": "unknown",
      },
      Object {
        "default": "\\"lib\\"",
        "docs": "Compiler artifacts output directory.",
        "name": "libdir",
        "optional": true,
        "path": Array [
          "libdir",
        ],
        "switch": "libdir",
        "type": "string",
      },
      Object {
        "docs": "License's SPDX identifier.",
        "name": "license",
        "optional": true,
        "path": Array [
          "license",
        ],
        "switch": "license",
        "type": "string",
      },
      Object {
        "default": "no max",
        "docs": "Minimum node.js version to require via \`engines\` (inclusive).",
        "name": "maxNodeVersion",
        "optional": true,
        "path": Array [
          "maxNodeVersion",
        ],
        "switch": "max-node-version",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Adds mergify configuration.",
        "name": "mergify",
        "optional": true,
        "path": Array [
          "mergify",
        ],
        "switch": "mergify",
        "type": "boolean",
      },
      Object {
        "default": "\\"auto-merge\\"",
        "docs": "Automatically merge PRs that build successfully and have this label.",
        "name": "mergifyAutoMergeLabel",
        "optional": true,
        "path": Array [
          "mergifyAutoMergeLabel",
        ],
        "switch": "mergify-auto-merge-label",
        "type": "string",
      },
      Object {
        "default": "no \\"engines\\" specified",
        "docs": "Node.js version to require via package.json \`engines\` (inclusive).",
        "name": "minNodeVersion",
        "optional": true,
        "path": Array [
          "minNodeVersion",
        ],
        "switch": "min-node-version",
        "type": "string",
      },
      Object {
        "default": "$BASEDIR",
        "docs": "This is the name of your package.",
        "name": "name",
        "path": Array [
          "name",
        ],
        "switch": "name",
        "type": "string",
      },
      Object {
        "default": "\\"latest\\"",
        "docs": "The dist-tag to use when releasing to npm.",
        "name": "npmDistTag",
        "optional": true,
        "path": Array [
          "npmDistTag",
        ],
        "switch": "npm-dist-tag",
        "type": "string",
      },
      Object {
        "default": "\\"registry.npmjs.org\\"",
        "docs": "The registry url to use when releasing packages.",
        "name": "npmRegistry",
        "optional": true,
        "path": Array [
          "npmRegistry",
        ],
        "switch": "npm-registry",
        "type": "string",
      },
      Object {
        "docs": "Additional entries to .npmignore.",
        "name": "npmignore",
        "optional": true,
        "path": Array [
          "npmignore",
        ],
        "switch": "npmignore",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Defines an .npmignore file. Normally this is only needed for libraries that are packaged as tarballs.",
        "name": "npmignoreEnabled",
        "optional": true,
        "path": Array [
          "npmignoreEnabled",
        ],
        "switch": "npmignore-enabled",
        "type": "boolean",
      },
      Object {
        "default": "true",
        "docs": "Defines a \`yarn package\` command that will produce a tarball and place it under \`dist/js\`.",
        "name": "package",
        "optional": true,
        "path": Array [
          "package",
        ],
        "switch": "package",
        "type": "boolean",
      },
      Object {
        "name": "peerDependencies",
        "optional": true,
        "path": Array [
          "peerDependencies",
        ],
        "switch": "peer-dependencies",
        "type": "unknown",
      },
      Object {
        "name": "peerDeps",
        "optional": true,
        "path": Array [
          "peerDeps",
        ],
        "switch": "peer-deps",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Indicates of \\"projen\\" should be installed as a devDependency.",
        "name": "projenDevDependency",
        "optional": true,
        "path": Array [
          "projenDevDependency",
        ],
        "switch": "projen-dev-dependency",
        "type": "boolean",
      },
      Object {
        "default": "\\"true\\" if mergify auto-merge is enabled (default)",
        "docs": "Automatically merge projen upgrade PRs when build passes.",
        "name": "projenUpgradeAutoMerge",
        "optional": true,
        "path": Array [
          "projenUpgradeAutoMerge",
        ],
        "switch": "projen-upgrade-auto-merge",
        "type": "boolean",
      },
      Object {
        "default": "[ '0 6 * * *' ]",
        "docs": "Customize the projenUpgrade schedule in cron expression.",
        "name": "projenUpgradeSchedule",
        "optional": true,
        "path": Array [
          "projenUpgradeSchedule",
        ],
        "switch": "projen-upgrade-schedule",
        "type": "unknown",
      },
      Object {
        "default": "no automatic projen upgrade pull requests",
        "docs": "Periodically submits a pull request for projen upgrades (executes \`yarn projen:upgrade\`).",
        "name": "projenUpgradeSecret",
        "optional": true,
        "path": Array [
          "projenUpgradeSecret",
        ],
        "switch": "projen-upgrade-secret",
        "type": "string",
      },
      Object {
        "default": "[ \\"master\\" ] - based on the value of defaultReleaseBranch.",
        "docs": "Branches which trigger a release.",
        "name": "releaseBranches",
        "optional": true,
        "path": Array [
          "releaseBranches",
        ],
        "switch": "release-branches",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Automatically release new versions every commit to one of branches in \`releaseBranches\`.",
        "name": "releaseEveryCommit",
        "optional": true,
        "path": Array [
          "releaseEveryCommit",
        ],
        "switch": "release-every-commit",
        "type": "boolean",
      },
      Object {
        "default": "no scheduled releases",
        "docs": "CRON schedule to trigger new releases.",
        "name": "releaseSchedule",
        "optional": true,
        "path": Array [
          "releaseSchedule",
        ],
        "switch": "release-schedule",
        "type": "string",
      },
      Object {
        "default": "false",
        "docs": "Automatically release to npm when new versions are introduced.",
        "name": "releaseToNpm",
        "optional": true,
        "path": Array [
          "releaseToNpm",
        ],
        "switch": "release-to-npm",
        "type": "boolean",
      },
      Object {
        "default": "true",
        "docs": "Define a GitHub workflow for releasing from \\"master\\" when new versions are bumped.",
        "name": "releaseWorkflow",
        "optional": true,
        "path": Array [
          "releaseWorkflow",
        ],
        "switch": "release-workflow",
        "type": "boolean",
      },
      Object {
        "docs": "The repository is the location where the actual code for your package lives.",
        "name": "repository",
        "optional": true,
        "path": Array [
          "repository",
        ],
        "switch": "repository",
        "type": "string",
      },
      Object {
        "docs": "If the package.json for your package is not in the root directory (for example if it is part of a monorepo), you can specify the directory in which it lives.",
        "name": "repositoryDirectory",
        "optional": true,
        "path": Array [
          "repositoryDirectory",
        ],
        "switch": "repository-directory",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Generate one-time sample in \`src/\` and \`test/\` if there are no files there.",
        "name": "sampleCode",
        "optional": true,
        "path": Array [
          "sampleCode",
        ],
        "switch": "sample-code",
        "type": "boolean",
      },
      Object {
        "default": "{}",
        "docs": "npm scripts to include.",
        "name": "scripts",
        "optional": true,
        "path": Array [
          "scripts",
        ],
        "switch": "scripts",
        "type": "unknown",
      },
      Object {
        "default": "\\"src\\"",
        "docs": "Typescript sources directory.",
        "name": "srcdir",
        "optional": true,
        "path": Array [
          "srcdir",
        ],
        "switch": "srcdir",
        "type": "string",
      },
      Object {
        "docs": "Package's Stability.",
        "name": "stability",
        "optional": true,
        "path": Array [
          "stability",
        ],
        "switch": "stability",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Defines a \`yarn start\` interactive experience.",
        "name": "start",
        "optional": true,
        "path": Array [
          "start",
        ],
        "switch": "start",
        "type": "boolean",
      },
      Object {
        "default": "\\"test\\"",
        "docs": "Tests directory.",
        "name": "testdir",
        "optional": true,
        "path": Array [
          "testdir",
        ],
        "switch": "testdir",
        "type": "string",
      },
      Object {
        "default": "\\"yarn install --frozen-lockfile && yarn projen\\"",
        "docs": "Workflow steps to use in order to bootstrap this repo.",
        "name": "workflowBootstrapSteps",
        "optional": true,
        "path": Array [
          "workflowBootstrapSteps",
        ],
        "switch": "workflow-bootstrap-steps",
        "type": "unknown",
      },
      Object {
        "default": "default image",
        "docs": "Container image to use for GitHub workflows.",
        "name": "workflowContainerImage",
        "optional": true,
        "path": Array [
          "workflowContainerImage",
        ],
        "switch": "workflow-container-image",
        "type": "string",
      },
      Object {
        "default": "same as \`minNodeVersion\`",
        "docs": "The node version to use in GitHub workflows.",
        "name": "workflowNodeVersion",
        "optional": true,
        "path": Array [
          "workflowNodeVersion",
        ],
        "switch": "workflow-node-version",
        "type": "string",
      },
    ],
    "pjid": "typescript-app",
    "typename": "TypeScriptAppProject",
  },
]
`;
