import { synthSnapshot, TestProject, withProjectDir } from "./util";
import { EndOfLine } from "../src/gitattributes";

describe("GitAttributesFile", () => {
  test("should have the default globs and attributes", () => {
    withProjectDir((outdir) => {
      // The TestProject already contains a .gitattributes file
      const project = new TestProject({
        outdir,
      });

      const snap = synthSnapshot(project);

      expect(snap[".gitattributes"])
        .toBe(`# ~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".

* text eol=lf
/.gitattributes linguist-generated
/.github/workflows/pull-request-lint.yml linguist-generated
/.gitignore linguist-generated
/.projen/** linguist-generated
/.projen/deps.json linguist-generated
/.projen/files.json linguist-generated
/.projen/tasks.json linguist-generated`);
    });
  });

  test("should add attributes to files", () => {
    withProjectDir((outdir) => {
      // The TestProject already contains a .gitattributes file
      const project = new TestProject({
        outdir,
      });

      project.gitattributes.addAttributes("*.txt", "text");
      project.gitattributes.addAttributes("*.md", "text", "markdown");

      const snap = synthSnapshot(project);

      expect(snap[".gitattributes"])
        .toBe(`# ~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".

* text eol=lf
*.md text markdown
*.txt text
/.gitattributes linguist-generated
/.github/workflows/pull-request-lint.yml linguist-generated
/.gitignore linguist-generated
/.projen/** linguist-generated
/.projen/deps.json linguist-generated
/.projen/files.json linguist-generated
/.projen/tasks.json linguist-generated`);
    });
  });

  test("should add a LFS pattern", () => {
    withProjectDir((outdir) => {
      // The TestProject already contains a .gitattributes file
      const project = new TestProject({
        outdir,
      });

      project.gitattributes.addLfsPattern("*.bin");

      const snap = synthSnapshot(project);

      expect(snap[".gitattributes"])
        .toBe(`# ~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".

* text eol=lf
*.bin filter=lfs diff=lfs merge=lfs -text
/.gitattributes linguist-generated
/.github/workflows/pull-request-lint.yml linguist-generated
/.gitignore linguist-generated
/.projen/** linguist-generated
/.projen/deps.json linguist-generated
/.projen/files.json linguist-generated
/.projen/tasks.json linguist-generated`);
    });
  });

  test("should have LFS patterns", () => {
    // The TestProject already contains a .gitattributes file
    const project = new TestProject();
    project.gitattributes.addLfsPattern("*.bin");

    expect(project.gitattributes.hasLfsPatterns).toBe(true);
  });

  test("should have default end of line character", () => {
    // The TestProject already contains a .gitattributes file
    const project = new TestProject();
    expect(project.gitattributes.endOfLine).toBe(EndOfLine.LF);
  });
});
