// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`devdirs 1`] = `
{
  "env": {
    "jest": true,
    "node": true,
  },
  "extends": [
    "plugin:import/typescript",
  ],
  "ignorePatterns": [
    "*.js",
    "*.d.ts",
    "node_modules/",
    "*.generated.ts",
    "./coverage",
    "!.projenrc.js",
  ],
  "overrides": [
    {
      "files": [
        ".projenrc.js",
      ],
      "rules": {
        "@typescript-eslint/no-require-imports": "off",
        "import/no-extraneous-dependencies": "off",
      },
    },
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": 2018,
    "project": "./tsconfig.json",
    "sourceType": "module",
  },
  "plugins": [
    "@typescript-eslint",
    "import",
  ],
  "root": true,
  "rules": {
    "@typescript-eslint/indent": [
      "error",
      2,
    ],
    "@typescript-eslint/member-delimiter-style": [
      "error",
    ],
    "@typescript-eslint/member-ordering": [
      "error",
      {
        "default": [
          "public-static-field",
          "public-static-method",
          "protected-static-field",
          "protected-static-method",
          "private-static-field",
          "private-static-method",
          "field",
          "constructor",
          "method",
        ],
      },
    ],
    "@typescript-eslint/no-floating-promises": [
      "error",
    ],
    "@typescript-eslint/no-require-imports": [
      "error",
    ],
    "@typescript-eslint/no-shadow": [
      "error",
    ],
    "@typescript-eslint/return-await": [
      "error",
    ],
    "array-bracket-newline": [
      "error",
      "consistent",
    ],
    "array-bracket-spacing": [
      "error",
      "never",
    ],
    "brace-style": [
      "error",
      "1tbs",
      {
        "allowSingleLine": true,
      },
    ],
    "comma-dangle": [
      "error",
      "always-multiline",
    ],
    "comma-spacing": [
      "error",
      {
        "after": true,
        "before": false,
      },
    ],
    "curly": [
      "error",
      "multi-line",
      "consistent",
    ],
    "dot-notation": [
      "error",
    ],
    "import/no-duplicates": [
      "error",
    ],
    "import/no-extraneous-dependencies": [
      "error",
      {
        "devDependencies": [
          "**/foo/**",
          "**/bar/**",
        ],
        "optionalDependencies": false,
        "peerDependencies": true,
      },
    ],
    "import/no-unresolved": [
      "error",
    ],
    "import/order": [
      "warn",
      {
        "alphabetize": {
          "caseInsensitive": true,
          "order": "asc",
        },
        "groups": [
          "builtin",
          "external",
        ],
      },
    ],
    "indent": [
      "off",
    ],
    "key-spacing": [
      "error",
    ],
    "keyword-spacing": [
      "error",
    ],
    "max-len": [
      "error",
      {
        "code": 150,
        "ignoreComments": true,
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
      },
    ],
    "no-bitwise": [
      "error",
    ],
    "no-multi-spaces": [
      "error",
      {
        "ignoreEOLComments": false,
      },
    ],
    "no-multiple-empty-lines": [
      "error",
    ],
    "no-return-await": [
      "off",
    ],
    "no-shadow": [
      "off",
    ],
    "no-trailing-spaces": [
      "error",
    ],
    "object-curly-newline": [
      "error",
      {
        "consistent": true,
        "multiline": true,
      },
    ],
    "object-curly-spacing": [
      "error",
      "always",
    ],
    "object-property-newline": [
      "error",
      {
        "allowAllPropertiesOnSameLine": true,
      },
    ],
    "quote-props": [
      "error",
      "consistent-as-needed",
    ],
    "quotes": [
      "error",
      "single",
      {
        "avoidEscape": true,
      },
    ],
    "semi": [
      "error",
      "always",
    ],
    "space-before-blocks": [
      "error",
    ],
  },
  "settings": {
    "import/parsers": {
      "@typescript-eslint/parser": [
        ".ts",
        ".tsx",
      ],
    },
    "import/resolver": {
      "node": {},
      "typescript": {
        "alwaysTryTypes": true,
        "project": "./tsconfig.json",
      },
    },
  },
}
`;

exports[`eslint snapshot matches format 'flat-cjs' 1`] = `
"// ~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".
const pluginImport = require('eslint-plugin-import');
const pluginPrettier = require('eslint-plugin-prettier');
const extendsCodingStandardEslintDefaults = require('./node_modules/coding-standard/eslintDefaults.js');
const extendsCodingStandardEslintrcEs6 = require('./node_modules/coding-standard/.eslintrc-es6');
const extendsProjenEslintrc = require('./projen/eslintrc.js');
const pluginTypescriptEslint = require('@typescript-eslint/eslint-plugin');
const parserTypescriptEslintParser = require('@typescript-eslint/parser');
module.exports = [
  {
    files: [
      "**/*.ts",
    ],
    ...pluginImport.configs.typescript,
  },
  {
    files: [
      "**/*.ts",
    ],
    ...pluginPrettier.configs.recommended,
  },
  {
    files: [
      "**/*.ts",
    ],
    ...extendsCodingStandardEslintDefaults,
  },
  {
    files: [
      "**/*.ts",
    ],
    ...extendsCodingStandardEslintrcEs6,
  },
  {
    files: [
      "**/*.ts",
    ],
    ...extendsProjenEslintrc,
  },
  {
    plugins: {
      "@typescript-eslint": pluginTypescriptEslint,
      import: pluginImport,
    },
    settings: {
      "import/parsers": {
        "@typescript-eslint/parser": [
          ".ts",
          ".tsx",
        ],
      },
      "import/resolver": {
        node: {},
        typescript: {
          project: "./tsconfig.json",
          alwaysTryTypes: true,
        },
      },
    },
    rules: {
      "@typescript-eslint/no-require-imports": [
        "error",
      ],
      "import/no-extraneous-dependencies": [
        "error",
        {
          devDependencies: [],
          optionalDependencies: false,
          peerDependencies: true,
        },
      ],
      "import/no-unresolved": [
        "error",
      ],
      "import/order": [
        "warn",
        {
          groups: [
            "builtin",
            "external",
          ],
          alphabetize: {
            order: "asc",
            caseInsensitive: true,
          },
        },
      ],
      "no-duplicate-imports": [
        "error",
      ],
      "no-shadow": [
        "off",
      ],
      "@typescript-eslint/no-shadow": [
        "error",
      ],
      "key-spacing": [
        "error",
      ],
      "no-multiple-empty-lines": [
        "error",
      ],
      "@typescript-eslint/no-floating-promises": [
        "error",
      ],
      "no-return-await": [
        "off",
      ],
      "@typescript-eslint/return-await": [
        "error",
      ],
      "no-trailing-spaces": [
        "error",
      ],
      "dot-notation": [
        "error",
      ],
      "no-bitwise": [
        "error",
      ],
      "@typescript-eslint/member-ordering": [
        "error",
        {
          default: [
            "public-static-field",
            "public-static-method",
            "protected-static-field",
            "protected-static-method",
            "private-static-field",
            "private-static-method",
            "field",
            "constructor",
            "method",
          ],
        },
      ],
    },
    files: [
      "**/*.ts",
    ],
    ignores: [
      "**/*.js",
      "**/*.d.ts",
      "node_modules/",
      "**/*.generated.ts",
      "./coverage",
      "!.projenrc.js",
    ],
    languageOptions: {
      parser: parserTypescriptEslintParser,
      parserOptions: {
        ecmaVersion: 2018,
        sourceType: "module",
        project: "./tsconfig.json",
      },
      globals: {
        jest: true,
        node: true,
      },
    },
  },
  {
    files: [
      ".projenrc.js",
    ],
    rules: {
      "@typescript-eslint/no-require-imports": "off",
      "import/no-extraneous-dependencies": "off",
    },
  },
];
"
`;

exports[`eslint snapshot matches format 'flat-esm' 1`] = `
"// ~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".
import pluginImport from 'eslint-plugin-import';
import pluginPrettier from 'eslint-plugin-prettier';
import extendsCodingStandardEslintDefaults from './node_modules/coding-standard/eslintDefaults.js';
import extendsCodingStandardEslintrcEs6 from './node_modules/coding-standard/.eslintrc-es6';
import extendsProjenEslintrc from './projen/eslintrc.js';
import pluginTypescriptEslint from '@typescript-eslint/eslint-plugin';
import parserTypescriptEslintParser from '@typescript-eslint/parser';
export default [
  {
    files: [
      "**/*.ts",
    ],
    ...pluginImport.configs.typescript,
  },
  {
    files: [
      "**/*.ts",
    ],
    ...pluginPrettier.configs.recommended,
  },
  {
    files: [
      "**/*.ts",
    ],
    ...extendsCodingStandardEslintDefaults,
  },
  {
    files: [
      "**/*.ts",
    ],
    ...extendsCodingStandardEslintrcEs6,
  },
  {
    files: [
      "**/*.ts",
    ],
    ...extendsProjenEslintrc,
  },
  {
    plugins: {
      "@typescript-eslint": pluginTypescriptEslint,
      import: pluginImport,
    },
    settings: {
      "import/parsers": {
        "@typescript-eslint/parser": [
          ".ts",
          ".tsx",
        ],
      },
      "import/resolver": {
        node: {},
        typescript: {
          project: "./tsconfig.json",
          alwaysTryTypes: true,
        },
      },
    },
    rules: {
      "@typescript-eslint/no-require-imports": [
        "error",
      ],
      "import/no-extraneous-dependencies": [
        "error",
        {
          devDependencies: [],
          optionalDependencies: false,
          peerDependencies: true,
        },
      ],
      "import/no-unresolved": [
        "error",
      ],
      "import/order": [
        "warn",
        {
          groups: [
            "builtin",
            "external",
          ],
          alphabetize: {
            order: "asc",
            caseInsensitive: true,
          },
        },
      ],
      "no-duplicate-imports": [
        "error",
      ],
      "no-shadow": [
        "off",
      ],
      "@typescript-eslint/no-shadow": [
        "error",
      ],
      "key-spacing": [
        "error",
      ],
      "no-multiple-empty-lines": [
        "error",
      ],
      "@typescript-eslint/no-floating-promises": [
        "error",
      ],
      "no-return-await": [
        "off",
      ],
      "@typescript-eslint/return-await": [
        "error",
      ],
      "no-trailing-spaces": [
        "error",
      ],
      "dot-notation": [
        "error",
      ],
      "no-bitwise": [
        "error",
      ],
      "@typescript-eslint/member-ordering": [
        "error",
        {
          default: [
            "public-static-field",
            "public-static-method",
            "protected-static-field",
            "protected-static-method",
            "private-static-field",
            "private-static-method",
            "field",
            "constructor",
            "method",
          ],
        },
      ],
    },
    files: [
      "**/*.ts",
    ],
    ignores: [
      "**/*.js",
      "**/*.d.ts",
      "node_modules/",
      "**/*.generated.ts",
      "./coverage",
      "!.projenrc.js",
    ],
    languageOptions: {
      parser: parserTypescriptEslintParser,
      parserOptions: {
        ecmaVersion: 2018,
        sourceType: "module",
        project: "./tsconfig.json",
      },
      globals: {
        jest: true,
        node: true,
      },
    },
  },
  {
    files: [
      ".projenrc.js",
    ],
    rules: {
      "@typescript-eslint/no-require-imports": "off",
      "import/no-extraneous-dependencies": "off",
    },
  },
];
"
`;

exports[`eslint snapshot matches format 'json' 1`] = `
{
  "env": {
    "jest": true,
    "node": true,
  },
  "extends": [
    "plugin:import/typescript",
    "plugin:prettier/recommended",
    "./node_modules/coding-standard/eslintDefaults.js",
    "./node_modules/coding-standard/.eslintrc-es6",
    "./projen/eslintrc.js",
  ],
  "ignorePatterns": [
    "*.js",
    "*.d.ts",
    "node_modules/",
    "*.generated.ts",
    "./coverage",
    "!.projenrc.js",
  ],
  "overrides": [
    {
      "files": [
        ".projenrc.js",
      ],
      "rules": {
        "@typescript-eslint/no-require-imports": "off",
        "import/no-extraneous-dependencies": "off",
      },
    },
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": 2018,
    "project": "./tsconfig.json",
    "sourceType": "module",
  },
  "plugins": [
    "@typescript-eslint",
    "import",
  ],
  "root": true,
  "rules": {
    "@typescript-eslint/member-ordering": [
      "error",
      {
        "default": [
          "public-static-field",
          "public-static-method",
          "protected-static-field",
          "protected-static-method",
          "private-static-field",
          "private-static-method",
          "field",
          "constructor",
          "method",
        ],
      },
    ],
    "@typescript-eslint/no-floating-promises": [
      "error",
    ],
    "@typescript-eslint/no-require-imports": [
      "error",
    ],
    "@typescript-eslint/no-shadow": [
      "error",
    ],
    "@typescript-eslint/return-await": [
      "error",
    ],
    "dot-notation": [
      "error",
    ],
    "import/no-extraneous-dependencies": [
      "error",
      {
        "devDependencies": [],
        "optionalDependencies": false,
        "peerDependencies": true,
      },
    ],
    "import/no-unresolved": [
      "error",
    ],
    "import/order": [
      "warn",
      {
        "alphabetize": {
          "caseInsensitive": true,
          "order": "asc",
        },
        "groups": [
          "builtin",
          "external",
        ],
      },
    ],
    "key-spacing": [
      "error",
    ],
    "no-bitwise": [
      "error",
    ],
    "no-duplicate-imports": [
      "error",
    ],
    "no-multiple-empty-lines": [
      "error",
    ],
    "no-return-await": [
      "off",
    ],
    "no-shadow": [
      "off",
    ],
    "no-trailing-spaces": [
      "error",
    ],
  },
  "settings": {
    "import/parsers": {
      "@typescript-eslint/parser": [
        ".ts",
        ".tsx",
      ],
    },
    "import/resolver": {
      "node": {},
      "typescript": {
        "alwaysTryTypes": true,
        "project": "./tsconfig.json",
      },
    },
  },
}
`;

exports[`eslint snapshot matches format 'old-cjs' 1`] = `
"// ~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".

module.exports = {
  env: {
    jest: true,
    node: true,
  },
  root: true,
  plugins: [
    "@typescript-eslint",
    "import",
  ],
  parser: "@typescript-eslint/parser",
  parserOptions: {
    ecmaVersion: 2018,
    sourceType: "module",
    project: "./tsconfig.json",
  },
  extends: [
    "plugin:import/typescript",
    "plugin:prettier/recommended",
    "./node_modules/coding-standard/eslintDefaults.js",
    "./node_modules/coding-standard/.eslintrc-es6",
    "./projen/eslintrc.js",
  ],
  settings: {
    "import/parsers": {
      "@typescript-eslint/parser": [
        ".ts",
        ".tsx",
      ],
    },
    "import/resolver": {
      node: {},
      typescript: {
        project: "./tsconfig.json",
        alwaysTryTypes: true,
      },
    },
  },
  ignorePatterns: [
    "*.js",
    "*.d.ts",
    "node_modules/",
    "*.generated.ts",
    "./coverage",
    "!.projenrc.js",
  ],
  rules: {
    "@typescript-eslint/no-require-imports": [
      "error",
    ],
    "import/no-extraneous-dependencies": [
      "error",
      {
        devDependencies: [],
        optionalDependencies: false,
        peerDependencies: true,
      },
    ],
    "import/no-unresolved": [
      "error",
    ],
    "import/order": [
      "warn",
      {
        groups: [
          "builtin",
          "external",
        ],
        alphabetize: {
          order: "asc",
          caseInsensitive: true,
        },
      },
    ],
    "no-duplicate-imports": [
      "error",
    ],
    "no-shadow": [
      "off",
    ],
    "@typescript-eslint/no-shadow": [
      "error",
    ],
    "key-spacing": [
      "error",
    ],
    "no-multiple-empty-lines": [
      "error",
    ],
    "@typescript-eslint/no-floating-promises": [
      "error",
    ],
    "no-return-await": [
      "off",
    ],
    "@typescript-eslint/return-await": [
      "error",
    ],
    "no-trailing-spaces": [
      "error",
    ],
    "dot-notation": [
      "error",
    ],
    "no-bitwise": [
      "error",
    ],
    "@typescript-eslint/member-ordering": [
      "error",
      {
        default: [
          "public-static-field",
          "public-static-method",
          "protected-static-field",
          "protected-static-method",
          "private-static-field",
          "private-static-method",
          "field",
          "constructor",
          "method",
        ],
      },
    ],
  },
  overrides: [
    {
      files: [
        ".projenrc.js",
      ],
      rules: {
        "@typescript-eslint/no-require-imports": "off",
        "import/no-extraneous-dependencies": "off",
      },
    },
  ],
};
"
`;

exports[`prettier snapshot 1`] = `
{
  "env": {
    "jest": true,
    "node": true,
  },
  "extends": [
    "plugin:import/typescript",
    "plugin:prettier/recommended",
  ],
  "ignorePatterns": [
    "*.js",
    "*.d.ts",
    "node_modules/",
    "*.generated.ts",
    "./coverage",
    "!.projenrc.js",
  ],
  "overrides": [
    {
      "files": [
        ".projenrc.js",
      ],
      "rules": {
        "@typescript-eslint/no-require-imports": "off",
        "import/no-extraneous-dependencies": "off",
      },
    },
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": 2018,
    "project": "./tsconfig.json",
    "sourceType": "module",
  },
  "plugins": [
    "@typescript-eslint",
    "import",
  ],
  "root": true,
  "rules": {
    "@typescript-eslint/member-ordering": [
      "error",
      {
        "default": [
          "public-static-field",
          "public-static-method",
          "protected-static-field",
          "protected-static-method",
          "private-static-field",
          "private-static-method",
          "field",
          "constructor",
          "method",
        ],
      },
    ],
    "@typescript-eslint/no-floating-promises": [
      "error",
    ],
    "@typescript-eslint/no-require-imports": [
      "error",
    ],
    "@typescript-eslint/no-shadow": [
      "error",
    ],
    "@typescript-eslint/return-await": [
      "error",
    ],
    "dot-notation": [
      "error",
    ],
    "import/no-duplicates": [
      "error",
    ],
    "import/no-extraneous-dependencies": [
      "error",
      {
        "devDependencies": [],
        "optionalDependencies": false,
        "peerDependencies": true,
      },
    ],
    "import/no-unresolved": [
      "error",
    ],
    "import/order": [
      "warn",
      {
        "alphabetize": {
          "caseInsensitive": true,
          "order": "asc",
        },
        "groups": [
          "builtin",
          "external",
        ],
      },
    ],
    "key-spacing": [
      "error",
    ],
    "no-bitwise": [
      "error",
    ],
    "no-multiple-empty-lines": [
      "error",
    ],
    "no-return-await": [
      "off",
    ],
    "no-shadow": [
      "off",
    ],
    "no-trailing-spaces": [
      "error",
    ],
  },
  "settings": {
    "import/parsers": {
      "@typescript-eslint/parser": [
        ".ts",
        ".tsx",
      ],
    },
    "import/resolver": {
      "node": {},
      "typescript": {
        "alwaysTryTypes": true,
        "project": "./tsconfig.json",
      },
    },
  },
}
`;
