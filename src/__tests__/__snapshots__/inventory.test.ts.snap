// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`inventory 1`] = `
Array [
  Object {
    "docs": "AWS CDK app in TypeScript.",
    "docsurl": "https://github.com/projen/projen/blob/master/API.md#projen-awscdktypescriptapp",
    "fqn": "projen.AwsCdkTypeScriptApp",
    "moduleName": "projen",
    "options": Array [
      Object {
        "default": "true",
        "docs": "Allow the project to include \`peerDependencies\` and \`bundledDependencies\`.",
        "name": "allowLibraryDependencies",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "allowLibraryDependencies",
        ],
        "switch": "allow-library-dependencies",
        "type": "boolean",
      },
      Object {
        "default": "true",
        "docs": "Checks that after build there are no modified files on git.",
        "name": "antitamper",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "antitamper",
        ],
        "switch": "antitamper",
        "type": "boolean",
      },
      Object {
        "default": "\\"main.ts\\"",
        "docs": "The CDK app's entrypoint (relative to the source directory, which is \\"src\\" by default).",
        "name": "appEntrypoint",
        "optional": true,
        "parent": "AwsCdkTypeScriptAppOptions",
        "path": Array [
          "appEntrypoint",
        ],
        "switch": "app-entrypoint",
        "type": "string",
      },
      Object {
        "default": "\\"dist\\"",
        "docs": "A directory which will contain artifacts to be published to npm.",
        "name": "artifactsDirectory",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "artifactsDirectory",
        ],
        "switch": "artifacts-directory",
        "type": "string",
      },
      Object {
        "docs": "Author's e-mail.",
        "name": "authorEmail",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "authorEmail",
        ],
        "switch": "author-email",
        "type": "string",
      },
      Object {
        "docs": "Author's name.",
        "name": "authorName",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "authorName",
        ],
        "switch": "author-name",
        "type": "string",
      },
      Object {
        "docs": "Author's Organization.",
        "name": "authorOrganization",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "authorOrganization",
        ],
        "switch": "author-organization",
        "type": "boolean",
      },
      Object {
        "docs": "Author's URL / Website.",
        "name": "authorUrl",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "authorUrl",
        ],
        "switch": "author-url",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Automatically add all executables under the \`bin\` directory to your \`package.json\` file under the \`bin\` section.",
        "name": "autoDetectBin",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "autoDetectBin",
        ],
        "switch": "auto-detect-bin",
        "type": "boolean",
      },
      Object {
        "docs": "Binary programs vended with your module.",
        "name": "bin",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "bin",
        ],
        "switch": "bin",
        "type": "unknown",
      },
      Object {
        "default": "- true if not a subproject",
        "docs": "Define a GitHub workflow for building PRs.",
        "name": "buildWorkflow",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "buildWorkflow",
        ],
        "switch": "build-workflow",
        "type": "boolean",
      },
      Object {
        "docs": "List of dependencies to bundle into this module.",
        "name": "bundledDeps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "bundledDeps",
        ],
        "switch": "bundled-deps",
        "type": "unknown",
      },
      Object {
        "docs": "Which AWS CDK modules (those that start with \\"@aws-cdk/\\") this app uses.",
        "name": "cdkDependencies",
        "optional": true,
        "parent": "AwsCdkTypeScriptAppOptions",
        "path": Array [
          "cdkDependencies",
        ],
        "switch": "cdk-dependencies",
        "type": "unknown",
      },
      Object {
        "default": "\\"1.95.2\\"",
        "docs": "AWS CDK version to use.",
        "name": "cdkVersion",
        "parent": "AwsCdkTypeScriptAppOptions",
        "path": Array [
          "cdkVersion",
        ],
        "switch": "cdk-version",
        "type": "string",
      },
      Object {
        "default": "false",
        "docs": "Use pinned version instead of caret version for CDK.",
        "name": "cdkVersionPinning",
        "optional": true,
        "parent": "AwsCdkTypeScriptAppOptions",
        "path": Array [
          "cdkVersionPinning",
        ],
        "switch": "cdk-version-pinning",
        "type": "boolean",
      },
      Object {
        "default": "true",
        "docs": "Add a \`clobber\` task which resets the repo to origin.",
        "name": "clobber",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "clobber",
        ],
        "switch": "clobber",
        "type": "boolean",
      },
      Object {
        "default": "false",
        "docs": "Define a GitHub workflow step for sending code coverage metrics to https://codecov.io/ Uses codecov/codecov-action@v1 A secret is required for private repos. Configured with @codeCovTokenSecret.",
        "name": "codeCov",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "codeCov",
        ],
        "switch": "code-cov",
        "type": "boolean",
      },
      Object {
        "default": "- if this option is not specified, only public repositories are supported",
        "docs": "Define the secret name for a specified https://codecov.io/ token A secret is required to send coverage for private repositories.",
        "name": "codeCovTokenSecret",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "codeCovTokenSecret",
        ],
        "switch": "code-cov-token-secret",
        "type": "string",
      },
      Object {
        "default": "- if \`testdir\` is under \`src/**\`, the default is \`true\`, otherwise the default is \`false.",
        "docs": "Compile the code before running tests.",
        "name": "compileBeforeTest",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "compileBeforeTest",
        ],
        "switch": "compile-before-test",
        "type": "boolean",
      },
      Object {
        "docs": "Additional context to include in \`cdk.json\`.",
        "name": "context",
        "optional": true,
        "parent": "AwsCdkTypeScriptAppOptions",
        "path": Array [
          "context",
        ],
        "switch": "context",
        "type": "unknown",
      },
      Object {
        "default": "- defaults to the value of authorName or \\"\\" if \`authorName\` is undefined.",
        "docs": "License copyright owner.",
        "name": "copyrightOwner",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "copyrightOwner",
        ],
        "switch": "copyright-owner",
        "type": "string",
      },
      Object {
        "default": "- current year",
        "docs": "The copyright years to put in the LICENSE file.",
        "name": "copyrightPeriod",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "copyrightPeriod",
        ],
        "switch": "copyright-period",
        "type": "string",
      },
      Object {
        "default": "\\"main\\"",
        "docs": "The name of the main release branch.",
        "name": "defaultReleaseBranch",
        "parent": "NodeProjectOptions",
        "path": Array [
          "defaultReleaseBranch",
        ],
        "switch": "default-release-branch",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Include dependabot configuration.",
        "name": "dependabot",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "dependabot",
        ],
        "switch": "dependabot",
        "type": "boolean",
      },
      Object {
        "default": "- default options",
        "docs": "Options for dependabot.",
        "name": "dependabotOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "dependabotOptions",
        ],
        "switch": "dependabot-options",
        "type": "DependabotOptions",
      },
      Object {
        "default": "[]",
        "docs": "Runtime dependencies of this module.",
        "name": "deps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "deps",
        ],
        "switch": "deps",
        "type": "unknown",
      },
      Object {
        "docs": "The description is just a string that helps people understand the purpose of the package.",
        "name": "description",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "description",
        ],
        "switch": "description",
        "type": "string",
      },
      Object {
        "default": "false",
        "docs": "Add a VSCode development environment (used for GitHub Codespaces).",
        "name": "devContainer",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "devContainer",
        ],
        "switch": "dev-container",
        "type": "boolean",
      },
      Object {
        "default": "[]",
        "docs": "Build dependencies for this module.",
        "name": "devDeps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "devDeps",
        ],
        "switch": "dev-deps",
        "type": "unknown",
      },
      Object {
        "default": "false",
        "docs": "Do not generate a \`tsconfig.json\` file (used by jsii projects since tsconfig.json is generated by the jsii compiler).",
        "name": "disableTsconfig",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "disableTsconfig",
        ],
        "switch": "disable-tsconfig",
        "type": "boolean",
      },
      Object {
        "default": "false",
        "docs": "Docgen by Typedoc.",
        "name": "docgen",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "docgen",
        ],
        "switch": "docgen",
        "type": "boolean",
      },
      Object {
        "default": "\\"docs\\"",
        "docs": "Docs directory.",
        "name": "docsDirectory",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "docsDirectory",
        ],
        "switch": "docs-directory",
        "type": "string",
      },
      Object {
        "default": "\\"lib/index.js\\"",
        "docs": "Module entrypoint (\`main\` in \`package.json\`).",
        "name": "entrypoint",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "entrypoint",
        ],
        "switch": "entrypoint",
        "type": "string",
      },
      Object {
        "default": "- .d.ts file derived from the project's entrypoint (usually lib/index.d.ts)",
        "docs": "The .d.ts file that includes the type declarations for this module.",
        "name": "entrypointTypes",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "entrypointTypes",
        ],
        "switch": "entrypoint-types",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Setup eslint.",
        "name": "eslint",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "eslint",
        ],
        "switch": "eslint",
        "type": "boolean",
      },
      Object {
        "default": "- opinionated default options",
        "docs": "Eslint options.",
        "name": "eslintOptions",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "eslintOptions",
        ],
        "switch": "eslint-options",
        "type": "EslintOptions",
      },
      Object {
        "docs": "Additional entries to .gitignore.",
        "name": "gitignore",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "gitignore",
        ],
        "switch": "gitignore",
        "type": "unknown",
      },
      Object {
        "default": "false",
        "docs": "Add a Gitpod development environment.",
        "name": "gitpod",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "gitpod",
        ],
        "switch": "gitpod",
        "type": "boolean",
      },
      Object {
        "docs": "Package's Homepage / Website.",
        "name": "homepage",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "homepage",
        ],
        "switch": "homepage",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Setup jest unit tests.",
        "name": "jest",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "jest",
        ],
        "switch": "jest",
        "type": "boolean",
      },
      Object {
        "default": "- default options",
        "docs": "Jest options.",
        "name": "jestOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "jestOptions",
        ],
        "switch": "jest-options",
        "type": "JestOptions",
      },
      Object {
        "default": "\\"latest\\"",
        "docs": "Version requirement of \`jsii-release\` which is used to publish modules to npm.",
        "name": "jsiiReleaseVersion",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "jsiiReleaseVersion",
        ],
        "switch": "jsii-release-version",
        "type": "string",
      },
      Object {
        "docs": "Keywords to include in \`package.json\`.",
        "name": "keywords",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "keywords",
        ],
        "switch": "keywords",
        "type": "unknown",
      },
      Object {
        "default": "\\"lib\\"",
        "docs": "Typescript  artifacts output directory.",
        "name": "libdir",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "libdir",
        ],
        "switch": "libdir",
        "type": "string",
      },
      Object {
        "default": "\\"Apache-2.0\\"",
        "docs": "License's SPDX identifier.",
        "name": "license",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "license",
        ],
        "switch": "license",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Indicates if a license should be added.",
        "name": "licensed",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "licensed",
        ],
        "switch": "licensed",
        "type": "boolean",
      },
      Object {
        "default": "{}",
        "docs": "Configure logging options such as verbosity.",
        "name": "logging",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "logging",
        ],
        "switch": "logging",
        "type": "LoggerOptions",
      },
      Object {
        "default": "- no max",
        "docs": "Minimum node.js version to require via \`engines\` (inclusive).",
        "name": "maxNodeVersion",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "maxNodeVersion",
        ],
        "switch": "max-node-version",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Whether mergify should be enabled on this repository or not.",
        "name": "mergify",
        "optional": true,
        "parent": "GitHubOptions",
        "path": Array [
          "mergify",
        ],
        "switch": "mergify",
        "type": "boolean",
      },
      Object {
        "default": "\\"auto-merge\\"",
        "docs": "Automatically merge PRs that build successfully and have this label.",
        "name": "mergifyAutoMergeLabel",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "mergifyAutoMergeLabel",
        ],
        "switch": "mergify-auto-merge-label",
        "type": "string",
      },
      Object {
        "default": "- default options",
        "docs": "Options for mergify.",
        "name": "mergifyOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "mergifyOptions",
        ],
        "switch": "mergify-options",
        "type": "MergifyOptions",
      },
      Object {
        "default": "- no \\"engines\\" specified",
        "docs": "Minimum Node.js version to require via package.json \`engines\` (inclusive).",
        "name": "minNodeVersion",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "minNodeVersion",
        ],
        "switch": "min-node-version",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Automatically update files modified during builds to pull-request branches.",
        "name": "mutableBuild",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "mutableBuild",
        ],
        "switch": "mutable-build",
        "type": "boolean",
      },
      Object {
        "default": "$BASEDIR",
        "docs": "This is the name of your project.",
        "name": "name",
        "parent": "ProjectOptions",
        "path": Array [
          "name",
        ],
        "switch": "name",
        "type": "string",
      },
      Object {
        "default": "- for scoped packages (e.g. \`foo@bar\`), the default is
\`NpmAccess.RESTRICTED\`, for non-scoped packages, the default is
\`NpmAccess.PUBLIC\`.",
        "docs": "Access level of the npm package.",
        "name": "npmAccess",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "npmAccess",
        ],
        "switch": "npm-access",
        "type": "NpmAccess",
      },
      Object {
        "default": "\\"latest\\"",
        "docs": "Tags can be used to provide an alias instead of version numbers.",
        "name": "npmDistTag",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "npmDistTag",
        ],
        "switch": "npm-dist-tag",
        "type": "string",
      },
      Object {
        "docs": "Additional entries to .npmignore.",
        "name": "npmignore",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "npmignore",
        ],
        "switch": "npmignore",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Defines an .npmignore file. Normally this is only needed for libraries that are packaged as tarballs.",
        "name": "npmignoreEnabled",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "npmignoreEnabled",
        ],
        "switch": "npmignore-enabled",
        "type": "boolean",
      },
      Object {
        "deprecated": true,
        "docs": "The host name of the npm registry to publish to.",
        "name": "npmRegistry",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "npmRegistry",
        ],
        "switch": "npm-registry",
        "type": "string",
      },
      Object {
        "default": "\\"https://registry.npmjs.org\\"",
        "docs": "The base URL of the npm package registry.",
        "name": "npmRegistryUrl",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "npmRegistryUrl",
        ],
        "switch": "npm-registry-url",
        "type": "string",
      },
      Object {
        "default": "NpmTaskExecution.PROJEN",
        "docs": "Determines how tasks are executed when invoked as npm scripts (yarn/npm run xyz).",
        "name": "npmTaskExecution",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "npmTaskExecution",
        ],
        "switch": "npm-task-execution",
        "type": "NpmTaskExecution",
      },
      Object {
        "default": "\\"NPM_TOKEN\\"",
        "docs": "GitHub secret which contains the NPM token to use when publishing packages.",
        "name": "npmTokenSecret",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "npmTokenSecret",
        ],
        "switch": "npm-token-secret",
        "type": "string",
      },
      Object {
        "default": "\\".\\"",
        "docs": "The root directory of the project.",
        "name": "outdir",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "outdir",
        ],
        "switch": "outdir",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Defines a \`yarn package\` command that will produce a tarball and place it under \`dist/js\`.",
        "name": "package",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "package",
        ],
        "switch": "package",
        "type": "boolean",
      },
      Object {
        "default": "NodePackageManager.YARN",
        "docs": "The Node Package Manager used to execute scripts.",
        "name": "packageManager",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "packageManager",
        ],
        "switch": "package-manager",
        "type": "NodePackageManager",
      },
      Object {
        "default": "- defaults to project name",
        "docs": "The \\"name\\" in package.json.",
        "name": "packageName",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "packageName",
        ],
        "switch": "package-name",
        "type": "string",
      },
      Object {
        "docs": "The parent project, if this project is part of a bigger project.",
        "name": "parent",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "parent",
        ],
        "switch": "parent",
        "type": "Project",
      },
      Object {
        "docs": "Options for \`peerDeps\`.",
        "name": "peerDependencyOptions",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "peerDependencyOptions",
        ],
        "switch": "peer-dependency-options",
        "type": "PeerDependencyOptions",
      },
      Object {
        "default": "[]",
        "docs": "Peer dependencies for this module.",
        "name": "peerDeps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "peerDeps",
        ],
        "switch": "peer-deps",
        "type": "unknown",
      },
      Object {
        "default": "ProjectType.UNKNOWN",
        "docs": "Which type of project this is (library/app).",
        "name": "projectType",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "projectType",
        ],
        "switch": "project-type",
        "type": "ProjectType",
      },
      Object {
        "default": "\\"npx projen\\"",
        "docs": "The shell command to use in order to run the projen CLI.",
        "name": "projenCommand",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "projenCommand",
        ],
        "switch": "projen-command",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Indicates of \\"projen\\" should be installed as a devDependency.",
        "name": "projenDevDependency",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenDevDependency",
        ],
        "switch": "projen-dev-dependency",
        "type": "boolean",
      },
      Object {
        "default": "true",
        "docs": "Execute \`projen\` as the first step of the \`build\` task to synthesize project files.",
        "name": "projenDuringBuild",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenDuringBuild",
        ],
        "switch": "projen-during-build",
        "type": "boolean",
      },
      Object {
        "default": "true",
        "docs": "Generate (once) .projenrc.js (in JavaScript). Set to \`false\` in order to disable .projenrc.js generation.",
        "name": "projenrcJs",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenrcJs",
        ],
        "switch": "projenrc-js",
        "type": "boolean",
      },
      Object {
        "default": "- default options",
        "docs": "Options for .projenrc.js.",
        "name": "projenrcJsOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenrcJsOptions",
        ],
        "switch": "projenrc-js-options",
        "type": "ProjenrcOptions",
      },
      Object {
        "default": "false",
        "docs": "Use TypeScript for your projenrc file (\`.projenrc.ts\`).",
        "name": "projenrcTs",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "projenrcTs",
        ],
        "switch": "projenrc-ts",
        "type": "boolean",
      },
      Object {
        "docs": "Options for .projenrc.ts.",
        "name": "projenrcTsOptions",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "projenrcTsOptions",
        ],
        "switch": "projenrc-ts-options",
        "type": "ProjenrcOptions",
      },
      Object {
        "default": "- \\"true\\" if mergify auto-merge is enabled (default)",
        "docs": "Automatically merge projen upgrade PRs when build passes.",
        "name": "projenUpgradeAutoMerge",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenUpgradeAutoMerge",
        ],
        "switch": "projen-upgrade-auto-merge",
        "type": "boolean",
      },
      Object {
        "default": "[ \\"0 6 * * *\\" ]",
        "docs": "Customize the projenUpgrade schedule in cron expression.",
        "name": "projenUpgradeSchedule",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenUpgradeSchedule",
        ],
        "switch": "projen-upgrade-schedule",
        "type": "unknown",
      },
      Object {
        "default": "- no automatic projen upgrade pull requests",
        "docs": "Periodically submits a pull request for projen upgrades (executes \`yarn projen:upgrade\`).",
        "name": "projenUpgradeSecret",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenUpgradeSecret",
        ],
        "switch": "projen-upgrade-secret",
        "type": "string",
      },
      Object {
        "default": "- Defaults to the latest version.",
        "docs": "Version of projen to install.",
        "name": "projenVersion",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenVersion",
        ],
        "switch": "projen-version",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Include a GitHub pull request template.",
        "name": "pullRequestTemplate",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "pullRequestTemplate",
        ],
        "switch": "pull-request-template",
        "type": "boolean",
      },
      Object {
        "default": "- default content",
        "docs": "The contents of the pull request template.",
        "name": "pullRequestTemplateContents",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "pullRequestTemplateContents",
        ],
        "switch": "pull-request-template-contents",
        "type": "string",
      },
      Object {
        "default": "- { filename: 'README.md', contents: '# replace this' }",
        "docs": "The README setup.",
        "name": "readme",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "readme",
        ],
        "switch": "readme",
        "type": "SampleReadmeProps",
      },
      Object {
        "default": "[ \\"main\\" ]",
        "docs": "Branches which trigger a release.",
        "name": "releaseBranches",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "releaseBranches",
        ],
        "switch": "release-branches",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Automatically release new versions every commit to one of branches in \`releaseBranches\`.",
        "name": "releaseEveryCommit",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "releaseEveryCommit",
        ],
        "switch": "release-every-commit",
        "type": "boolean",
      },
      Object {
        "default": "- no scheduled releases",
        "docs": "CRON schedule to trigger new releases.",
        "name": "releaseSchedule",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "releaseSchedule",
        ],
        "switch": "release-schedule",
        "type": "string",
      },
      Object {
        "default": "false",
        "docs": "Automatically release to npm when new versions are introduced.",
        "name": "releaseToNpm",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "releaseToNpm",
        ],
        "switch": "release-to-npm",
        "type": "boolean",
      },
      Object {
        "default": "- true if not a subproject",
        "docs": "Define a GitHub workflow for releasing from \\"main\\" when new versions are bumped.",
        "name": "releaseWorkflow",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "releaseWorkflow",
        ],
        "switch": "release-workflow",
        "type": "boolean",
      },
      Object {
        "docs": "A set of workflow steps to execute in order to setup the workflow container.",
        "name": "releaseWorkflowSetupSteps",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "releaseWorkflowSetupSteps",
        ],
        "switch": "release-workflow-setup-steps",
        "type": "unknown",
      },
      Object {
        "docs": "The repository is the location where the actual code for your package lives.",
        "name": "repository",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "repository",
        ],
        "switch": "repository",
        "type": "string",
      },
      Object {
        "docs": "If the package.json for your package is not in the root directory (for example if it is part of a monorepo), you can specify the directory in which it lives.",
        "name": "repositoryDirectory",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "repositoryDirectory",
        ],
        "switch": "repository-directory",
        "type": "string",
      },
      Object {
        "default": "CdkApprovalLevel.BROADENING",
        "docs": "To protect you against unintended changes that affect your security posture, the AWS CDK Toolkit prompts you to approve security-related changes before deploying them.",
        "name": "requireApproval",
        "optional": true,
        "parent": "AwsCdkTypeScriptAppOptions",
        "path": Array [
          "requireApproval",
        ],
        "switch": "require-approval",
        "type": "CdkApprovalLevel",
      },
      Object {
        "default": "true",
        "docs": "Generate one-time sample in \`src/\` and \`test/\` if there are no files there.",
        "name": "sampleCode",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "sampleCode",
        ],
        "switch": "sample-code",
        "type": "boolean",
      },
      Object {
        "default": "{}",
        "docs": "npm scripts to include.",
        "name": "scripts",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "scripts",
        ],
        "switch": "scripts",
        "type": "unknown",
      },
      Object {
        "default": "\\"src\\"",
        "docs": "Typescript sources directory.",
        "name": "srcdir",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "srcdir",
        ],
        "switch": "srcdir",
        "type": "string",
      },
      Object {
        "docs": "Package's Stability.",
        "name": "stability",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "stability",
        ],
        "switch": "stability",
        "type": "string",
      },
      Object {
        "default": "\\"test\\"",
        "docs": "Jest tests directory. Tests files should be named \`xxx.test.ts\`.",
        "name": "testdir",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "testdir",
        ],
        "switch": "testdir",
        "type": "string",
      },
      Object {
        "docs": "Custom TSConfig.",
        "name": "tsconfig",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "tsconfig",
        ],
        "switch": "tsconfig",
        "type": "TypescriptConfigOptions",
      },
      Object {
        "default": "\\"latest\\"",
        "docs": "TypeScript version to use.",
        "name": "typescriptVersion",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "typescriptVersion",
        ],
        "switch": "typescript-version",
        "type": "string",
      },
      Object {
        "default": "\\"yarn install --frozen-lockfile && yarn projen\\"",
        "docs": "Workflow steps to use in order to bootstrap this repo.",
        "name": "workflowBootstrapSteps",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "workflowBootstrapSteps",
        ],
        "switch": "workflow-bootstrap-steps",
        "type": "unknown",
      },
      Object {
        "default": "- default image",
        "docs": "Container image to use for GitHub workflows.",
        "name": "workflowContainerImage",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "workflowContainerImage",
        ],
        "switch": "workflow-container-image",
        "type": "string",
      },
      Object {
        "default": "- same as \`minNodeVersion\`",
        "docs": "The node version to use in GitHub workflows.",
        "name": "workflowNodeVersion",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "workflowNodeVersion",
        ],
        "switch": "workflow-node-version",
        "type": "string",
      },
    ],
    "pjid": "awscdk-app-ts",
    "typename": "AwsCdkTypeScriptApp",
  },
  Object {
    "docs": "AWS CDK construct library project.",
    "docsurl": "https://github.com/projen/projen/blob/master/API.md#projen-awscdkconstructlibrary",
    "fqn": "projen.AwsCdkConstructLibrary",
    "moduleName": "projen",
    "options": Array [
      Object {
        "default": "true",
        "docs": "Allow the project to include \`peerDependencies\` and \`bundledDependencies\`.",
        "name": "allowLibraryDependencies",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "allowLibraryDependencies",
        ],
        "switch": "allow-library-dependencies",
        "type": "boolean",
      },
      Object {
        "default": "true",
        "docs": "Checks that after build there are no modified files on git.",
        "name": "antitamper",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "antitamper",
        ],
        "switch": "antitamper",
        "type": "boolean",
      },
      Object {
        "default": "\\"dist\\"",
        "docs": "A directory which will contain artifacts to be published to npm.",
        "name": "artifactsDirectory",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "artifactsDirectory",
        ],
        "switch": "artifacts-directory",
        "type": "string",
      },
      Object {
        "default": "$GIT_USER_NAME",
        "docs": "The name of the library author.",
        "name": "author",
        "parent": "JsiiProjectOptions",
        "path": Array [
          "author",
        ],
        "switch": "author",
        "type": "string",
      },
      Object {
        "default": "$GIT_USER_EMAIL",
        "docs": "Email or URL of the library author.",
        "name": "authorAddress",
        "parent": "JsiiProjectOptions",
        "path": Array [
          "authorAddress",
        ],
        "switch": "author-address",
        "type": "string",
      },
      Object {
        "docs": "Author's e-mail.",
        "name": "authorEmail",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "authorEmail",
        ],
        "switch": "author-email",
        "type": "string",
      },
      Object {
        "docs": "Author's name.",
        "name": "authorName",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "authorName",
        ],
        "switch": "author-name",
        "type": "string",
      },
      Object {
        "docs": "Author's Organization.",
        "name": "authorOrganization",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "authorOrganization",
        ],
        "switch": "author-organization",
        "type": "boolean",
      },
      Object {
        "docs": "Author's URL / Website.",
        "name": "authorUrl",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "authorUrl",
        ],
        "switch": "author-url",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Automatically add all executables under the \`bin\` directory to your \`package.json\` file under the \`bin\` section.",
        "name": "autoDetectBin",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "autoDetectBin",
        ],
        "switch": "auto-detect-bin",
        "type": "boolean",
      },
      Object {
        "docs": "Binary programs vended with your module.",
        "name": "bin",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "bin",
        ],
        "switch": "bin",
        "type": "unknown",
      },
      Object {
        "default": "- true if not a subproject",
        "docs": "Define a GitHub workflow for building PRs.",
        "name": "buildWorkflow",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "buildWorkflow",
        ],
        "switch": "build-workflow",
        "type": "boolean",
      },
      Object {
        "docs": "List of dependencies to bundle into this module.",
        "name": "bundledDeps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "bundledDeps",
        ],
        "switch": "bundled-deps",
        "type": "unknown",
      },
      Object {
        "default": "- new version will be announced",
        "docs": "Libraries will be picked up by the construct catalog when they are published to npm as jsii modules and will be published under:.",
        "name": "catalog",
        "optional": true,
        "parent": "ConstructLibraryOptions",
        "path": Array [
          "catalog",
        ],
        "switch": "catalog",
        "type": "Catalog",
      },
      Object {
        "default": "true",
        "docs": "Install the @aws-cdk/assert library?",
        "name": "cdkAssert",
        "optional": true,
        "parent": "AwsCdkConstructLibraryOptions",
        "path": Array [
          "cdkAssert",
        ],
        "switch": "cdk-assert",
        "type": "boolean",
      },
      Object {
        "docs": "Which AWS CDK modules (those that start with \\"@aws-cdk/\\") does this library require when consumed?",
        "name": "cdkDependencies",
        "optional": true,
        "parent": "AwsCdkConstructLibraryOptions",
        "path": Array [
          "cdkDependencies",
        ],
        "switch": "cdk-dependencies",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "If this is enabled (default), all modules declared in \`cdkDependencies\` will be also added as normal \`dependencies\` (as well as \`peerDependencies\`).",
        "name": "cdkDependenciesAsDeps",
        "optional": true,
        "parent": "AwsCdkConstructLibraryOptions",
        "path": Array [
          "cdkDependenciesAsDeps",
        ],
        "switch": "cdk-dependencies-as-deps",
        "type": "boolean",
      },
      Object {
        "docs": "AWS CDK modules required for testing.",
        "name": "cdkTestDependencies",
        "optional": true,
        "parent": "AwsCdkConstructLibraryOptions",
        "path": Array [
          "cdkTestDependencies",
        ],
        "switch": "cdk-test-dependencies",
        "type": "unknown",
      },
      Object {
        "default": "\\"1.95.2\\"",
        "docs": "Minimum target version this library is tested against.",
        "name": "cdkVersion",
        "parent": "AwsCdkConstructLibraryOptions",
        "path": Array [
          "cdkVersion",
        ],
        "switch": "cdk-version",
        "type": "string",
      },
      Object {
        "default": "false",
        "docs": "Use pinned version instead of caret version for CDK.",
        "name": "cdkVersionPinning",
        "optional": true,
        "parent": "AwsCdkConstructLibraryOptions",
        "path": Array [
          "cdkVersionPinning",
        ],
        "switch": "cdk-version-pinning",
        "type": "boolean",
      },
      Object {
        "default": "true",
        "docs": "Add a \`clobber\` task which resets the repo to origin.",
        "name": "clobber",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "clobber",
        ],
        "switch": "clobber",
        "type": "boolean",
      },
      Object {
        "default": "false",
        "docs": "Define a GitHub workflow step for sending code coverage metrics to https://codecov.io/ Uses codecov/codecov-action@v1 A secret is required for private repos. Configured with @codeCovTokenSecret.",
        "name": "codeCov",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "codeCov",
        ],
        "switch": "code-cov",
        "type": "boolean",
      },
      Object {
        "default": "- if this option is not specified, only public repositories are supported",
        "docs": "Define the secret name for a specified https://codecov.io/ token A secret is required to send coverage for private repositories.",
        "name": "codeCovTokenSecret",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "codeCovTokenSecret",
        ],
        "switch": "code-cov-token-secret",
        "type": "string",
      },
      Object {
        "default": "false",
        "docs": "Automatically run API compatibility test against the latest version published to npm after compilation.",
        "name": "compat",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": Array [
          "compat",
        ],
        "switch": "compat",
        "type": "boolean",
      },
      Object {
        "default": "\\".compatignore\\"",
        "docs": "Name of the ignore file for API compatibility tests.",
        "name": "compatIgnore",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": Array [
          "compatIgnore",
        ],
        "switch": "compat-ignore",
        "type": "string",
      },
      Object {
        "default": "- if \`testdir\` is under \`src/**\`, the default is \`true\`, otherwise the default is \`false.",
        "docs": "Compile the code before running tests.",
        "name": "compileBeforeTest",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "compileBeforeTest",
        ],
        "switch": "compile-before-test",
        "type": "boolean",
      },
      Object {
        "docs": "Minimum target version of constructs being tested against. If not provided, the default value depends on the configured \`cdkVersion\`:.",
        "name": "constructsVersion",
        "optional": true,
        "parent": "AwsCdkConstructLibraryOptions",
        "path": Array [
          "constructsVersion",
        ],
        "switch": "constructs-version",
        "type": "string",
      },
      Object {
        "default": "- defaults to the value of authorName or \\"\\" if \`authorName\` is undefined.",
        "docs": "License copyright owner.",
        "name": "copyrightOwner",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "copyrightOwner",
        ],
        "switch": "copyright-owner",
        "type": "string",
      },
      Object {
        "default": "- current year",
        "docs": "The copyright years to put in the LICENSE file.",
        "name": "copyrightPeriod",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "copyrightPeriod",
        ],
        "switch": "copyright-period",
        "type": "string",
      },
      Object {
        "default": "\\"main\\"",
        "docs": "The name of the main release branch.",
        "name": "defaultReleaseBranch",
        "parent": "NodeProjectOptions",
        "path": Array [
          "defaultReleaseBranch",
        ],
        "switch": "default-release-branch",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Include dependabot configuration.",
        "name": "dependabot",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "dependabot",
        ],
        "switch": "dependabot",
        "type": "boolean",
      },
      Object {
        "default": "- default options",
        "docs": "Options for dependabot.",
        "name": "dependabotOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "dependabotOptions",
        ],
        "switch": "dependabot-options",
        "type": "DependabotOptions",
      },
      Object {
        "default": "[]",
        "docs": "Runtime dependencies of this module.",
        "name": "deps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "deps",
        ],
        "switch": "deps",
        "type": "unknown",
      },
      Object {
        "docs": "The description is just a string that helps people understand the purpose of the package.",
        "name": "description",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "description",
        ],
        "switch": "description",
        "type": "string",
      },
      Object {
        "default": "false",
        "docs": "Add a VSCode development environment (used for GitHub Codespaces).",
        "name": "devContainer",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "devContainer",
        ],
        "switch": "dev-container",
        "type": "boolean",
      },
      Object {
        "default": "[]",
        "docs": "Build dependencies for this module.",
        "name": "devDeps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "devDeps",
        ],
        "switch": "dev-deps",
        "type": "unknown",
      },
      Object {
        "default": "false",
        "docs": "Do not generate a \`tsconfig.json\` file (used by jsii projects since tsconfig.json is generated by the jsii compiler).",
        "name": "disableTsconfig",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "disableTsconfig",
        ],
        "switch": "disable-tsconfig",
        "type": "boolean",
      },
      Object {
        "default": "false",
        "docs": "Docgen by Typedoc.",
        "name": "docgen",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "docgen",
        ],
        "switch": "docgen",
        "type": "boolean",
      },
      Object {
        "default": "\\"docs\\"",
        "docs": "Docs directory.",
        "name": "docsDirectory",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "docsDirectory",
        ],
        "switch": "docs-directory",
        "type": "string",
      },
      Object {
        "deprecated": true,
        "name": "dotnet",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": Array [
          "dotnet",
        ],
        "switch": "dotnet",
        "type": "JsiiDotNetTarget",
      },
      Object {
        "default": "\\"lib/index.js\\"",
        "docs": "Module entrypoint (\`main\` in \`package.json\`).",
        "name": "entrypoint",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "entrypoint",
        ],
        "switch": "entrypoint",
        "type": "string",
      },
      Object {
        "default": "- .d.ts file derived from the project's entrypoint (usually lib/index.d.ts)",
        "docs": "The .d.ts file that includes the type declarations for this module.",
        "name": "entrypointTypes",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "entrypointTypes",
        ],
        "switch": "entrypoint-types",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Setup eslint.",
        "name": "eslint",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "eslint",
        ],
        "switch": "eslint",
        "type": "boolean",
      },
      Object {
        "default": "- opinionated default options",
        "docs": "Eslint options.",
        "name": "eslintOptions",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "eslintOptions",
        ],
        "switch": "eslint-options",
        "type": "EslintOptions",
      },
      Object {
        "docs": "Accepts a list of glob patterns.",
        "name": "excludeTypescript",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": Array [
          "excludeTypescript",
        ],
        "switch": "exclude-typescript",
        "type": "unknown",
      },
      Object {
        "docs": "Additional entries to .gitignore.",
        "name": "gitignore",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "gitignore",
        ],
        "switch": "gitignore",
        "type": "unknown",
      },
      Object {
        "default": "false",
        "docs": "Add a Gitpod development environment.",
        "name": "gitpod",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "gitpod",
        ],
        "switch": "gitpod",
        "type": "boolean",
      },
      Object {
        "docs": "Package's Homepage / Website.",
        "name": "homepage",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "homepage",
        ],
        "switch": "homepage",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Setup jest unit tests.",
        "name": "jest",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "jest",
        ],
        "switch": "jest",
        "type": "boolean",
      },
      Object {
        "default": "- default options",
        "docs": "Jest options.",
        "name": "jestOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "jestOptions",
        ],
        "switch": "jest-options",
        "type": "JestOptions",
      },
      Object {
        "default": "\\"latest\\"",
        "docs": "Version requirement of \`jsii-release\` which is used to publish modules to npm.",
        "name": "jsiiReleaseVersion",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "jsiiReleaseVersion",
        ],
        "switch": "jsii-release-version",
        "type": "string",
      },
      Object {
        "docs": "Keywords to include in \`package.json\`.",
        "name": "keywords",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "keywords",
        ],
        "switch": "keywords",
        "type": "unknown",
      },
      Object {
        "default": "\\"lib\\"",
        "docs": "Typescript  artifacts output directory.",
        "name": "libdir",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "libdir",
        ],
        "switch": "libdir",
        "type": "string",
      },
      Object {
        "default": "\\"Apache-2.0\\"",
        "docs": "License's SPDX identifier.",
        "name": "license",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "license",
        ],
        "switch": "license",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Indicates if a license should be added.",
        "name": "licensed",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "licensed",
        ],
        "switch": "licensed",
        "type": "boolean",
      },
      Object {
        "default": "{}",
        "docs": "Configure logging options such as verbosity.",
        "name": "logging",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "logging",
        ],
        "switch": "logging",
        "type": "LoggerOptions",
      },
      Object {
        "default": "- no max",
        "docs": "Minimum node.js version to require via \`engines\` (inclusive).",
        "name": "maxNodeVersion",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "maxNodeVersion",
        ],
        "switch": "max-node-version",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Whether mergify should be enabled on this repository or not.",
        "name": "mergify",
        "optional": true,
        "parent": "GitHubOptions",
        "path": Array [
          "mergify",
        ],
        "switch": "mergify",
        "type": "boolean",
      },
      Object {
        "default": "\\"auto-merge\\"",
        "docs": "Automatically merge PRs that build successfully and have this label.",
        "name": "mergifyAutoMergeLabel",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "mergifyAutoMergeLabel",
        ],
        "switch": "mergify-auto-merge-label",
        "type": "string",
      },
      Object {
        "default": "- default options",
        "docs": "Options for mergify.",
        "name": "mergifyOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "mergifyOptions",
        ],
        "switch": "mergify-options",
        "type": "MergifyOptions",
      },
      Object {
        "default": "- no \\"engines\\" specified",
        "docs": "Minimum Node.js version to require via package.json \`engines\` (inclusive).",
        "name": "minNodeVersion",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "minNodeVersion",
        ],
        "switch": "min-node-version",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Automatically update files modified during builds to pull-request branches.",
        "name": "mutableBuild",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "mutableBuild",
        ],
        "switch": "mutable-build",
        "type": "boolean",
      },
      Object {
        "default": "$BASEDIR",
        "docs": "This is the name of your project.",
        "name": "name",
        "parent": "ProjectOptions",
        "path": Array [
          "name",
        ],
        "switch": "name",
        "type": "string",
      },
      Object {
        "default": "- for scoped packages (e.g. \`foo@bar\`), the default is
\`NpmAccess.RESTRICTED\`, for non-scoped packages, the default is
\`NpmAccess.PUBLIC\`.",
        "docs": "Access level of the npm package.",
        "name": "npmAccess",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "npmAccess",
        ],
        "switch": "npm-access",
        "type": "NpmAccess",
      },
      Object {
        "default": "\\"latest\\"",
        "docs": "Tags can be used to provide an alias instead of version numbers.",
        "name": "npmDistTag",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "npmDistTag",
        ],
        "switch": "npm-dist-tag",
        "type": "string",
      },
      Object {
        "docs": "Additional entries to .npmignore.",
        "name": "npmignore",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "npmignore",
        ],
        "switch": "npmignore",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Defines an .npmignore file. Normally this is only needed for libraries that are packaged as tarballs.",
        "name": "npmignoreEnabled",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "npmignoreEnabled",
        ],
        "switch": "npmignore-enabled",
        "type": "boolean",
      },
      Object {
        "deprecated": true,
        "docs": "The host name of the npm registry to publish to.",
        "name": "npmRegistry",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "npmRegistry",
        ],
        "switch": "npm-registry",
        "type": "string",
      },
      Object {
        "default": "\\"https://registry.npmjs.org\\"",
        "docs": "The base URL of the npm package registry.",
        "name": "npmRegistryUrl",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "npmRegistryUrl",
        ],
        "switch": "npm-registry-url",
        "type": "string",
      },
      Object {
        "default": "NpmTaskExecution.PROJEN",
        "docs": "Determines how tasks are executed when invoked as npm scripts (yarn/npm run xyz).",
        "name": "npmTaskExecution",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "npmTaskExecution",
        ],
        "switch": "npm-task-execution",
        "type": "NpmTaskExecution",
      },
      Object {
        "default": "\\"NPM_TOKEN\\"",
        "docs": "GitHub secret which contains the NPM token to use when publishing packages.",
        "name": "npmTokenSecret",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "npmTokenSecret",
        ],
        "switch": "npm-token-secret",
        "type": "string",
      },
      Object {
        "default": "\\".\\"",
        "docs": "The root directory of the project.",
        "name": "outdir",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "outdir",
        ],
        "switch": "outdir",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Defines a \`yarn package\` command that will produce a tarball and place it under \`dist/js\`.",
        "name": "package",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "package",
        ],
        "switch": "package",
        "type": "boolean",
      },
      Object {
        "default": "NodePackageManager.YARN",
        "docs": "The Node Package Manager used to execute scripts.",
        "name": "packageManager",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "packageManager",
        ],
        "switch": "package-manager",
        "type": "NodePackageManager",
      },
      Object {
        "default": "- defaults to project name",
        "docs": "The \\"name\\" in package.json.",
        "name": "packageName",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "packageName",
        ],
        "switch": "package-name",
        "type": "string",
      },
      Object {
        "docs": "The parent project, if this project is part of a bigger project.",
        "name": "parent",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "parent",
        ],
        "switch": "parent",
        "type": "Project",
      },
      Object {
        "docs": "Options for \`peerDeps\`.",
        "name": "peerDependencyOptions",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "peerDependencyOptions",
        ],
        "switch": "peer-dependency-options",
        "type": "PeerDependencyOptions",
      },
      Object {
        "default": "[]",
        "docs": "Peer dependencies for this module.",
        "name": "peerDeps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "peerDeps",
        ],
        "switch": "peer-deps",
        "type": "unknown",
      },
      Object {
        "default": "ProjectType.UNKNOWN",
        "docs": "Which type of project this is (library/app).",
        "name": "projectType",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "projectType",
        ],
        "switch": "project-type",
        "type": "ProjectType",
      },
      Object {
        "default": "\\"npx projen\\"",
        "docs": "The shell command to use in order to run the projen CLI.",
        "name": "projenCommand",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "projenCommand",
        ],
        "switch": "projen-command",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Indicates of \\"projen\\" should be installed as a devDependency.",
        "name": "projenDevDependency",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenDevDependency",
        ],
        "switch": "projen-dev-dependency",
        "type": "boolean",
      },
      Object {
        "default": "true",
        "docs": "Execute \`projen\` as the first step of the \`build\` task to synthesize project files.",
        "name": "projenDuringBuild",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenDuringBuild",
        ],
        "switch": "projen-during-build",
        "type": "boolean",
      },
      Object {
        "default": "true",
        "docs": "Generate (once) .projenrc.js (in JavaScript). Set to \`false\` in order to disable .projenrc.js generation.",
        "name": "projenrcJs",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenrcJs",
        ],
        "switch": "projenrc-js",
        "type": "boolean",
      },
      Object {
        "default": "- default options",
        "docs": "Options for .projenrc.js.",
        "name": "projenrcJsOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenrcJsOptions",
        ],
        "switch": "projenrc-js-options",
        "type": "ProjenrcOptions",
      },
      Object {
        "default": "false",
        "docs": "Use TypeScript for your projenrc file (\`.projenrc.ts\`).",
        "name": "projenrcTs",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "projenrcTs",
        ],
        "switch": "projenrc-ts",
        "type": "boolean",
      },
      Object {
        "docs": "Options for .projenrc.ts.",
        "name": "projenrcTsOptions",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "projenrcTsOptions",
        ],
        "switch": "projenrc-ts-options",
        "type": "ProjenrcOptions",
      },
      Object {
        "default": "- \\"true\\" if mergify auto-merge is enabled (default)",
        "docs": "Automatically merge projen upgrade PRs when build passes.",
        "name": "projenUpgradeAutoMerge",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenUpgradeAutoMerge",
        ],
        "switch": "projen-upgrade-auto-merge",
        "type": "boolean",
      },
      Object {
        "default": "[ \\"0 6 * * *\\" ]",
        "docs": "Customize the projenUpgrade schedule in cron expression.",
        "name": "projenUpgradeSchedule",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenUpgradeSchedule",
        ],
        "switch": "projen-upgrade-schedule",
        "type": "unknown",
      },
      Object {
        "default": "- no automatic projen upgrade pull requests",
        "docs": "Periodically submits a pull request for projen upgrades (executes \`yarn projen:upgrade\`).",
        "name": "projenUpgradeSecret",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenUpgradeSecret",
        ],
        "switch": "projen-upgrade-secret",
        "type": "string",
      },
      Object {
        "default": "- Defaults to the latest version.",
        "docs": "Version of projen to install.",
        "name": "projenVersion",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenVersion",
        ],
        "switch": "projen-version",
        "type": "string",
      },
      Object {
        "default": "- no publishing",
        "docs": "Publish Go bindings to a git repository.",
        "name": "publishToGo",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": Array [
          "publishToGo",
        ],
        "switch": "publish-to-go",
        "type": "JsiiGoTarget",
      },
      Object {
        "default": "- no publishing",
        "docs": "Publish to maven.",
        "name": "publishToMaven",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": Array [
          "publishToMaven",
        ],
        "switch": "publish-to-maven",
        "type": "JsiiJavaTarget",
      },
      Object {
        "default": "- no publishing",
        "docs": "Publish to NuGet.",
        "name": "publishToNuget",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": Array [
          "publishToNuget",
        ],
        "switch": "publish-to-nuget",
        "type": "JsiiDotNetTarget",
      },
      Object {
        "default": "- no publishing",
        "docs": "Publish to pypi.",
        "name": "publishToPypi",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": Array [
          "publishToPypi",
        ],
        "switch": "publish-to-pypi",
        "type": "JsiiPythonTarget",
      },
      Object {
        "default": "true",
        "docs": "Include a GitHub pull request template.",
        "name": "pullRequestTemplate",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "pullRequestTemplate",
        ],
        "switch": "pull-request-template",
        "type": "boolean",
      },
      Object {
        "default": "- default content",
        "docs": "The contents of the pull request template.",
        "name": "pullRequestTemplateContents",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "pullRequestTemplateContents",
        ],
        "switch": "pull-request-template-contents",
        "type": "string",
      },
      Object {
        "deprecated": true,
        "name": "python",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": Array [
          "python",
        ],
        "switch": "python",
        "type": "JsiiPythonTarget",
      },
      Object {
        "default": "- { filename: 'README.md', contents: '# replace this' }",
        "docs": "The README setup.",
        "name": "readme",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "readme",
        ],
        "switch": "readme",
        "type": "SampleReadmeProps",
      },
      Object {
        "default": "[ \\"main\\" ]",
        "docs": "Branches which trigger a release.",
        "name": "releaseBranches",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "releaseBranches",
        ],
        "switch": "release-branches",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Automatically release new versions every commit to one of branches in \`releaseBranches\`.",
        "name": "releaseEveryCommit",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "releaseEveryCommit",
        ],
        "switch": "release-every-commit",
        "type": "boolean",
      },
      Object {
        "default": "- no scheduled releases",
        "docs": "CRON schedule to trigger new releases.",
        "name": "releaseSchedule",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "releaseSchedule",
        ],
        "switch": "release-schedule",
        "type": "string",
      },
      Object {
        "default": "false",
        "docs": "Automatically release to npm when new versions are introduced.",
        "name": "releaseToNpm",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "releaseToNpm",
        ],
        "switch": "release-to-npm",
        "type": "boolean",
      },
      Object {
        "default": "- true if not a subproject",
        "docs": "Define a GitHub workflow for releasing from \\"main\\" when new versions are bumped.",
        "name": "releaseWorkflow",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "releaseWorkflow",
        ],
        "switch": "release-workflow",
        "type": "boolean",
      },
      Object {
        "docs": "A set of workflow steps to execute in order to setup the workflow container.",
        "name": "releaseWorkflowSetupSteps",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "releaseWorkflowSetupSteps",
        ],
        "switch": "release-workflow-setup-steps",
        "type": "unknown",
      },
      Object {
        "docs": "The repository is the location where the actual code for your package lives.",
        "name": "repository",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "repository",
        ],
        "switch": "repository",
        "type": "string",
      },
      Object {
        "docs": "If the package.json for your package is not in the root directory (for example if it is part of a monorepo), you can specify the directory in which it lives.",
        "name": "repositoryDirectory",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "repositoryDirectory",
        ],
        "switch": "repository-directory",
        "type": "string",
      },
      Object {
        "default": "$GIT_REMOTE",
        "docs": "Git repository URL.",
        "name": "repositoryUrl",
        "parent": "JsiiProjectOptions",
        "path": Array [
          "repositoryUrl",
        ],
        "switch": "repository-url",
        "type": "string",
      },
      Object {
        "default": "\\".\\"",
        "name": "rootdir",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": Array [
          "rootdir",
        ],
        "switch": "rootdir",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Generate one-time sample in \`src/\` and \`test/\` if there are no files there.",
        "name": "sampleCode",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "sampleCode",
        ],
        "switch": "sample-code",
        "type": "boolean",
      },
      Object {
        "default": "{}",
        "docs": "npm scripts to include.",
        "name": "scripts",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "scripts",
        ],
        "switch": "scripts",
        "type": "unknown",
      },
      Object {
        "default": "\\"src\\"",
        "docs": "Typescript sources directory.",
        "name": "srcdir",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "srcdir",
        ],
        "switch": "srcdir",
        "type": "string",
      },
      Object {
        "docs": "Package's Stability.",
        "name": "stability",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "stability",
        ],
        "switch": "stability",
        "type": "string",
      },
      Object {
        "default": "\\"test\\"",
        "docs": "Jest tests directory. Tests files should be named \`xxx.test.ts\`.",
        "name": "testdir",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "testdir",
        ],
        "switch": "testdir",
        "type": "string",
      },
      Object {
        "docs": "Custom TSConfig.",
        "name": "tsconfig",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "tsconfig",
        ],
        "switch": "tsconfig",
        "type": "TypescriptConfigOptions",
      },
      Object {
        "default": "\\"latest\\"",
        "docs": "TypeScript version to use.",
        "name": "typescriptVersion",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "typescriptVersion",
        ],
        "switch": "typescript-version",
        "type": "string",
      },
      Object {
        "default": "\\"yarn install --frozen-lockfile && yarn projen\\"",
        "docs": "Workflow steps to use in order to bootstrap this repo.",
        "name": "workflowBootstrapSteps",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "workflowBootstrapSteps",
        ],
        "switch": "workflow-bootstrap-steps",
        "type": "unknown",
      },
      Object {
        "default": "- default image",
        "docs": "Container image to use for GitHub workflows.",
        "name": "workflowContainerImage",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "workflowContainerImage",
        ],
        "switch": "workflow-container-image",
        "type": "string",
      },
      Object {
        "default": "- same as \`minNodeVersion\`",
        "docs": "The node version to use in GitHub workflows.",
        "name": "workflowNodeVersion",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "workflowNodeVersion",
        ],
        "switch": "workflow-node-version",
        "type": "string",
      },
    ],
    "pjid": "awscdk-construct",
    "typename": "AwsCdkConstructLibrary",
  },
  Object {
    "docs": "CDK8s app in TypeScript.",
    "docsurl": "https://github.com/projen/projen/blob/master/API.md#projen-cdk8stypescriptapp",
    "fqn": "projen.Cdk8sTypeScriptApp",
    "moduleName": "projen",
    "options": Array [
      Object {
        "default": "true",
        "docs": "Allow the project to include \`peerDependencies\` and \`bundledDependencies\`.",
        "name": "allowLibraryDependencies",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "allowLibraryDependencies",
        ],
        "switch": "allow-library-dependencies",
        "type": "boolean",
      },
      Object {
        "default": "true",
        "docs": "Checks that after build there are no modified files on git.",
        "name": "antitamper",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "antitamper",
        ],
        "switch": "antitamper",
        "type": "boolean",
      },
      Object {
        "default": "\\"main.ts\\"",
        "docs": "The CDK8s app's entrypoint (relative to the source directory, which is \\"src\\" by default).",
        "name": "appEntrypoint",
        "optional": true,
        "parent": "Cdk8sTypeScriptAppOptions",
        "path": Array [
          "appEntrypoint",
        ],
        "switch": "app-entrypoint",
        "type": "string",
      },
      Object {
        "default": "\\"dist\\"",
        "docs": "A directory which will contain artifacts to be published to npm.",
        "name": "artifactsDirectory",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "artifactsDirectory",
        ],
        "switch": "artifacts-directory",
        "type": "string",
      },
      Object {
        "docs": "Author's e-mail.",
        "name": "authorEmail",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "authorEmail",
        ],
        "switch": "author-email",
        "type": "string",
      },
      Object {
        "docs": "Author's name.",
        "name": "authorName",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "authorName",
        ],
        "switch": "author-name",
        "type": "string",
      },
      Object {
        "docs": "Author's Organization.",
        "name": "authorOrganization",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "authorOrganization",
        ],
        "switch": "author-organization",
        "type": "boolean",
      },
      Object {
        "docs": "Author's URL / Website.",
        "name": "authorUrl",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "authorUrl",
        ],
        "switch": "author-url",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Automatically add all executables under the \`bin\` directory to your \`package.json\` file under the \`bin\` section.",
        "name": "autoDetectBin",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "autoDetectBin",
        ],
        "switch": "auto-detect-bin",
        "type": "boolean",
      },
      Object {
        "docs": "Binary programs vended with your module.",
        "name": "bin",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "bin",
        ],
        "switch": "bin",
        "type": "unknown",
      },
      Object {
        "default": "- true if not a subproject",
        "docs": "Define a GitHub workflow for building PRs.",
        "name": "buildWorkflow",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "buildWorkflow",
        ],
        "switch": "build-workflow",
        "type": "boolean",
      },
      Object {
        "docs": "List of dependencies to bundle into this module.",
        "name": "bundledDeps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "bundledDeps",
        ],
        "switch": "bundled-deps",
        "type": "unknown",
      },
      Object {
        "default": "\\"1.0.0-beta.10\\"",
        "docs": "Minimum target version this library is tested against.",
        "name": "cdk8sVersion",
        "parent": "Cdk8sTypeScriptAppOptions",
        "path": Array [
          "cdk8sVersion",
        ],
        "switch": "cdk8s-version",
        "type": "string",
      },
      Object {
        "default": "false",
        "docs": "Use pinned version instead of caret version for CDK8s.",
        "name": "cdk8sVersionPinning",
        "optional": true,
        "parent": "Cdk8sTypeScriptAppOptions",
        "path": Array [
          "cdk8sVersionPinning",
        ],
        "switch": "cdk8s-version-pinning",
        "type": "boolean",
      },
      Object {
        "default": "true",
        "docs": "Add a \`clobber\` task which resets the repo to origin.",
        "name": "clobber",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "clobber",
        ],
        "switch": "clobber",
        "type": "boolean",
      },
      Object {
        "default": "false",
        "docs": "Define a GitHub workflow step for sending code coverage metrics to https://codecov.io/ Uses codecov/codecov-action@v1 A secret is required for private repos. Configured with @codeCovTokenSecret.",
        "name": "codeCov",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "codeCov",
        ],
        "switch": "code-cov",
        "type": "boolean",
      },
      Object {
        "default": "- if this option is not specified, only public repositories are supported",
        "docs": "Define the secret name for a specified https://codecov.io/ token A secret is required to send coverage for private repositories.",
        "name": "codeCovTokenSecret",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "codeCovTokenSecret",
        ],
        "switch": "code-cov-token-secret",
        "type": "string",
      },
      Object {
        "default": "- if \`testdir\` is under \`src/**\`, the default is \`true\`, otherwise the default is \`false.",
        "docs": "Compile the code before running tests.",
        "name": "compileBeforeTest",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "compileBeforeTest",
        ],
        "switch": "compile-before-test",
        "type": "boolean",
      },
      Object {
        "default": "- defaults to the value of authorName or \\"\\" if \`authorName\` is undefined.",
        "docs": "License copyright owner.",
        "name": "copyrightOwner",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "copyrightOwner",
        ],
        "switch": "copyright-owner",
        "type": "string",
      },
      Object {
        "default": "- current year",
        "docs": "The copyright years to put in the LICENSE file.",
        "name": "copyrightPeriod",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "copyrightPeriod",
        ],
        "switch": "copyright-period",
        "type": "string",
      },
      Object {
        "default": "\\"main\\"",
        "docs": "The name of the main release branch.",
        "name": "defaultReleaseBranch",
        "parent": "NodeProjectOptions",
        "path": Array [
          "defaultReleaseBranch",
        ],
        "switch": "default-release-branch",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Include dependabot configuration.",
        "name": "dependabot",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "dependabot",
        ],
        "switch": "dependabot",
        "type": "boolean",
      },
      Object {
        "default": "- default options",
        "docs": "Options for dependabot.",
        "name": "dependabotOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "dependabotOptions",
        ],
        "switch": "dependabot-options",
        "type": "DependabotOptions",
      },
      Object {
        "default": "[]",
        "docs": "Runtime dependencies of this module.",
        "name": "deps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "deps",
        ],
        "switch": "deps",
        "type": "unknown",
      },
      Object {
        "docs": "The description is just a string that helps people understand the purpose of the package.",
        "name": "description",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "description",
        ],
        "switch": "description",
        "type": "string",
      },
      Object {
        "default": "false",
        "docs": "Add a VSCode development environment (used for GitHub Codespaces).",
        "name": "devContainer",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "devContainer",
        ],
        "switch": "dev-container",
        "type": "boolean",
      },
      Object {
        "default": "[]",
        "docs": "Build dependencies for this module.",
        "name": "devDeps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "devDeps",
        ],
        "switch": "dev-deps",
        "type": "unknown",
      },
      Object {
        "default": "false",
        "docs": "Do not generate a \`tsconfig.json\` file (used by jsii projects since tsconfig.json is generated by the jsii compiler).",
        "name": "disableTsconfig",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "disableTsconfig",
        ],
        "switch": "disable-tsconfig",
        "type": "boolean",
      },
      Object {
        "default": "false",
        "docs": "Docgen by Typedoc.",
        "name": "docgen",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "docgen",
        ],
        "switch": "docgen",
        "type": "boolean",
      },
      Object {
        "default": "\\"docs\\"",
        "docs": "Docs directory.",
        "name": "docsDirectory",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "docsDirectory",
        ],
        "switch": "docs-directory",
        "type": "string",
      },
      Object {
        "default": "\\"lib/index.js\\"",
        "docs": "Module entrypoint (\`main\` in \`package.json\`).",
        "name": "entrypoint",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "entrypoint",
        ],
        "switch": "entrypoint",
        "type": "string",
      },
      Object {
        "default": "- .d.ts file derived from the project's entrypoint (usually lib/index.d.ts)",
        "docs": "The .d.ts file that includes the type declarations for this module.",
        "name": "entrypointTypes",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "entrypointTypes",
        ],
        "switch": "entrypoint-types",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Setup eslint.",
        "name": "eslint",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "eslint",
        ],
        "switch": "eslint",
        "type": "boolean",
      },
      Object {
        "default": "- opinionated default options",
        "docs": "Eslint options.",
        "name": "eslintOptions",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "eslintOptions",
        ],
        "switch": "eslint-options",
        "type": "EslintOptions",
      },
      Object {
        "docs": "Additional entries to .gitignore.",
        "name": "gitignore",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "gitignore",
        ],
        "switch": "gitignore",
        "type": "unknown",
      },
      Object {
        "default": "false",
        "docs": "Add a Gitpod development environment.",
        "name": "gitpod",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "gitpod",
        ],
        "switch": "gitpod",
        "type": "boolean",
      },
      Object {
        "docs": "Package's Homepage / Website.",
        "name": "homepage",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "homepage",
        ],
        "switch": "homepage",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Setup jest unit tests.",
        "name": "jest",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "jest",
        ],
        "switch": "jest",
        "type": "boolean",
      },
      Object {
        "default": "- default options",
        "docs": "Jest options.",
        "name": "jestOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "jestOptions",
        ],
        "switch": "jest-options",
        "type": "JestOptions",
      },
      Object {
        "default": "\\"latest\\"",
        "docs": "Version requirement of \`jsii-release\` which is used to publish modules to npm.",
        "name": "jsiiReleaseVersion",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "jsiiReleaseVersion",
        ],
        "switch": "jsii-release-version",
        "type": "string",
      },
      Object {
        "docs": "Keywords to include in \`package.json\`.",
        "name": "keywords",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "keywords",
        ],
        "switch": "keywords",
        "type": "unknown",
      },
      Object {
        "default": "\\"lib\\"",
        "docs": "Typescript  artifacts output directory.",
        "name": "libdir",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "libdir",
        ],
        "switch": "libdir",
        "type": "string",
      },
      Object {
        "default": "\\"Apache-2.0\\"",
        "docs": "License's SPDX identifier.",
        "name": "license",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "license",
        ],
        "switch": "license",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Indicates if a license should be added.",
        "name": "licensed",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "licensed",
        ],
        "switch": "licensed",
        "type": "boolean",
      },
      Object {
        "default": "{}",
        "docs": "Configure logging options such as verbosity.",
        "name": "logging",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "logging",
        ],
        "switch": "logging",
        "type": "LoggerOptions",
      },
      Object {
        "default": "- no max",
        "docs": "Minimum node.js version to require via \`engines\` (inclusive).",
        "name": "maxNodeVersion",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "maxNodeVersion",
        ],
        "switch": "max-node-version",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Whether mergify should be enabled on this repository or not.",
        "name": "mergify",
        "optional": true,
        "parent": "GitHubOptions",
        "path": Array [
          "mergify",
        ],
        "switch": "mergify",
        "type": "boolean",
      },
      Object {
        "default": "\\"auto-merge\\"",
        "docs": "Automatically merge PRs that build successfully and have this label.",
        "name": "mergifyAutoMergeLabel",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "mergifyAutoMergeLabel",
        ],
        "switch": "mergify-auto-merge-label",
        "type": "string",
      },
      Object {
        "default": "- default options",
        "docs": "Options for mergify.",
        "name": "mergifyOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "mergifyOptions",
        ],
        "switch": "mergify-options",
        "type": "MergifyOptions",
      },
      Object {
        "default": "- no \\"engines\\" specified",
        "docs": "Minimum Node.js version to require via package.json \`engines\` (inclusive).",
        "name": "minNodeVersion",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "minNodeVersion",
        ],
        "switch": "min-node-version",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Automatically update files modified during builds to pull-request branches.",
        "name": "mutableBuild",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "mutableBuild",
        ],
        "switch": "mutable-build",
        "type": "boolean",
      },
      Object {
        "default": "$BASEDIR",
        "docs": "This is the name of your project.",
        "name": "name",
        "parent": "ProjectOptions",
        "path": Array [
          "name",
        ],
        "switch": "name",
        "type": "string",
      },
      Object {
        "default": "- for scoped packages (e.g. \`foo@bar\`), the default is
\`NpmAccess.RESTRICTED\`, for non-scoped packages, the default is
\`NpmAccess.PUBLIC\`.",
        "docs": "Access level of the npm package.",
        "name": "npmAccess",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "npmAccess",
        ],
        "switch": "npm-access",
        "type": "NpmAccess",
      },
      Object {
        "default": "\\"latest\\"",
        "docs": "Tags can be used to provide an alias instead of version numbers.",
        "name": "npmDistTag",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "npmDistTag",
        ],
        "switch": "npm-dist-tag",
        "type": "string",
      },
      Object {
        "docs": "Additional entries to .npmignore.",
        "name": "npmignore",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "npmignore",
        ],
        "switch": "npmignore",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Defines an .npmignore file. Normally this is only needed for libraries that are packaged as tarballs.",
        "name": "npmignoreEnabled",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "npmignoreEnabled",
        ],
        "switch": "npmignore-enabled",
        "type": "boolean",
      },
      Object {
        "deprecated": true,
        "docs": "The host name of the npm registry to publish to.",
        "name": "npmRegistry",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "npmRegistry",
        ],
        "switch": "npm-registry",
        "type": "string",
      },
      Object {
        "default": "\\"https://registry.npmjs.org\\"",
        "docs": "The base URL of the npm package registry.",
        "name": "npmRegistryUrl",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "npmRegistryUrl",
        ],
        "switch": "npm-registry-url",
        "type": "string",
      },
      Object {
        "default": "NpmTaskExecution.PROJEN",
        "docs": "Determines how tasks are executed when invoked as npm scripts (yarn/npm run xyz).",
        "name": "npmTaskExecution",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "npmTaskExecution",
        ],
        "switch": "npm-task-execution",
        "type": "NpmTaskExecution",
      },
      Object {
        "default": "\\"NPM_TOKEN\\"",
        "docs": "GitHub secret which contains the NPM token to use when publishing packages.",
        "name": "npmTokenSecret",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "npmTokenSecret",
        ],
        "switch": "npm-token-secret",
        "type": "string",
      },
      Object {
        "default": "\\".\\"",
        "docs": "The root directory of the project.",
        "name": "outdir",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "outdir",
        ],
        "switch": "outdir",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Defines a \`yarn package\` command that will produce a tarball and place it under \`dist/js\`.",
        "name": "package",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "package",
        ],
        "switch": "package",
        "type": "boolean",
      },
      Object {
        "default": "NodePackageManager.YARN",
        "docs": "The Node Package Manager used to execute scripts.",
        "name": "packageManager",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "packageManager",
        ],
        "switch": "package-manager",
        "type": "NodePackageManager",
      },
      Object {
        "default": "- defaults to project name",
        "docs": "The \\"name\\" in package.json.",
        "name": "packageName",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "packageName",
        ],
        "switch": "package-name",
        "type": "string",
      },
      Object {
        "docs": "The parent project, if this project is part of a bigger project.",
        "name": "parent",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "parent",
        ],
        "switch": "parent",
        "type": "Project",
      },
      Object {
        "docs": "Options for \`peerDeps\`.",
        "name": "peerDependencyOptions",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "peerDependencyOptions",
        ],
        "switch": "peer-dependency-options",
        "type": "PeerDependencyOptions",
      },
      Object {
        "default": "[]",
        "docs": "Peer dependencies for this module.",
        "name": "peerDeps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "peerDeps",
        ],
        "switch": "peer-deps",
        "type": "unknown",
      },
      Object {
        "default": "ProjectType.UNKNOWN",
        "docs": "Which type of project this is (library/app).",
        "name": "projectType",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "projectType",
        ],
        "switch": "project-type",
        "type": "ProjectType",
      },
      Object {
        "default": "\\"npx projen\\"",
        "docs": "The shell command to use in order to run the projen CLI.",
        "name": "projenCommand",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "projenCommand",
        ],
        "switch": "projen-command",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Indicates of \\"projen\\" should be installed as a devDependency.",
        "name": "projenDevDependency",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenDevDependency",
        ],
        "switch": "projen-dev-dependency",
        "type": "boolean",
      },
      Object {
        "default": "true",
        "docs": "Execute \`projen\` as the first step of the \`build\` task to synthesize project files.",
        "name": "projenDuringBuild",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenDuringBuild",
        ],
        "switch": "projen-during-build",
        "type": "boolean",
      },
      Object {
        "default": "true",
        "docs": "Generate (once) .projenrc.js (in JavaScript). Set to \`false\` in order to disable .projenrc.js generation.",
        "name": "projenrcJs",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenrcJs",
        ],
        "switch": "projenrc-js",
        "type": "boolean",
      },
      Object {
        "default": "- default options",
        "docs": "Options for .projenrc.js.",
        "name": "projenrcJsOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenrcJsOptions",
        ],
        "switch": "projenrc-js-options",
        "type": "ProjenrcOptions",
      },
      Object {
        "default": "false",
        "docs": "Use TypeScript for your projenrc file (\`.projenrc.ts\`).",
        "name": "projenrcTs",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "projenrcTs",
        ],
        "switch": "projenrc-ts",
        "type": "boolean",
      },
      Object {
        "docs": "Options for .projenrc.ts.",
        "name": "projenrcTsOptions",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "projenrcTsOptions",
        ],
        "switch": "projenrc-ts-options",
        "type": "ProjenrcOptions",
      },
      Object {
        "default": "- \\"true\\" if mergify auto-merge is enabled (default)",
        "docs": "Automatically merge projen upgrade PRs when build passes.",
        "name": "projenUpgradeAutoMerge",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenUpgradeAutoMerge",
        ],
        "switch": "projen-upgrade-auto-merge",
        "type": "boolean",
      },
      Object {
        "default": "[ \\"0 6 * * *\\" ]",
        "docs": "Customize the projenUpgrade schedule in cron expression.",
        "name": "projenUpgradeSchedule",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenUpgradeSchedule",
        ],
        "switch": "projen-upgrade-schedule",
        "type": "unknown",
      },
      Object {
        "default": "- no automatic projen upgrade pull requests",
        "docs": "Periodically submits a pull request for projen upgrades (executes \`yarn projen:upgrade\`).",
        "name": "projenUpgradeSecret",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenUpgradeSecret",
        ],
        "switch": "projen-upgrade-secret",
        "type": "string",
      },
      Object {
        "default": "- Defaults to the latest version.",
        "docs": "Version of projen to install.",
        "name": "projenVersion",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenVersion",
        ],
        "switch": "projen-version",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Include a GitHub pull request template.",
        "name": "pullRequestTemplate",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "pullRequestTemplate",
        ],
        "switch": "pull-request-template",
        "type": "boolean",
      },
      Object {
        "default": "- default content",
        "docs": "The contents of the pull request template.",
        "name": "pullRequestTemplateContents",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "pullRequestTemplateContents",
        ],
        "switch": "pull-request-template-contents",
        "type": "string",
      },
      Object {
        "default": "- { filename: 'README.md', contents: '# replace this' }",
        "docs": "The README setup.",
        "name": "readme",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "readme",
        ],
        "switch": "readme",
        "type": "SampleReadmeProps",
      },
      Object {
        "default": "[ \\"main\\" ]",
        "docs": "Branches which trigger a release.",
        "name": "releaseBranches",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "releaseBranches",
        ],
        "switch": "release-branches",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Automatically release new versions every commit to one of branches in \`releaseBranches\`.",
        "name": "releaseEveryCommit",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "releaseEveryCommit",
        ],
        "switch": "release-every-commit",
        "type": "boolean",
      },
      Object {
        "default": "- no scheduled releases",
        "docs": "CRON schedule to trigger new releases.",
        "name": "releaseSchedule",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "releaseSchedule",
        ],
        "switch": "release-schedule",
        "type": "string",
      },
      Object {
        "default": "false",
        "docs": "Automatically release to npm when new versions are introduced.",
        "name": "releaseToNpm",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "releaseToNpm",
        ],
        "switch": "release-to-npm",
        "type": "boolean",
      },
      Object {
        "default": "- true if not a subproject",
        "docs": "Define a GitHub workflow for releasing from \\"main\\" when new versions are bumped.",
        "name": "releaseWorkflow",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "releaseWorkflow",
        ],
        "switch": "release-workflow",
        "type": "boolean",
      },
      Object {
        "docs": "A set of workflow steps to execute in order to setup the workflow container.",
        "name": "releaseWorkflowSetupSteps",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "releaseWorkflowSetupSteps",
        ],
        "switch": "release-workflow-setup-steps",
        "type": "unknown",
      },
      Object {
        "docs": "The repository is the location where the actual code for your package lives.",
        "name": "repository",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "repository",
        ],
        "switch": "repository",
        "type": "string",
      },
      Object {
        "docs": "If the package.json for your package is not in the root directory (for example if it is part of a monorepo), you can specify the directory in which it lives.",
        "name": "repositoryDirectory",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "repositoryDirectory",
        ],
        "switch": "repository-directory",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Generate one-time sample in \`src/\` and \`test/\` if there are no files there.",
        "name": "sampleCode",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "sampleCode",
        ],
        "switch": "sample-code",
        "type": "boolean",
      },
      Object {
        "default": "{}",
        "docs": "npm scripts to include.",
        "name": "scripts",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "scripts",
        ],
        "switch": "scripts",
        "type": "unknown",
      },
      Object {
        "default": "\\"src\\"",
        "docs": "Typescript sources directory.",
        "name": "srcdir",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "srcdir",
        ],
        "switch": "srcdir",
        "type": "string",
      },
      Object {
        "docs": "Package's Stability.",
        "name": "stability",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "stability",
        ],
        "switch": "stability",
        "type": "string",
      },
      Object {
        "default": "\\"test\\"",
        "docs": "Jest tests directory. Tests files should be named \`xxx.test.ts\`.",
        "name": "testdir",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "testdir",
        ],
        "switch": "testdir",
        "type": "string",
      },
      Object {
        "docs": "Custom TSConfig.",
        "name": "tsconfig",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "tsconfig",
        ],
        "switch": "tsconfig",
        "type": "TypescriptConfigOptions",
      },
      Object {
        "default": "\\"latest\\"",
        "docs": "TypeScript version to use.",
        "name": "typescriptVersion",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "typescriptVersion",
        ],
        "switch": "typescript-version",
        "type": "string",
      },
      Object {
        "default": "\\"yarn install --frozen-lockfile && yarn projen\\"",
        "docs": "Workflow steps to use in order to bootstrap this repo.",
        "name": "workflowBootstrapSteps",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "workflowBootstrapSteps",
        ],
        "switch": "workflow-bootstrap-steps",
        "type": "unknown",
      },
      Object {
        "default": "- default image",
        "docs": "Container image to use for GitHub workflows.",
        "name": "workflowContainerImage",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "workflowContainerImage",
        ],
        "switch": "workflow-container-image",
        "type": "string",
      },
      Object {
        "default": "- same as \`minNodeVersion\`",
        "docs": "The node version to use in GitHub workflows.",
        "name": "workflowNodeVersion",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "workflowNodeVersion",
        ],
        "switch": "workflow-node-version",
        "type": "string",
      },
    ],
    "pjid": "cdk8s-app-ts",
    "typename": "Cdk8sTypeScriptApp",
  },
  Object {
    "docs": "CDK8s construct library project.",
    "docsurl": "https://github.com/projen/projen/blob/master/API.md#projen-constructlibrarycdk8s",
    "fqn": "projen.ConstructLibraryCdk8s",
    "moduleName": "projen",
    "options": Array [
      Object {
        "default": "true",
        "docs": "Allow the project to include \`peerDependencies\` and \`bundledDependencies\`.",
        "name": "allowLibraryDependencies",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "allowLibraryDependencies",
        ],
        "switch": "allow-library-dependencies",
        "type": "boolean",
      },
      Object {
        "default": "true",
        "docs": "Checks that after build there are no modified files on git.",
        "name": "antitamper",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "antitamper",
        ],
        "switch": "antitamper",
        "type": "boolean",
      },
      Object {
        "default": "\\"dist\\"",
        "docs": "A directory which will contain artifacts to be published to npm.",
        "name": "artifactsDirectory",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "artifactsDirectory",
        ],
        "switch": "artifacts-directory",
        "type": "string",
      },
      Object {
        "default": "$GIT_USER_NAME",
        "docs": "The name of the library author.",
        "name": "author",
        "parent": "JsiiProjectOptions",
        "path": Array [
          "author",
        ],
        "switch": "author",
        "type": "string",
      },
      Object {
        "default": "$GIT_USER_EMAIL",
        "docs": "Email or URL of the library author.",
        "name": "authorAddress",
        "parent": "JsiiProjectOptions",
        "path": Array [
          "authorAddress",
        ],
        "switch": "author-address",
        "type": "string",
      },
      Object {
        "docs": "Author's e-mail.",
        "name": "authorEmail",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "authorEmail",
        ],
        "switch": "author-email",
        "type": "string",
      },
      Object {
        "docs": "Author's name.",
        "name": "authorName",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "authorName",
        ],
        "switch": "author-name",
        "type": "string",
      },
      Object {
        "docs": "Author's Organization.",
        "name": "authorOrganization",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "authorOrganization",
        ],
        "switch": "author-organization",
        "type": "boolean",
      },
      Object {
        "docs": "Author's URL / Website.",
        "name": "authorUrl",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "authorUrl",
        ],
        "switch": "author-url",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Automatically add all executables under the \`bin\` directory to your \`package.json\` file under the \`bin\` section.",
        "name": "autoDetectBin",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "autoDetectBin",
        ],
        "switch": "auto-detect-bin",
        "type": "boolean",
      },
      Object {
        "docs": "Binary programs vended with your module.",
        "name": "bin",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "bin",
        ],
        "switch": "bin",
        "type": "unknown",
      },
      Object {
        "default": "- true if not a subproject",
        "docs": "Define a GitHub workflow for building PRs.",
        "name": "buildWorkflow",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "buildWorkflow",
        ],
        "switch": "build-workflow",
        "type": "boolean",
      },
      Object {
        "docs": "List of dependencies to bundle into this module.",
        "name": "bundledDeps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "bundledDeps",
        ],
        "switch": "bundled-deps",
        "type": "unknown",
      },
      Object {
        "default": "- new version will be announced",
        "docs": "Libraries will be picked up by the construct catalog when they are published to npm as jsii modules and will be published under:.",
        "name": "catalog",
        "optional": true,
        "parent": "ConstructLibraryOptions",
        "path": Array [
          "catalog",
        ],
        "switch": "catalog",
        "type": "Catalog",
      },
      Object {
        "default": "\\"1.0.0-beta.10\\"",
        "docs": "Minimum target version this library is tested against.",
        "name": "cdk8sVersion",
        "parent": "ConstructLibraryCdk8sOptions",
        "path": Array [
          "cdk8sVersion",
        ],
        "switch": "cdk8s-version",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Add a \`clobber\` task which resets the repo to origin.",
        "name": "clobber",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "clobber",
        ],
        "switch": "clobber",
        "type": "boolean",
      },
      Object {
        "default": "false",
        "docs": "Define a GitHub workflow step for sending code coverage metrics to https://codecov.io/ Uses codecov/codecov-action@v1 A secret is required for private repos. Configured with @codeCovTokenSecret.",
        "name": "codeCov",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "codeCov",
        ],
        "switch": "code-cov",
        "type": "boolean",
      },
      Object {
        "default": "- if this option is not specified, only public repositories are supported",
        "docs": "Define the secret name for a specified https://codecov.io/ token A secret is required to send coverage for private repositories.",
        "name": "codeCovTokenSecret",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "codeCovTokenSecret",
        ],
        "switch": "code-cov-token-secret",
        "type": "string",
      },
      Object {
        "default": "false",
        "docs": "Automatically run API compatibility test against the latest version published to npm after compilation.",
        "name": "compat",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": Array [
          "compat",
        ],
        "switch": "compat",
        "type": "boolean",
      },
      Object {
        "default": "\\".compatignore\\"",
        "docs": "Name of the ignore file for API compatibility tests.",
        "name": "compatIgnore",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": Array [
          "compatIgnore",
        ],
        "switch": "compat-ignore",
        "type": "string",
      },
      Object {
        "default": "- if \`testdir\` is under \`src/**\`, the default is \`true\`, otherwise the default is \`false.",
        "docs": "Compile the code before running tests.",
        "name": "compileBeforeTest",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "compileBeforeTest",
        ],
        "switch": "compile-before-test",
        "type": "boolean",
      },
      Object {
        "default": "- defaults to the value of authorName or \\"\\" if \`authorName\` is undefined.",
        "docs": "License copyright owner.",
        "name": "copyrightOwner",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "copyrightOwner",
        ],
        "switch": "copyright-owner",
        "type": "string",
      },
      Object {
        "default": "- current year",
        "docs": "The copyright years to put in the LICENSE file.",
        "name": "copyrightPeriod",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "copyrightPeriod",
        ],
        "switch": "copyright-period",
        "type": "string",
      },
      Object {
        "default": "\\"main\\"",
        "docs": "The name of the main release branch.",
        "name": "defaultReleaseBranch",
        "parent": "NodeProjectOptions",
        "path": Array [
          "defaultReleaseBranch",
        ],
        "switch": "default-release-branch",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Include dependabot configuration.",
        "name": "dependabot",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "dependabot",
        ],
        "switch": "dependabot",
        "type": "boolean",
      },
      Object {
        "default": "- default options",
        "docs": "Options for dependabot.",
        "name": "dependabotOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "dependabotOptions",
        ],
        "switch": "dependabot-options",
        "type": "DependabotOptions",
      },
      Object {
        "default": "[]",
        "docs": "Runtime dependencies of this module.",
        "name": "deps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "deps",
        ],
        "switch": "deps",
        "type": "unknown",
      },
      Object {
        "docs": "The description is just a string that helps people understand the purpose of the package.",
        "name": "description",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "description",
        ],
        "switch": "description",
        "type": "string",
      },
      Object {
        "default": "false",
        "docs": "Add a VSCode development environment (used for GitHub Codespaces).",
        "name": "devContainer",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "devContainer",
        ],
        "switch": "dev-container",
        "type": "boolean",
      },
      Object {
        "default": "[]",
        "docs": "Build dependencies for this module.",
        "name": "devDeps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "devDeps",
        ],
        "switch": "dev-deps",
        "type": "unknown",
      },
      Object {
        "default": "false",
        "docs": "Do not generate a \`tsconfig.json\` file (used by jsii projects since tsconfig.json is generated by the jsii compiler).",
        "name": "disableTsconfig",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "disableTsconfig",
        ],
        "switch": "disable-tsconfig",
        "type": "boolean",
      },
      Object {
        "default": "false",
        "docs": "Docgen by Typedoc.",
        "name": "docgen",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "docgen",
        ],
        "switch": "docgen",
        "type": "boolean",
      },
      Object {
        "default": "\\"docs\\"",
        "docs": "Docs directory.",
        "name": "docsDirectory",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "docsDirectory",
        ],
        "switch": "docs-directory",
        "type": "string",
      },
      Object {
        "deprecated": true,
        "name": "dotnet",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": Array [
          "dotnet",
        ],
        "switch": "dotnet",
        "type": "JsiiDotNetTarget",
      },
      Object {
        "default": "\\"lib/index.js\\"",
        "docs": "Module entrypoint (\`main\` in \`package.json\`).",
        "name": "entrypoint",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "entrypoint",
        ],
        "switch": "entrypoint",
        "type": "string",
      },
      Object {
        "default": "- .d.ts file derived from the project's entrypoint (usually lib/index.d.ts)",
        "docs": "The .d.ts file that includes the type declarations for this module.",
        "name": "entrypointTypes",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "entrypointTypes",
        ],
        "switch": "entrypoint-types",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Setup eslint.",
        "name": "eslint",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "eslint",
        ],
        "switch": "eslint",
        "type": "boolean",
      },
      Object {
        "default": "- opinionated default options",
        "docs": "Eslint options.",
        "name": "eslintOptions",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "eslintOptions",
        ],
        "switch": "eslint-options",
        "type": "EslintOptions",
      },
      Object {
        "docs": "Accepts a list of glob patterns.",
        "name": "excludeTypescript",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": Array [
          "excludeTypescript",
        ],
        "switch": "exclude-typescript",
        "type": "unknown",
      },
      Object {
        "docs": "Additional entries to .gitignore.",
        "name": "gitignore",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "gitignore",
        ],
        "switch": "gitignore",
        "type": "unknown",
      },
      Object {
        "default": "false",
        "docs": "Add a Gitpod development environment.",
        "name": "gitpod",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "gitpod",
        ],
        "switch": "gitpod",
        "type": "boolean",
      },
      Object {
        "docs": "Package's Homepage / Website.",
        "name": "homepage",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "homepage",
        ],
        "switch": "homepage",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Setup jest unit tests.",
        "name": "jest",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "jest",
        ],
        "switch": "jest",
        "type": "boolean",
      },
      Object {
        "default": "- default options",
        "docs": "Jest options.",
        "name": "jestOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "jestOptions",
        ],
        "switch": "jest-options",
        "type": "JestOptions",
      },
      Object {
        "default": "\\"latest\\"",
        "docs": "Version requirement of \`jsii-release\` which is used to publish modules to npm.",
        "name": "jsiiReleaseVersion",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "jsiiReleaseVersion",
        ],
        "switch": "jsii-release-version",
        "type": "string",
      },
      Object {
        "docs": "Keywords to include in \`package.json\`.",
        "name": "keywords",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "keywords",
        ],
        "switch": "keywords",
        "type": "unknown",
      },
      Object {
        "default": "\\"lib\\"",
        "docs": "Typescript  artifacts output directory.",
        "name": "libdir",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "libdir",
        ],
        "switch": "libdir",
        "type": "string",
      },
      Object {
        "default": "\\"Apache-2.0\\"",
        "docs": "License's SPDX identifier.",
        "name": "license",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "license",
        ],
        "switch": "license",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Indicates if a license should be added.",
        "name": "licensed",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "licensed",
        ],
        "switch": "licensed",
        "type": "boolean",
      },
      Object {
        "default": "{}",
        "docs": "Configure logging options such as verbosity.",
        "name": "logging",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "logging",
        ],
        "switch": "logging",
        "type": "LoggerOptions",
      },
      Object {
        "default": "- no max",
        "docs": "Minimum node.js version to require via \`engines\` (inclusive).",
        "name": "maxNodeVersion",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "maxNodeVersion",
        ],
        "switch": "max-node-version",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Whether mergify should be enabled on this repository or not.",
        "name": "mergify",
        "optional": true,
        "parent": "GitHubOptions",
        "path": Array [
          "mergify",
        ],
        "switch": "mergify",
        "type": "boolean",
      },
      Object {
        "default": "\\"auto-merge\\"",
        "docs": "Automatically merge PRs that build successfully and have this label.",
        "name": "mergifyAutoMergeLabel",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "mergifyAutoMergeLabel",
        ],
        "switch": "mergify-auto-merge-label",
        "type": "string",
      },
      Object {
        "default": "- default options",
        "docs": "Options for mergify.",
        "name": "mergifyOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "mergifyOptions",
        ],
        "switch": "mergify-options",
        "type": "MergifyOptions",
      },
      Object {
        "default": "- no \\"engines\\" specified",
        "docs": "Minimum Node.js version to require via package.json \`engines\` (inclusive).",
        "name": "minNodeVersion",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "minNodeVersion",
        ],
        "switch": "min-node-version",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Automatically update files modified during builds to pull-request branches.",
        "name": "mutableBuild",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "mutableBuild",
        ],
        "switch": "mutable-build",
        "type": "boolean",
      },
      Object {
        "default": "$BASEDIR",
        "docs": "This is the name of your project.",
        "name": "name",
        "parent": "ProjectOptions",
        "path": Array [
          "name",
        ],
        "switch": "name",
        "type": "string",
      },
      Object {
        "default": "- for scoped packages (e.g. \`foo@bar\`), the default is
\`NpmAccess.RESTRICTED\`, for non-scoped packages, the default is
\`NpmAccess.PUBLIC\`.",
        "docs": "Access level of the npm package.",
        "name": "npmAccess",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "npmAccess",
        ],
        "switch": "npm-access",
        "type": "NpmAccess",
      },
      Object {
        "default": "\\"latest\\"",
        "docs": "Tags can be used to provide an alias instead of version numbers.",
        "name": "npmDistTag",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "npmDistTag",
        ],
        "switch": "npm-dist-tag",
        "type": "string",
      },
      Object {
        "docs": "Additional entries to .npmignore.",
        "name": "npmignore",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "npmignore",
        ],
        "switch": "npmignore",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Defines an .npmignore file. Normally this is only needed for libraries that are packaged as tarballs.",
        "name": "npmignoreEnabled",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "npmignoreEnabled",
        ],
        "switch": "npmignore-enabled",
        "type": "boolean",
      },
      Object {
        "deprecated": true,
        "docs": "The host name of the npm registry to publish to.",
        "name": "npmRegistry",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "npmRegistry",
        ],
        "switch": "npm-registry",
        "type": "string",
      },
      Object {
        "default": "\\"https://registry.npmjs.org\\"",
        "docs": "The base URL of the npm package registry.",
        "name": "npmRegistryUrl",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "npmRegistryUrl",
        ],
        "switch": "npm-registry-url",
        "type": "string",
      },
      Object {
        "default": "NpmTaskExecution.PROJEN",
        "docs": "Determines how tasks are executed when invoked as npm scripts (yarn/npm run xyz).",
        "name": "npmTaskExecution",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "npmTaskExecution",
        ],
        "switch": "npm-task-execution",
        "type": "NpmTaskExecution",
      },
      Object {
        "default": "\\"NPM_TOKEN\\"",
        "docs": "GitHub secret which contains the NPM token to use when publishing packages.",
        "name": "npmTokenSecret",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "npmTokenSecret",
        ],
        "switch": "npm-token-secret",
        "type": "string",
      },
      Object {
        "default": "\\".\\"",
        "docs": "The root directory of the project.",
        "name": "outdir",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "outdir",
        ],
        "switch": "outdir",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Defines a \`yarn package\` command that will produce a tarball and place it under \`dist/js\`.",
        "name": "package",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "package",
        ],
        "switch": "package",
        "type": "boolean",
      },
      Object {
        "default": "NodePackageManager.YARN",
        "docs": "The Node Package Manager used to execute scripts.",
        "name": "packageManager",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "packageManager",
        ],
        "switch": "package-manager",
        "type": "NodePackageManager",
      },
      Object {
        "default": "- defaults to project name",
        "docs": "The \\"name\\" in package.json.",
        "name": "packageName",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "packageName",
        ],
        "switch": "package-name",
        "type": "string",
      },
      Object {
        "docs": "The parent project, if this project is part of a bigger project.",
        "name": "parent",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "parent",
        ],
        "switch": "parent",
        "type": "Project",
      },
      Object {
        "docs": "Options for \`peerDeps\`.",
        "name": "peerDependencyOptions",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "peerDependencyOptions",
        ],
        "switch": "peer-dependency-options",
        "type": "PeerDependencyOptions",
      },
      Object {
        "default": "[]",
        "docs": "Peer dependencies for this module.",
        "name": "peerDeps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "peerDeps",
        ],
        "switch": "peer-deps",
        "type": "unknown",
      },
      Object {
        "default": "ProjectType.UNKNOWN",
        "docs": "Which type of project this is (library/app).",
        "name": "projectType",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "projectType",
        ],
        "switch": "project-type",
        "type": "ProjectType",
      },
      Object {
        "default": "\\"npx projen\\"",
        "docs": "The shell command to use in order to run the projen CLI.",
        "name": "projenCommand",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "projenCommand",
        ],
        "switch": "projen-command",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Indicates of \\"projen\\" should be installed as a devDependency.",
        "name": "projenDevDependency",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenDevDependency",
        ],
        "switch": "projen-dev-dependency",
        "type": "boolean",
      },
      Object {
        "default": "true",
        "docs": "Execute \`projen\` as the first step of the \`build\` task to synthesize project files.",
        "name": "projenDuringBuild",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenDuringBuild",
        ],
        "switch": "projen-during-build",
        "type": "boolean",
      },
      Object {
        "default": "true",
        "docs": "Generate (once) .projenrc.js (in JavaScript). Set to \`false\` in order to disable .projenrc.js generation.",
        "name": "projenrcJs",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenrcJs",
        ],
        "switch": "projenrc-js",
        "type": "boolean",
      },
      Object {
        "default": "- default options",
        "docs": "Options for .projenrc.js.",
        "name": "projenrcJsOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenrcJsOptions",
        ],
        "switch": "projenrc-js-options",
        "type": "ProjenrcOptions",
      },
      Object {
        "default": "false",
        "docs": "Use TypeScript for your projenrc file (\`.projenrc.ts\`).",
        "name": "projenrcTs",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "projenrcTs",
        ],
        "switch": "projenrc-ts",
        "type": "boolean",
      },
      Object {
        "docs": "Options for .projenrc.ts.",
        "name": "projenrcTsOptions",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "projenrcTsOptions",
        ],
        "switch": "projenrc-ts-options",
        "type": "ProjenrcOptions",
      },
      Object {
        "default": "- \\"true\\" if mergify auto-merge is enabled (default)",
        "docs": "Automatically merge projen upgrade PRs when build passes.",
        "name": "projenUpgradeAutoMerge",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenUpgradeAutoMerge",
        ],
        "switch": "projen-upgrade-auto-merge",
        "type": "boolean",
      },
      Object {
        "default": "[ \\"0 6 * * *\\" ]",
        "docs": "Customize the projenUpgrade schedule in cron expression.",
        "name": "projenUpgradeSchedule",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenUpgradeSchedule",
        ],
        "switch": "projen-upgrade-schedule",
        "type": "unknown",
      },
      Object {
        "default": "- no automatic projen upgrade pull requests",
        "docs": "Periodically submits a pull request for projen upgrades (executes \`yarn projen:upgrade\`).",
        "name": "projenUpgradeSecret",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenUpgradeSecret",
        ],
        "switch": "projen-upgrade-secret",
        "type": "string",
      },
      Object {
        "default": "- Defaults to the latest version.",
        "docs": "Version of projen to install.",
        "name": "projenVersion",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenVersion",
        ],
        "switch": "projen-version",
        "type": "string",
      },
      Object {
        "default": "- no publishing",
        "docs": "Publish Go bindings to a git repository.",
        "name": "publishToGo",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": Array [
          "publishToGo",
        ],
        "switch": "publish-to-go",
        "type": "JsiiGoTarget",
      },
      Object {
        "default": "- no publishing",
        "docs": "Publish to maven.",
        "name": "publishToMaven",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": Array [
          "publishToMaven",
        ],
        "switch": "publish-to-maven",
        "type": "JsiiJavaTarget",
      },
      Object {
        "default": "- no publishing",
        "docs": "Publish to NuGet.",
        "name": "publishToNuget",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": Array [
          "publishToNuget",
        ],
        "switch": "publish-to-nuget",
        "type": "JsiiDotNetTarget",
      },
      Object {
        "default": "- no publishing",
        "docs": "Publish to pypi.",
        "name": "publishToPypi",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": Array [
          "publishToPypi",
        ],
        "switch": "publish-to-pypi",
        "type": "JsiiPythonTarget",
      },
      Object {
        "default": "true",
        "docs": "Include a GitHub pull request template.",
        "name": "pullRequestTemplate",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "pullRequestTemplate",
        ],
        "switch": "pull-request-template",
        "type": "boolean",
      },
      Object {
        "default": "- default content",
        "docs": "The contents of the pull request template.",
        "name": "pullRequestTemplateContents",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "pullRequestTemplateContents",
        ],
        "switch": "pull-request-template-contents",
        "type": "string",
      },
      Object {
        "deprecated": true,
        "name": "python",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": Array [
          "python",
        ],
        "switch": "python",
        "type": "JsiiPythonTarget",
      },
      Object {
        "default": "- { filename: 'README.md', contents: '# replace this' }",
        "docs": "The README setup.",
        "name": "readme",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "readme",
        ],
        "switch": "readme",
        "type": "SampleReadmeProps",
      },
      Object {
        "default": "[ \\"main\\" ]",
        "docs": "Branches which trigger a release.",
        "name": "releaseBranches",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "releaseBranches",
        ],
        "switch": "release-branches",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Automatically release new versions every commit to one of branches in \`releaseBranches\`.",
        "name": "releaseEveryCommit",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "releaseEveryCommit",
        ],
        "switch": "release-every-commit",
        "type": "boolean",
      },
      Object {
        "default": "- no scheduled releases",
        "docs": "CRON schedule to trigger new releases.",
        "name": "releaseSchedule",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "releaseSchedule",
        ],
        "switch": "release-schedule",
        "type": "string",
      },
      Object {
        "default": "false",
        "docs": "Automatically release to npm when new versions are introduced.",
        "name": "releaseToNpm",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "releaseToNpm",
        ],
        "switch": "release-to-npm",
        "type": "boolean",
      },
      Object {
        "default": "- true if not a subproject",
        "docs": "Define a GitHub workflow for releasing from \\"main\\" when new versions are bumped.",
        "name": "releaseWorkflow",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "releaseWorkflow",
        ],
        "switch": "release-workflow",
        "type": "boolean",
      },
      Object {
        "docs": "A set of workflow steps to execute in order to setup the workflow container.",
        "name": "releaseWorkflowSetupSteps",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "releaseWorkflowSetupSteps",
        ],
        "switch": "release-workflow-setup-steps",
        "type": "unknown",
      },
      Object {
        "docs": "The repository is the location where the actual code for your package lives.",
        "name": "repository",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "repository",
        ],
        "switch": "repository",
        "type": "string",
      },
      Object {
        "docs": "If the package.json for your package is not in the root directory (for example if it is part of a monorepo), you can specify the directory in which it lives.",
        "name": "repositoryDirectory",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "repositoryDirectory",
        ],
        "switch": "repository-directory",
        "type": "string",
      },
      Object {
        "default": "$GIT_REMOTE",
        "docs": "Git repository URL.",
        "name": "repositoryUrl",
        "parent": "JsiiProjectOptions",
        "path": Array [
          "repositoryUrl",
        ],
        "switch": "repository-url",
        "type": "string",
      },
      Object {
        "default": "\\".\\"",
        "name": "rootdir",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": Array [
          "rootdir",
        ],
        "switch": "rootdir",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Generate one-time sample in \`src/\` and \`test/\` if there are no files there.",
        "name": "sampleCode",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "sampleCode",
        ],
        "switch": "sample-code",
        "type": "boolean",
      },
      Object {
        "default": "{}",
        "docs": "npm scripts to include.",
        "name": "scripts",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "scripts",
        ],
        "switch": "scripts",
        "type": "unknown",
      },
      Object {
        "default": "\\"src\\"",
        "docs": "Typescript sources directory.",
        "name": "srcdir",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "srcdir",
        ],
        "switch": "srcdir",
        "type": "string",
      },
      Object {
        "docs": "Package's Stability.",
        "name": "stability",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "stability",
        ],
        "switch": "stability",
        "type": "string",
      },
      Object {
        "default": "\\"test\\"",
        "docs": "Jest tests directory. Tests files should be named \`xxx.test.ts\`.",
        "name": "testdir",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "testdir",
        ],
        "switch": "testdir",
        "type": "string",
      },
      Object {
        "docs": "Custom TSConfig.",
        "name": "tsconfig",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "tsconfig",
        ],
        "switch": "tsconfig",
        "type": "TypescriptConfigOptions",
      },
      Object {
        "default": "\\"latest\\"",
        "docs": "TypeScript version to use.",
        "name": "typescriptVersion",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "typescriptVersion",
        ],
        "switch": "typescript-version",
        "type": "string",
      },
      Object {
        "default": "\\"yarn install --frozen-lockfile && yarn projen\\"",
        "docs": "Workflow steps to use in order to bootstrap this repo.",
        "name": "workflowBootstrapSteps",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "workflowBootstrapSteps",
        ],
        "switch": "workflow-bootstrap-steps",
        "type": "unknown",
      },
      Object {
        "default": "- default image",
        "docs": "Container image to use for GitHub workflows.",
        "name": "workflowContainerImage",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "workflowContainerImage",
        ],
        "switch": "workflow-container-image",
        "type": "string",
      },
      Object {
        "default": "- same as \`minNodeVersion\`",
        "docs": "The node version to use in GitHub workflows.",
        "name": "workflowNodeVersion",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "workflowNodeVersion",
        ],
        "switch": "workflow-node-version",
        "type": "string",
      },
    ],
    "pjid": "cdk8s-construct",
    "typename": "ConstructLibraryCdk8s",
  },
  Object {
    "docs": "Java project.",
    "docsurl": "https://github.com/projen/projen/blob/master/API.md#projen-java.javaproject",
    "fqn": "projen.java.JavaProject",
    "moduleName": "projen",
    "options": Array [
      Object {
        "default": "\\"my-app\\"",
        "docs": "The artifactId is generally the name that the project is known by.",
        "name": "artifactId",
        "parent": "PomOptions",
        "path": Array [
          "artifactId",
        ],
        "switch": "artifact-id",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Add a \`clobber\` task which resets the repo to origin.",
        "name": "clobber",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "clobber",
        ],
        "switch": "clobber",
        "type": "boolean",
      },
      Object {
        "default": "- defaults",
        "docs": "Compile options.",
        "name": "compileOptions",
        "optional": true,
        "parent": "JavaProjectOptions",
        "path": Array [
          "compileOptions",
        ],
        "switch": "compile-options",
        "type": "MavenCompileOptions",
      },
      Object {
        "default": "[]",
        "docs": "List of runtime dependencies for this project.",
        "name": "deps",
        "optional": true,
        "parent": "JavaProjectOptions",
        "path": Array [
          "deps",
        ],
        "switch": "deps",
        "type": "unknown",
      },
      Object {
        "docs": "Description of a project is always good.",
        "name": "description",
        "optional": true,
        "parent": "PomOptions",
        "path": Array [
          "description",
        ],
        "switch": "description",
        "type": "string",
      },
      Object {
        "default": "false",
        "docs": "Add a VSCode development environment (used for GitHub Codespaces).",
        "name": "devContainer",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "devContainer",
        ],
        "switch": "dev-container",
        "type": "boolean",
      },
      Object {
        "default": "\\"dist/java\\"",
        "docs": "Final artifact output directory.",
        "name": "distdir",
        "optional": true,
        "parent": "JavaProjectOptions",
        "path": Array [
          "distdir",
        ],
        "switch": "distdir",
        "type": "string",
      },
      Object {
        "default": "false",
        "docs": "Add a Gitpod development environment.",
        "name": "gitpod",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "gitpod",
        ],
        "switch": "gitpod",
        "type": "boolean",
      },
      Object {
        "default": "\\"org.acme\\"",
        "docs": "This is generally unique amongst an organization or a project.",
        "name": "groupId",
        "parent": "PomOptions",
        "path": Array [
          "groupId",
        ],
        "switch": "group-id",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Include junit tests.",
        "name": "junit",
        "optional": true,
        "parent": "JavaProjectOptions",
        "path": Array [
          "junit",
        ],
        "switch": "junit",
        "type": "boolean",
      },
      Object {
        "default": "- defaults",
        "docs": "junit options.",
        "name": "junitOptions",
        "optional": true,
        "parent": "JavaProjectOptions",
        "path": Array [
          "junitOptions",
        ],
        "switch": "junit-options",
        "type": "JunitOptions",
      },
      Object {
        "default": "{}",
        "docs": "Configure logging options such as verbosity.",
        "name": "logging",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "logging",
        ],
        "switch": "logging",
        "type": "LoggerOptions",
      },
      Object {
        "default": "true",
        "docs": "Whether mergify should be enabled on this repository or not.",
        "name": "mergify",
        "optional": true,
        "parent": "GitHubOptions",
        "path": Array [
          "mergify",
        ],
        "switch": "mergify",
        "type": "boolean",
      },
      Object {
        "default": "$BASEDIR",
        "docs": "This is the name of your project.",
        "name": "name",
        "parent": "ProjectOptions",
        "path": Array [
          "name",
        ],
        "switch": "name",
        "type": "string",
      },
      Object {
        "default": "\\".\\"",
        "docs": "The root directory of the project.",
        "name": "outdir",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "outdir",
        ],
        "switch": "outdir",
        "type": "string",
      },
      Object {
        "default": "\\"jar\\"",
        "docs": "Project packaging format.",
        "name": "packaging",
        "optional": true,
        "parent": "PomOptions",
        "path": Array [
          "packaging",
        ],
        "switch": "packaging",
        "type": "string",
      },
      Object {
        "default": "- defaults",
        "docs": "Packaging options.",
        "name": "packagingOptions",
        "optional": true,
        "parent": "JavaProjectOptions",
        "path": Array [
          "packagingOptions",
        ],
        "switch": "packaging-options",
        "type": "MavenPackagingOptions",
      },
      Object {
        "docs": "The parent project, if this project is part of a bigger project.",
        "name": "parent",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "parent",
        ],
        "switch": "parent",
        "type": "Project",
      },
      Object {
        "default": "ProjectType.UNKNOWN",
        "docs": "Which type of project this is (library/app).",
        "name": "projectType",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "projectType",
        ],
        "switch": "project-type",
        "type": "ProjectType",
      },
      Object {
        "default": "true",
        "docs": "Use projenrc in java.",
        "name": "projenrcJava",
        "optional": true,
        "parent": "JavaProjectOptions",
        "path": Array [
          "projenrcJava",
        ],
        "switch": "projenrc-java",
        "type": "boolean",
      },
      Object {
        "default": "- default options",
        "docs": "Options related to projenrc in java.",
        "name": "projenrcJavaOptions",
        "optional": true,
        "parent": "JavaProjectOptions",
        "path": Array [
          "projenrcJavaOptions",
        ],
        "switch": "projenrc-java-options",
        "type": "ProjenrcOptions",
      },
      Object {
        "default": "- { filename: 'README.md', contents: '# replace this' }",
        "docs": "The README setup.",
        "name": "readme",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "readme",
        ],
        "switch": "readme",
        "type": "SampleReadmeProps",
      },
      Object {
        "docs": "Include sample code and test if the relevant directories don't exist.",
        "name": "sample",
        "optional": true,
        "parent": "JavaProjectOptions",
        "path": Array [
          "sample",
        ],
        "switch": "sample",
        "type": "boolean",
      },
      Object {
        "default": "\\"org.acme\\"",
        "docs": "The java package to use for the code sample.",
        "name": "sampleJavaPackage",
        "optional": true,
        "parent": "JavaProjectOptions",
        "path": Array [
          "sampleJavaPackage",
        ],
        "switch": "sample-java-package",
        "type": "string",
      },
      Object {
        "default": "[]",
        "docs": "List of test dependencies for this project.",
        "name": "testDeps",
        "optional": true,
        "parent": "JavaProjectOptions",
        "path": Array [
          "testDeps",
        ],
        "switch": "test-deps",
        "type": "unknown",
      },
      Object {
        "docs": "The URL, like the name, is not required.",
        "name": "url",
        "optional": true,
        "parent": "PomOptions",
        "path": Array [
          "url",
        ],
        "switch": "url",
        "type": "string",
      },
      Object {
        "default": "\\"0.1.0\\"",
        "docs": "This is the last piece of the naming puzzle.",
        "name": "version",
        "parent": "PomOptions",
        "path": Array [
          "version",
        ],
        "switch": "version",
        "type": "string",
      },
    ],
    "pjid": "java",
    "typename": "java.JavaProject",
  },
  Object {
    "docs": "Multi-language jsii library project.",
    "docsurl": "https://github.com/projen/projen/blob/master/API.md#projen-jsiiproject",
    "fqn": "projen.JsiiProject",
    "moduleName": "projen",
    "options": Array [
      Object {
        "default": "true",
        "docs": "Allow the project to include \`peerDependencies\` and \`bundledDependencies\`.",
        "name": "allowLibraryDependencies",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "allowLibraryDependencies",
        ],
        "switch": "allow-library-dependencies",
        "type": "boolean",
      },
      Object {
        "default": "true",
        "docs": "Checks that after build there are no modified files on git.",
        "name": "antitamper",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "antitamper",
        ],
        "switch": "antitamper",
        "type": "boolean",
      },
      Object {
        "default": "\\"dist\\"",
        "docs": "A directory which will contain artifacts to be published to npm.",
        "name": "artifactsDirectory",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "artifactsDirectory",
        ],
        "switch": "artifacts-directory",
        "type": "string",
      },
      Object {
        "default": "$GIT_USER_NAME",
        "docs": "The name of the library author.",
        "name": "author",
        "parent": "JsiiProjectOptions",
        "path": Array [
          "author",
        ],
        "switch": "author",
        "type": "string",
      },
      Object {
        "default": "$GIT_USER_EMAIL",
        "docs": "Email or URL of the library author.",
        "name": "authorAddress",
        "parent": "JsiiProjectOptions",
        "path": Array [
          "authorAddress",
        ],
        "switch": "author-address",
        "type": "string",
      },
      Object {
        "docs": "Author's e-mail.",
        "name": "authorEmail",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "authorEmail",
        ],
        "switch": "author-email",
        "type": "string",
      },
      Object {
        "docs": "Author's name.",
        "name": "authorName",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "authorName",
        ],
        "switch": "author-name",
        "type": "string",
      },
      Object {
        "docs": "Author's Organization.",
        "name": "authorOrganization",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "authorOrganization",
        ],
        "switch": "author-organization",
        "type": "boolean",
      },
      Object {
        "docs": "Author's URL / Website.",
        "name": "authorUrl",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "authorUrl",
        ],
        "switch": "author-url",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Automatically add all executables under the \`bin\` directory to your \`package.json\` file under the \`bin\` section.",
        "name": "autoDetectBin",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "autoDetectBin",
        ],
        "switch": "auto-detect-bin",
        "type": "boolean",
      },
      Object {
        "docs": "Binary programs vended with your module.",
        "name": "bin",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "bin",
        ],
        "switch": "bin",
        "type": "unknown",
      },
      Object {
        "default": "- true if not a subproject",
        "docs": "Define a GitHub workflow for building PRs.",
        "name": "buildWorkflow",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "buildWorkflow",
        ],
        "switch": "build-workflow",
        "type": "boolean",
      },
      Object {
        "docs": "List of dependencies to bundle into this module.",
        "name": "bundledDeps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "bundledDeps",
        ],
        "switch": "bundled-deps",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Add a \`clobber\` task which resets the repo to origin.",
        "name": "clobber",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "clobber",
        ],
        "switch": "clobber",
        "type": "boolean",
      },
      Object {
        "default": "false",
        "docs": "Define a GitHub workflow step for sending code coverage metrics to https://codecov.io/ Uses codecov/codecov-action@v1 A secret is required for private repos. Configured with @codeCovTokenSecret.",
        "name": "codeCov",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "codeCov",
        ],
        "switch": "code-cov",
        "type": "boolean",
      },
      Object {
        "default": "- if this option is not specified, only public repositories are supported",
        "docs": "Define the secret name for a specified https://codecov.io/ token A secret is required to send coverage for private repositories.",
        "name": "codeCovTokenSecret",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "codeCovTokenSecret",
        ],
        "switch": "code-cov-token-secret",
        "type": "string",
      },
      Object {
        "default": "false",
        "docs": "Automatically run API compatibility test against the latest version published to npm after compilation.",
        "name": "compat",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": Array [
          "compat",
        ],
        "switch": "compat",
        "type": "boolean",
      },
      Object {
        "default": "\\".compatignore\\"",
        "docs": "Name of the ignore file for API compatibility tests.",
        "name": "compatIgnore",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": Array [
          "compatIgnore",
        ],
        "switch": "compat-ignore",
        "type": "string",
      },
      Object {
        "default": "- if \`testdir\` is under \`src/**\`, the default is \`true\`, otherwise the default is \`false.",
        "docs": "Compile the code before running tests.",
        "name": "compileBeforeTest",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "compileBeforeTest",
        ],
        "switch": "compile-before-test",
        "type": "boolean",
      },
      Object {
        "default": "- defaults to the value of authorName or \\"\\" if \`authorName\` is undefined.",
        "docs": "License copyright owner.",
        "name": "copyrightOwner",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "copyrightOwner",
        ],
        "switch": "copyright-owner",
        "type": "string",
      },
      Object {
        "default": "- current year",
        "docs": "The copyright years to put in the LICENSE file.",
        "name": "copyrightPeriod",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "copyrightPeriod",
        ],
        "switch": "copyright-period",
        "type": "string",
      },
      Object {
        "default": "\\"main\\"",
        "docs": "The name of the main release branch.",
        "name": "defaultReleaseBranch",
        "parent": "NodeProjectOptions",
        "path": Array [
          "defaultReleaseBranch",
        ],
        "switch": "default-release-branch",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Include dependabot configuration.",
        "name": "dependabot",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "dependabot",
        ],
        "switch": "dependabot",
        "type": "boolean",
      },
      Object {
        "default": "- default options",
        "docs": "Options for dependabot.",
        "name": "dependabotOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "dependabotOptions",
        ],
        "switch": "dependabot-options",
        "type": "DependabotOptions",
      },
      Object {
        "default": "[]",
        "docs": "Runtime dependencies of this module.",
        "name": "deps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "deps",
        ],
        "switch": "deps",
        "type": "unknown",
      },
      Object {
        "docs": "The description is just a string that helps people understand the purpose of the package.",
        "name": "description",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "description",
        ],
        "switch": "description",
        "type": "string",
      },
      Object {
        "default": "false",
        "docs": "Add a VSCode development environment (used for GitHub Codespaces).",
        "name": "devContainer",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "devContainer",
        ],
        "switch": "dev-container",
        "type": "boolean",
      },
      Object {
        "default": "[]",
        "docs": "Build dependencies for this module.",
        "name": "devDeps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "devDeps",
        ],
        "switch": "dev-deps",
        "type": "unknown",
      },
      Object {
        "default": "false",
        "docs": "Do not generate a \`tsconfig.json\` file (used by jsii projects since tsconfig.json is generated by the jsii compiler).",
        "name": "disableTsconfig",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "disableTsconfig",
        ],
        "switch": "disable-tsconfig",
        "type": "boolean",
      },
      Object {
        "default": "false",
        "docs": "Docgen by Typedoc.",
        "name": "docgen",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "docgen",
        ],
        "switch": "docgen",
        "type": "boolean",
      },
      Object {
        "default": "\\"docs\\"",
        "docs": "Docs directory.",
        "name": "docsDirectory",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "docsDirectory",
        ],
        "switch": "docs-directory",
        "type": "string",
      },
      Object {
        "deprecated": true,
        "name": "dotnet",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": Array [
          "dotnet",
        ],
        "switch": "dotnet",
        "type": "JsiiDotNetTarget",
      },
      Object {
        "default": "\\"lib/index.js\\"",
        "docs": "Module entrypoint (\`main\` in \`package.json\`).",
        "name": "entrypoint",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "entrypoint",
        ],
        "switch": "entrypoint",
        "type": "string",
      },
      Object {
        "default": "- .d.ts file derived from the project's entrypoint (usually lib/index.d.ts)",
        "docs": "The .d.ts file that includes the type declarations for this module.",
        "name": "entrypointTypes",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "entrypointTypes",
        ],
        "switch": "entrypoint-types",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Setup eslint.",
        "name": "eslint",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "eslint",
        ],
        "switch": "eslint",
        "type": "boolean",
      },
      Object {
        "default": "- opinionated default options",
        "docs": "Eslint options.",
        "name": "eslintOptions",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "eslintOptions",
        ],
        "switch": "eslint-options",
        "type": "EslintOptions",
      },
      Object {
        "docs": "Accepts a list of glob patterns.",
        "name": "excludeTypescript",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": Array [
          "excludeTypescript",
        ],
        "switch": "exclude-typescript",
        "type": "unknown",
      },
      Object {
        "docs": "Additional entries to .gitignore.",
        "name": "gitignore",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "gitignore",
        ],
        "switch": "gitignore",
        "type": "unknown",
      },
      Object {
        "default": "false",
        "docs": "Add a Gitpod development environment.",
        "name": "gitpod",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "gitpod",
        ],
        "switch": "gitpod",
        "type": "boolean",
      },
      Object {
        "docs": "Package's Homepage / Website.",
        "name": "homepage",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "homepage",
        ],
        "switch": "homepage",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Setup jest unit tests.",
        "name": "jest",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "jest",
        ],
        "switch": "jest",
        "type": "boolean",
      },
      Object {
        "default": "- default options",
        "docs": "Jest options.",
        "name": "jestOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "jestOptions",
        ],
        "switch": "jest-options",
        "type": "JestOptions",
      },
      Object {
        "default": "\\"latest\\"",
        "docs": "Version requirement of \`jsii-release\` which is used to publish modules to npm.",
        "name": "jsiiReleaseVersion",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "jsiiReleaseVersion",
        ],
        "switch": "jsii-release-version",
        "type": "string",
      },
      Object {
        "docs": "Keywords to include in \`package.json\`.",
        "name": "keywords",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "keywords",
        ],
        "switch": "keywords",
        "type": "unknown",
      },
      Object {
        "default": "\\"lib\\"",
        "docs": "Typescript  artifacts output directory.",
        "name": "libdir",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "libdir",
        ],
        "switch": "libdir",
        "type": "string",
      },
      Object {
        "default": "\\"Apache-2.0\\"",
        "docs": "License's SPDX identifier.",
        "name": "license",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "license",
        ],
        "switch": "license",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Indicates if a license should be added.",
        "name": "licensed",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "licensed",
        ],
        "switch": "licensed",
        "type": "boolean",
      },
      Object {
        "default": "{}",
        "docs": "Configure logging options such as verbosity.",
        "name": "logging",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "logging",
        ],
        "switch": "logging",
        "type": "LoggerOptions",
      },
      Object {
        "default": "- no max",
        "docs": "Minimum node.js version to require via \`engines\` (inclusive).",
        "name": "maxNodeVersion",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "maxNodeVersion",
        ],
        "switch": "max-node-version",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Whether mergify should be enabled on this repository or not.",
        "name": "mergify",
        "optional": true,
        "parent": "GitHubOptions",
        "path": Array [
          "mergify",
        ],
        "switch": "mergify",
        "type": "boolean",
      },
      Object {
        "default": "\\"auto-merge\\"",
        "docs": "Automatically merge PRs that build successfully and have this label.",
        "name": "mergifyAutoMergeLabel",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "mergifyAutoMergeLabel",
        ],
        "switch": "mergify-auto-merge-label",
        "type": "string",
      },
      Object {
        "default": "- default options",
        "docs": "Options for mergify.",
        "name": "mergifyOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "mergifyOptions",
        ],
        "switch": "mergify-options",
        "type": "MergifyOptions",
      },
      Object {
        "default": "- no \\"engines\\" specified",
        "docs": "Minimum Node.js version to require via package.json \`engines\` (inclusive).",
        "name": "minNodeVersion",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "minNodeVersion",
        ],
        "switch": "min-node-version",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Automatically update files modified during builds to pull-request branches.",
        "name": "mutableBuild",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "mutableBuild",
        ],
        "switch": "mutable-build",
        "type": "boolean",
      },
      Object {
        "default": "$BASEDIR",
        "docs": "This is the name of your project.",
        "name": "name",
        "parent": "ProjectOptions",
        "path": Array [
          "name",
        ],
        "switch": "name",
        "type": "string",
      },
      Object {
        "default": "- for scoped packages (e.g. \`foo@bar\`), the default is
\`NpmAccess.RESTRICTED\`, for non-scoped packages, the default is
\`NpmAccess.PUBLIC\`.",
        "docs": "Access level of the npm package.",
        "name": "npmAccess",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "npmAccess",
        ],
        "switch": "npm-access",
        "type": "NpmAccess",
      },
      Object {
        "default": "\\"latest\\"",
        "docs": "Tags can be used to provide an alias instead of version numbers.",
        "name": "npmDistTag",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "npmDistTag",
        ],
        "switch": "npm-dist-tag",
        "type": "string",
      },
      Object {
        "docs": "Additional entries to .npmignore.",
        "name": "npmignore",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "npmignore",
        ],
        "switch": "npmignore",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Defines an .npmignore file. Normally this is only needed for libraries that are packaged as tarballs.",
        "name": "npmignoreEnabled",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "npmignoreEnabled",
        ],
        "switch": "npmignore-enabled",
        "type": "boolean",
      },
      Object {
        "deprecated": true,
        "docs": "The host name of the npm registry to publish to.",
        "name": "npmRegistry",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "npmRegistry",
        ],
        "switch": "npm-registry",
        "type": "string",
      },
      Object {
        "default": "\\"https://registry.npmjs.org\\"",
        "docs": "The base URL of the npm package registry.",
        "name": "npmRegistryUrl",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "npmRegistryUrl",
        ],
        "switch": "npm-registry-url",
        "type": "string",
      },
      Object {
        "default": "NpmTaskExecution.PROJEN",
        "docs": "Determines how tasks are executed when invoked as npm scripts (yarn/npm run xyz).",
        "name": "npmTaskExecution",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "npmTaskExecution",
        ],
        "switch": "npm-task-execution",
        "type": "NpmTaskExecution",
      },
      Object {
        "default": "\\"NPM_TOKEN\\"",
        "docs": "GitHub secret which contains the NPM token to use when publishing packages.",
        "name": "npmTokenSecret",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "npmTokenSecret",
        ],
        "switch": "npm-token-secret",
        "type": "string",
      },
      Object {
        "default": "\\".\\"",
        "docs": "The root directory of the project.",
        "name": "outdir",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "outdir",
        ],
        "switch": "outdir",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Defines a \`yarn package\` command that will produce a tarball and place it under \`dist/js\`.",
        "name": "package",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "package",
        ],
        "switch": "package",
        "type": "boolean",
      },
      Object {
        "default": "NodePackageManager.YARN",
        "docs": "The Node Package Manager used to execute scripts.",
        "name": "packageManager",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "packageManager",
        ],
        "switch": "package-manager",
        "type": "NodePackageManager",
      },
      Object {
        "default": "- defaults to project name",
        "docs": "The \\"name\\" in package.json.",
        "name": "packageName",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "packageName",
        ],
        "switch": "package-name",
        "type": "string",
      },
      Object {
        "docs": "The parent project, if this project is part of a bigger project.",
        "name": "parent",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "parent",
        ],
        "switch": "parent",
        "type": "Project",
      },
      Object {
        "docs": "Options for \`peerDeps\`.",
        "name": "peerDependencyOptions",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "peerDependencyOptions",
        ],
        "switch": "peer-dependency-options",
        "type": "PeerDependencyOptions",
      },
      Object {
        "default": "[]",
        "docs": "Peer dependencies for this module.",
        "name": "peerDeps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "peerDeps",
        ],
        "switch": "peer-deps",
        "type": "unknown",
      },
      Object {
        "default": "ProjectType.UNKNOWN",
        "docs": "Which type of project this is (library/app).",
        "name": "projectType",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "projectType",
        ],
        "switch": "project-type",
        "type": "ProjectType",
      },
      Object {
        "default": "\\"npx projen\\"",
        "docs": "The shell command to use in order to run the projen CLI.",
        "name": "projenCommand",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "projenCommand",
        ],
        "switch": "projen-command",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Indicates of \\"projen\\" should be installed as a devDependency.",
        "name": "projenDevDependency",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenDevDependency",
        ],
        "switch": "projen-dev-dependency",
        "type": "boolean",
      },
      Object {
        "default": "true",
        "docs": "Execute \`projen\` as the first step of the \`build\` task to synthesize project files.",
        "name": "projenDuringBuild",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenDuringBuild",
        ],
        "switch": "projen-during-build",
        "type": "boolean",
      },
      Object {
        "default": "true",
        "docs": "Generate (once) .projenrc.js (in JavaScript). Set to \`false\` in order to disable .projenrc.js generation.",
        "name": "projenrcJs",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenrcJs",
        ],
        "switch": "projenrc-js",
        "type": "boolean",
      },
      Object {
        "default": "- default options",
        "docs": "Options for .projenrc.js.",
        "name": "projenrcJsOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenrcJsOptions",
        ],
        "switch": "projenrc-js-options",
        "type": "ProjenrcOptions",
      },
      Object {
        "default": "false",
        "docs": "Use TypeScript for your projenrc file (\`.projenrc.ts\`).",
        "name": "projenrcTs",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "projenrcTs",
        ],
        "switch": "projenrc-ts",
        "type": "boolean",
      },
      Object {
        "docs": "Options for .projenrc.ts.",
        "name": "projenrcTsOptions",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "projenrcTsOptions",
        ],
        "switch": "projenrc-ts-options",
        "type": "ProjenrcOptions",
      },
      Object {
        "default": "- \\"true\\" if mergify auto-merge is enabled (default)",
        "docs": "Automatically merge projen upgrade PRs when build passes.",
        "name": "projenUpgradeAutoMerge",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenUpgradeAutoMerge",
        ],
        "switch": "projen-upgrade-auto-merge",
        "type": "boolean",
      },
      Object {
        "default": "[ \\"0 6 * * *\\" ]",
        "docs": "Customize the projenUpgrade schedule in cron expression.",
        "name": "projenUpgradeSchedule",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenUpgradeSchedule",
        ],
        "switch": "projen-upgrade-schedule",
        "type": "unknown",
      },
      Object {
        "default": "- no automatic projen upgrade pull requests",
        "docs": "Periodically submits a pull request for projen upgrades (executes \`yarn projen:upgrade\`).",
        "name": "projenUpgradeSecret",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenUpgradeSecret",
        ],
        "switch": "projen-upgrade-secret",
        "type": "string",
      },
      Object {
        "default": "- Defaults to the latest version.",
        "docs": "Version of projen to install.",
        "name": "projenVersion",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenVersion",
        ],
        "switch": "projen-version",
        "type": "string",
      },
      Object {
        "default": "- no publishing",
        "docs": "Publish Go bindings to a git repository.",
        "name": "publishToGo",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": Array [
          "publishToGo",
        ],
        "switch": "publish-to-go",
        "type": "JsiiGoTarget",
      },
      Object {
        "default": "- no publishing",
        "docs": "Publish to maven.",
        "name": "publishToMaven",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": Array [
          "publishToMaven",
        ],
        "switch": "publish-to-maven",
        "type": "JsiiJavaTarget",
      },
      Object {
        "default": "- no publishing",
        "docs": "Publish to NuGet.",
        "name": "publishToNuget",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": Array [
          "publishToNuget",
        ],
        "switch": "publish-to-nuget",
        "type": "JsiiDotNetTarget",
      },
      Object {
        "default": "- no publishing",
        "docs": "Publish to pypi.",
        "name": "publishToPypi",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": Array [
          "publishToPypi",
        ],
        "switch": "publish-to-pypi",
        "type": "JsiiPythonTarget",
      },
      Object {
        "default": "true",
        "docs": "Include a GitHub pull request template.",
        "name": "pullRequestTemplate",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "pullRequestTemplate",
        ],
        "switch": "pull-request-template",
        "type": "boolean",
      },
      Object {
        "default": "- default content",
        "docs": "The contents of the pull request template.",
        "name": "pullRequestTemplateContents",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "pullRequestTemplateContents",
        ],
        "switch": "pull-request-template-contents",
        "type": "string",
      },
      Object {
        "deprecated": true,
        "name": "python",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": Array [
          "python",
        ],
        "switch": "python",
        "type": "JsiiPythonTarget",
      },
      Object {
        "default": "- { filename: 'README.md', contents: '# replace this' }",
        "docs": "The README setup.",
        "name": "readme",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "readme",
        ],
        "switch": "readme",
        "type": "SampleReadmeProps",
      },
      Object {
        "default": "[ \\"main\\" ]",
        "docs": "Branches which trigger a release.",
        "name": "releaseBranches",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "releaseBranches",
        ],
        "switch": "release-branches",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Automatically release new versions every commit to one of branches in \`releaseBranches\`.",
        "name": "releaseEveryCommit",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "releaseEveryCommit",
        ],
        "switch": "release-every-commit",
        "type": "boolean",
      },
      Object {
        "default": "- no scheduled releases",
        "docs": "CRON schedule to trigger new releases.",
        "name": "releaseSchedule",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "releaseSchedule",
        ],
        "switch": "release-schedule",
        "type": "string",
      },
      Object {
        "default": "false",
        "docs": "Automatically release to npm when new versions are introduced.",
        "name": "releaseToNpm",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "releaseToNpm",
        ],
        "switch": "release-to-npm",
        "type": "boolean",
      },
      Object {
        "default": "- true if not a subproject",
        "docs": "Define a GitHub workflow for releasing from \\"main\\" when new versions are bumped.",
        "name": "releaseWorkflow",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "releaseWorkflow",
        ],
        "switch": "release-workflow",
        "type": "boolean",
      },
      Object {
        "docs": "A set of workflow steps to execute in order to setup the workflow container.",
        "name": "releaseWorkflowSetupSteps",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "releaseWorkflowSetupSteps",
        ],
        "switch": "release-workflow-setup-steps",
        "type": "unknown",
      },
      Object {
        "docs": "The repository is the location where the actual code for your package lives.",
        "name": "repository",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "repository",
        ],
        "switch": "repository",
        "type": "string",
      },
      Object {
        "docs": "If the package.json for your package is not in the root directory (for example if it is part of a monorepo), you can specify the directory in which it lives.",
        "name": "repositoryDirectory",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "repositoryDirectory",
        ],
        "switch": "repository-directory",
        "type": "string",
      },
      Object {
        "default": "$GIT_REMOTE",
        "docs": "Git repository URL.",
        "name": "repositoryUrl",
        "parent": "JsiiProjectOptions",
        "path": Array [
          "repositoryUrl",
        ],
        "switch": "repository-url",
        "type": "string",
      },
      Object {
        "default": "\\".\\"",
        "name": "rootdir",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": Array [
          "rootdir",
        ],
        "switch": "rootdir",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Generate one-time sample in \`src/\` and \`test/\` if there are no files there.",
        "name": "sampleCode",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "sampleCode",
        ],
        "switch": "sample-code",
        "type": "boolean",
      },
      Object {
        "default": "{}",
        "docs": "npm scripts to include.",
        "name": "scripts",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "scripts",
        ],
        "switch": "scripts",
        "type": "unknown",
      },
      Object {
        "default": "\\"src\\"",
        "docs": "Typescript sources directory.",
        "name": "srcdir",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "srcdir",
        ],
        "switch": "srcdir",
        "type": "string",
      },
      Object {
        "docs": "Package's Stability.",
        "name": "stability",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "stability",
        ],
        "switch": "stability",
        "type": "string",
      },
      Object {
        "default": "\\"test\\"",
        "docs": "Jest tests directory. Tests files should be named \`xxx.test.ts\`.",
        "name": "testdir",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "testdir",
        ],
        "switch": "testdir",
        "type": "string",
      },
      Object {
        "docs": "Custom TSConfig.",
        "name": "tsconfig",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "tsconfig",
        ],
        "switch": "tsconfig",
        "type": "TypescriptConfigOptions",
      },
      Object {
        "default": "\\"latest\\"",
        "docs": "TypeScript version to use.",
        "name": "typescriptVersion",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "typescriptVersion",
        ],
        "switch": "typescript-version",
        "type": "string",
      },
      Object {
        "default": "\\"yarn install --frozen-lockfile && yarn projen\\"",
        "docs": "Workflow steps to use in order to bootstrap this repo.",
        "name": "workflowBootstrapSteps",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "workflowBootstrapSteps",
        ],
        "switch": "workflow-bootstrap-steps",
        "type": "unknown",
      },
      Object {
        "default": "- default image",
        "docs": "Container image to use for GitHub workflows.",
        "name": "workflowContainerImage",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "workflowContainerImage",
        ],
        "switch": "workflow-container-image",
        "type": "string",
      },
      Object {
        "default": "- same as \`minNodeVersion\`",
        "docs": "The node version to use in GitHub workflows.",
        "name": "workflowNodeVersion",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "workflowNodeVersion",
        ],
        "switch": "workflow-node-version",
        "type": "string",
      },
    ],
    "pjid": "jsii",
    "typename": "JsiiProject",
  },
  Object {
    "docs": "Next.js project without TypeScript.",
    "docsurl": "https://github.com/projen/projen/blob/master/API.md#projen-web.nextjsproject",
    "fqn": "projen.web.NextJsProject",
    "moduleName": "projen",
    "options": Array [
      Object {
        "default": "true",
        "docs": "Allow the project to include \`peerDependencies\` and \`bundledDependencies\`.",
        "name": "allowLibraryDependencies",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "allowLibraryDependencies",
        ],
        "switch": "allow-library-dependencies",
        "type": "boolean",
      },
      Object {
        "default": "true",
        "docs": "Checks that after build there are no modified files on git.",
        "name": "antitamper",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "antitamper",
        ],
        "switch": "antitamper",
        "type": "boolean",
      },
      Object {
        "default": "\\"dist\\"",
        "docs": "A directory which will contain artifacts to be published to npm.",
        "name": "artifactsDirectory",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "artifactsDirectory",
        ],
        "switch": "artifacts-directory",
        "type": "string",
      },
      Object {
        "default": "\\"public\\"",
        "docs": "Assets directory.",
        "name": "assetsdir",
        "optional": true,
        "parent": "NextJsCommonProjectOptions",
        "path": Array [
          "assetsdir",
        ],
        "switch": "assetsdir",
        "type": "string",
      },
      Object {
        "docs": "Author's e-mail.",
        "name": "authorEmail",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "authorEmail",
        ],
        "switch": "author-email",
        "type": "string",
      },
      Object {
        "docs": "Author's name.",
        "name": "authorName",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "authorName",
        ],
        "switch": "author-name",
        "type": "string",
      },
      Object {
        "docs": "Author's Organization.",
        "name": "authorOrganization",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "authorOrganization",
        ],
        "switch": "author-organization",
        "type": "boolean",
      },
      Object {
        "docs": "Author's URL / Website.",
        "name": "authorUrl",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "authorUrl",
        ],
        "switch": "author-url",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Automatically add all executables under the \`bin\` directory to your \`package.json\` file under the \`bin\` section.",
        "name": "autoDetectBin",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "autoDetectBin",
        ],
        "switch": "auto-detect-bin",
        "type": "boolean",
      },
      Object {
        "docs": "Binary programs vended with your module.",
        "name": "bin",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "bin",
        ],
        "switch": "bin",
        "type": "unknown",
      },
      Object {
        "default": "- true if not a subproject",
        "docs": "Define a GitHub workflow for building PRs.",
        "name": "buildWorkflow",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "buildWorkflow",
        ],
        "switch": "build-workflow",
        "type": "boolean",
      },
      Object {
        "docs": "List of dependencies to bundle into this module.",
        "name": "bundledDeps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "bundledDeps",
        ],
        "switch": "bundled-deps",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Add a \`clobber\` task which resets the repo to origin.",
        "name": "clobber",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "clobber",
        ],
        "switch": "clobber",
        "type": "boolean",
      },
      Object {
        "default": "false",
        "docs": "Define a GitHub workflow step for sending code coverage metrics to https://codecov.io/ Uses codecov/codecov-action@v1 A secret is required for private repos. Configured with @codeCovTokenSecret.",
        "name": "codeCov",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "codeCov",
        ],
        "switch": "code-cov",
        "type": "boolean",
      },
      Object {
        "default": "- if this option is not specified, only public repositories are supported",
        "docs": "Define the secret name for a specified https://codecov.io/ token A secret is required to send coverage for private repositories.",
        "name": "codeCovTokenSecret",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "codeCovTokenSecret",
        ],
        "switch": "code-cov-token-secret",
        "type": "string",
      },
      Object {
        "default": "- defaults to the value of authorName or \\"\\" if \`authorName\` is undefined.",
        "docs": "License copyright owner.",
        "name": "copyrightOwner",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "copyrightOwner",
        ],
        "switch": "copyright-owner",
        "type": "string",
      },
      Object {
        "default": "- current year",
        "docs": "The copyright years to put in the LICENSE file.",
        "name": "copyrightPeriod",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "copyrightPeriod",
        ],
        "switch": "copyright-period",
        "type": "string",
      },
      Object {
        "default": "\\"main\\"",
        "docs": "The name of the main release branch.",
        "name": "defaultReleaseBranch",
        "parent": "NodeProjectOptions",
        "path": Array [
          "defaultReleaseBranch",
        ],
        "switch": "default-release-branch",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Include dependabot configuration.",
        "name": "dependabot",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "dependabot",
        ],
        "switch": "dependabot",
        "type": "boolean",
      },
      Object {
        "default": "- default options",
        "docs": "Options for dependabot.",
        "name": "dependabotOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "dependabotOptions",
        ],
        "switch": "dependabot-options",
        "type": "DependabotOptions",
      },
      Object {
        "default": "[]",
        "docs": "Runtime dependencies of this module.",
        "name": "deps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "deps",
        ],
        "switch": "deps",
        "type": "unknown",
      },
      Object {
        "docs": "The description is just a string that helps people understand the purpose of the package.",
        "name": "description",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "description",
        ],
        "switch": "description",
        "type": "string",
      },
      Object {
        "default": "false",
        "docs": "Add a VSCode development environment (used for GitHub Codespaces).",
        "name": "devContainer",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "devContainer",
        ],
        "switch": "dev-container",
        "type": "boolean",
      },
      Object {
        "default": "[]",
        "docs": "Build dependencies for this module.",
        "name": "devDeps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "devDeps",
        ],
        "switch": "dev-deps",
        "type": "unknown",
      },
      Object {
        "default": "\\"lib/index.js\\"",
        "docs": "Module entrypoint (\`main\` in \`package.json\`).",
        "name": "entrypoint",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "entrypoint",
        ],
        "switch": "entrypoint",
        "type": "string",
      },
      Object {
        "docs": "Additional entries to .gitignore.",
        "name": "gitignore",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "gitignore",
        ],
        "switch": "gitignore",
        "type": "unknown",
      },
      Object {
        "default": "false",
        "docs": "Add a Gitpod development environment.",
        "name": "gitpod",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "gitpod",
        ],
        "switch": "gitpod",
        "type": "boolean",
      },
      Object {
        "docs": "Package's Homepage / Website.",
        "name": "homepage",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "homepage",
        ],
        "switch": "homepage",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Setup jest unit tests.",
        "name": "jest",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "jest",
        ],
        "switch": "jest",
        "type": "boolean",
      },
      Object {
        "default": "- default options",
        "docs": "Jest options.",
        "name": "jestOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "jestOptions",
        ],
        "switch": "jest-options",
        "type": "JestOptions",
      },
      Object {
        "default": "\\"latest\\"",
        "docs": "Version requirement of \`jsii-release\` which is used to publish modules to npm.",
        "name": "jsiiReleaseVersion",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "jsiiReleaseVersion",
        ],
        "switch": "jsii-release-version",
        "type": "string",
      },
      Object {
        "docs": "Keywords to include in \`package.json\`.",
        "name": "keywords",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "keywords",
        ],
        "switch": "keywords",
        "type": "unknown",
      },
      Object {
        "default": "\\"Apache-2.0\\"",
        "docs": "License's SPDX identifier.",
        "name": "license",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "license",
        ],
        "switch": "license",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Indicates if a license should be added.",
        "name": "licensed",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "licensed",
        ],
        "switch": "licensed",
        "type": "boolean",
      },
      Object {
        "default": "{}",
        "docs": "Configure logging options such as verbosity.",
        "name": "logging",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "logging",
        ],
        "switch": "logging",
        "type": "LoggerOptions",
      },
      Object {
        "default": "- no max",
        "docs": "Minimum node.js version to require via \`engines\` (inclusive).",
        "name": "maxNodeVersion",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "maxNodeVersion",
        ],
        "switch": "max-node-version",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Whether mergify should be enabled on this repository or not.",
        "name": "mergify",
        "optional": true,
        "parent": "GitHubOptions",
        "path": Array [
          "mergify",
        ],
        "switch": "mergify",
        "type": "boolean",
      },
      Object {
        "default": "\\"auto-merge\\"",
        "docs": "Automatically merge PRs that build successfully and have this label.",
        "name": "mergifyAutoMergeLabel",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "mergifyAutoMergeLabel",
        ],
        "switch": "mergify-auto-merge-label",
        "type": "string",
      },
      Object {
        "default": "- default options",
        "docs": "Options for mergify.",
        "name": "mergifyOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "mergifyOptions",
        ],
        "switch": "mergify-options",
        "type": "MergifyOptions",
      },
      Object {
        "default": "- no \\"engines\\" specified",
        "docs": "Minimum Node.js version to require via package.json \`engines\` (inclusive).",
        "name": "minNodeVersion",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "minNodeVersion",
        ],
        "switch": "min-node-version",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Automatically update files modified during builds to pull-request branches.",
        "name": "mutableBuild",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "mutableBuild",
        ],
        "switch": "mutable-build",
        "type": "boolean",
      },
      Object {
        "default": "$BASEDIR",
        "docs": "This is the name of your project.",
        "name": "name",
        "parent": "ProjectOptions",
        "path": Array [
          "name",
        ],
        "switch": "name",
        "type": "string",
      },
      Object {
        "default": "- for scoped packages (e.g. \`foo@bar\`), the default is
\`NpmAccess.RESTRICTED\`, for non-scoped packages, the default is
\`NpmAccess.PUBLIC\`.",
        "docs": "Access level of the npm package.",
        "name": "npmAccess",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "npmAccess",
        ],
        "switch": "npm-access",
        "type": "NpmAccess",
      },
      Object {
        "default": "\\"latest\\"",
        "docs": "Tags can be used to provide an alias instead of version numbers.",
        "name": "npmDistTag",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "npmDistTag",
        ],
        "switch": "npm-dist-tag",
        "type": "string",
      },
      Object {
        "docs": "Additional entries to .npmignore.",
        "name": "npmignore",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "npmignore",
        ],
        "switch": "npmignore",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Defines an .npmignore file. Normally this is only needed for libraries that are packaged as tarballs.",
        "name": "npmignoreEnabled",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "npmignoreEnabled",
        ],
        "switch": "npmignore-enabled",
        "type": "boolean",
      },
      Object {
        "deprecated": true,
        "docs": "The host name of the npm registry to publish to.",
        "name": "npmRegistry",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "npmRegistry",
        ],
        "switch": "npm-registry",
        "type": "string",
      },
      Object {
        "default": "\\"https://registry.npmjs.org\\"",
        "docs": "The base URL of the npm package registry.",
        "name": "npmRegistryUrl",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "npmRegistryUrl",
        ],
        "switch": "npm-registry-url",
        "type": "string",
      },
      Object {
        "default": "NpmTaskExecution.PROJEN",
        "docs": "Determines how tasks are executed when invoked as npm scripts (yarn/npm run xyz).",
        "name": "npmTaskExecution",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "npmTaskExecution",
        ],
        "switch": "npm-task-execution",
        "type": "NpmTaskExecution",
      },
      Object {
        "default": "\\"NPM_TOKEN\\"",
        "docs": "GitHub secret which contains the NPM token to use when publishing packages.",
        "name": "npmTokenSecret",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "npmTokenSecret",
        ],
        "switch": "npm-token-secret",
        "type": "string",
      },
      Object {
        "default": "\\".\\"",
        "docs": "The root directory of the project.",
        "name": "outdir",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "outdir",
        ],
        "switch": "outdir",
        "type": "string",
      },
      Object {
        "default": "NodePackageManager.YARN",
        "docs": "The Node Package Manager used to execute scripts.",
        "name": "packageManager",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "packageManager",
        ],
        "switch": "package-manager",
        "type": "NodePackageManager",
      },
      Object {
        "default": "- defaults to project name",
        "docs": "The \\"name\\" in package.json.",
        "name": "packageName",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "packageName",
        ],
        "switch": "package-name",
        "type": "string",
      },
      Object {
        "docs": "The parent project, if this project is part of a bigger project.",
        "name": "parent",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "parent",
        ],
        "switch": "parent",
        "type": "Project",
      },
      Object {
        "docs": "Options for \`peerDeps\`.",
        "name": "peerDependencyOptions",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "peerDependencyOptions",
        ],
        "switch": "peer-dependency-options",
        "type": "PeerDependencyOptions",
      },
      Object {
        "default": "[]",
        "docs": "Peer dependencies for this module.",
        "name": "peerDeps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "peerDeps",
        ],
        "switch": "peer-deps",
        "type": "unknown",
      },
      Object {
        "default": "ProjectType.UNKNOWN",
        "docs": "Which type of project this is (library/app).",
        "name": "projectType",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "projectType",
        ],
        "switch": "project-type",
        "type": "ProjectType",
      },
      Object {
        "default": "\\"npx projen\\"",
        "docs": "The shell command to use in order to run the projen CLI.",
        "name": "projenCommand",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "projenCommand",
        ],
        "switch": "projen-command",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Indicates of \\"projen\\" should be installed as a devDependency.",
        "name": "projenDevDependency",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenDevDependency",
        ],
        "switch": "projen-dev-dependency",
        "type": "boolean",
      },
      Object {
        "default": "true",
        "docs": "Execute \`projen\` as the first step of the \`build\` task to synthesize project files.",
        "name": "projenDuringBuild",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenDuringBuild",
        ],
        "switch": "projen-during-build",
        "type": "boolean",
      },
      Object {
        "default": "true",
        "docs": "Generate (once) .projenrc.js (in JavaScript). Set to \`false\` in order to disable .projenrc.js generation.",
        "name": "projenrcJs",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenrcJs",
        ],
        "switch": "projenrc-js",
        "type": "boolean",
      },
      Object {
        "default": "- default options",
        "docs": "Options for .projenrc.js.",
        "name": "projenrcJsOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenrcJsOptions",
        ],
        "switch": "projenrc-js-options",
        "type": "ProjenrcOptions",
      },
      Object {
        "default": "- \\"true\\" if mergify auto-merge is enabled (default)",
        "docs": "Automatically merge projen upgrade PRs when build passes.",
        "name": "projenUpgradeAutoMerge",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenUpgradeAutoMerge",
        ],
        "switch": "projen-upgrade-auto-merge",
        "type": "boolean",
      },
      Object {
        "default": "[ \\"0 6 * * *\\" ]",
        "docs": "Customize the projenUpgrade schedule in cron expression.",
        "name": "projenUpgradeSchedule",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenUpgradeSchedule",
        ],
        "switch": "projen-upgrade-schedule",
        "type": "unknown",
      },
      Object {
        "default": "- no automatic projen upgrade pull requests",
        "docs": "Periodically submits a pull request for projen upgrades (executes \`yarn projen:upgrade\`).",
        "name": "projenUpgradeSecret",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenUpgradeSecret",
        ],
        "switch": "projen-upgrade-secret",
        "type": "string",
      },
      Object {
        "default": "- Defaults to the latest version.",
        "docs": "Version of projen to install.",
        "name": "projenVersion",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenVersion",
        ],
        "switch": "projen-version",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Include a GitHub pull request template.",
        "name": "pullRequestTemplate",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "pullRequestTemplate",
        ],
        "switch": "pull-request-template",
        "type": "boolean",
      },
      Object {
        "default": "- default content",
        "docs": "The contents of the pull request template.",
        "name": "pullRequestTemplateContents",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "pullRequestTemplateContents",
        ],
        "switch": "pull-request-template-contents",
        "type": "string",
      },
      Object {
        "default": "- { filename: 'README.md', contents: '# replace this' }",
        "docs": "The README setup.",
        "name": "readme",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "readme",
        ],
        "switch": "readme",
        "type": "SampleReadmeProps",
      },
      Object {
        "default": "[ \\"main\\" ]",
        "docs": "Branches which trigger a release.",
        "name": "releaseBranches",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "releaseBranches",
        ],
        "switch": "release-branches",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Automatically release new versions every commit to one of branches in \`releaseBranches\`.",
        "name": "releaseEveryCommit",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "releaseEveryCommit",
        ],
        "switch": "release-every-commit",
        "type": "boolean",
      },
      Object {
        "default": "- no scheduled releases",
        "docs": "CRON schedule to trigger new releases.",
        "name": "releaseSchedule",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "releaseSchedule",
        ],
        "switch": "release-schedule",
        "type": "string",
      },
      Object {
        "default": "false",
        "docs": "Automatically release to npm when new versions are introduced.",
        "name": "releaseToNpm",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "releaseToNpm",
        ],
        "switch": "release-to-npm",
        "type": "boolean",
      },
      Object {
        "default": "- true if not a subproject",
        "docs": "Define a GitHub workflow for releasing from \\"main\\" when new versions are bumped.",
        "name": "releaseWorkflow",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "releaseWorkflow",
        ],
        "switch": "release-workflow",
        "type": "boolean",
      },
      Object {
        "docs": "A set of workflow steps to execute in order to setup the workflow container.",
        "name": "releaseWorkflowSetupSteps",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "releaseWorkflowSetupSteps",
        ],
        "switch": "release-workflow-setup-steps",
        "type": "unknown",
      },
      Object {
        "docs": "The repository is the location where the actual code for your package lives.",
        "name": "repository",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "repository",
        ],
        "switch": "repository",
        "type": "string",
      },
      Object {
        "docs": "If the package.json for your package is not in the root directory (for example if it is part of a monorepo), you can specify the directory in which it lives.",
        "name": "repositoryDirectory",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "repositoryDirectory",
        ],
        "switch": "repository-directory",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Generate one-time sample in \`pages/\` and \`public/\` if there are no files there.",
        "name": "sampleCode",
        "optional": true,
        "parent": "NextJsProjectOptions",
        "path": Array [
          "sampleCode",
        ],
        "switch": "sample-code",
        "type": "boolean",
      },
      Object {
        "default": "{}",
        "docs": "npm scripts to include.",
        "name": "scripts",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "scripts",
        ],
        "switch": "scripts",
        "type": "unknown",
      },
      Object {
        "default": "\\"src\\"",
        "docs": "Typescript sources directory.",
        "name": "srcdir",
        "optional": true,
        "parent": "NextJsProjectOptions",
        "path": Array [
          "srcdir",
        ],
        "switch": "srcdir",
        "type": "string",
      },
      Object {
        "docs": "Package's Stability.",
        "name": "stability",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "stability",
        ],
        "switch": "stability",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Setup Tailwind CSS as a PostCSS plugin.",
        "name": "tailwind",
        "optional": true,
        "parent": "NextJsCommonProjectOptions",
        "path": Array [
          "tailwind",
        ],
        "switch": "tailwind",
        "type": "boolean",
      },
      Object {
        "default": "\\"yarn install --frozen-lockfile && yarn projen\\"",
        "docs": "Workflow steps to use in order to bootstrap this repo.",
        "name": "workflowBootstrapSteps",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "workflowBootstrapSteps",
        ],
        "switch": "workflow-bootstrap-steps",
        "type": "unknown",
      },
      Object {
        "default": "- default image",
        "docs": "Container image to use for GitHub workflows.",
        "name": "workflowContainerImage",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "workflowContainerImage",
        ],
        "switch": "workflow-container-image",
        "type": "string",
      },
      Object {
        "default": "- same as \`minNodeVersion\`",
        "docs": "The node version to use in GitHub workflows.",
        "name": "workflowNodeVersion",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "workflowNodeVersion",
        ],
        "switch": "workflow-node-version",
        "type": "string",
      },
    ],
    "pjid": "nextjs",
    "typename": "web.NextJsProject",
  },
  Object {
    "docs": "Next.js project with TypeScript.",
    "docsurl": "https://github.com/projen/projen/blob/master/API.md#projen-web.nextjstypescriptproject",
    "fqn": "projen.web.NextJsTypeScriptProject",
    "moduleName": "projen",
    "options": Array [
      Object {
        "default": "true",
        "docs": "Allow the project to include \`peerDependencies\` and \`bundledDependencies\`.",
        "name": "allowLibraryDependencies",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "allowLibraryDependencies",
        ],
        "switch": "allow-library-dependencies",
        "type": "boolean",
      },
      Object {
        "default": "true",
        "docs": "Checks that after build there are no modified files on git.",
        "name": "antitamper",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "antitamper",
        ],
        "switch": "antitamper",
        "type": "boolean",
      },
      Object {
        "default": "\\"dist\\"",
        "docs": "A directory which will contain artifacts to be published to npm.",
        "name": "artifactsDirectory",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "artifactsDirectory",
        ],
        "switch": "artifacts-directory",
        "type": "string",
      },
      Object {
        "default": "\\"public\\"",
        "docs": "Assets directory.",
        "name": "assetsdir",
        "optional": true,
        "parent": "NextJsCommonProjectOptions",
        "path": Array [
          "assetsdir",
        ],
        "switch": "assetsdir",
        "type": "string",
      },
      Object {
        "docs": "Author's e-mail.",
        "name": "authorEmail",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "authorEmail",
        ],
        "switch": "author-email",
        "type": "string",
      },
      Object {
        "docs": "Author's name.",
        "name": "authorName",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "authorName",
        ],
        "switch": "author-name",
        "type": "string",
      },
      Object {
        "docs": "Author's Organization.",
        "name": "authorOrganization",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "authorOrganization",
        ],
        "switch": "author-organization",
        "type": "boolean",
      },
      Object {
        "docs": "Author's URL / Website.",
        "name": "authorUrl",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "authorUrl",
        ],
        "switch": "author-url",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Automatically add all executables under the \`bin\` directory to your \`package.json\` file under the \`bin\` section.",
        "name": "autoDetectBin",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "autoDetectBin",
        ],
        "switch": "auto-detect-bin",
        "type": "boolean",
      },
      Object {
        "docs": "Binary programs vended with your module.",
        "name": "bin",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "bin",
        ],
        "switch": "bin",
        "type": "unknown",
      },
      Object {
        "default": "- true if not a subproject",
        "docs": "Define a GitHub workflow for building PRs.",
        "name": "buildWorkflow",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "buildWorkflow",
        ],
        "switch": "build-workflow",
        "type": "boolean",
      },
      Object {
        "docs": "List of dependencies to bundle into this module.",
        "name": "bundledDeps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "bundledDeps",
        ],
        "switch": "bundled-deps",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Add a \`clobber\` task which resets the repo to origin.",
        "name": "clobber",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "clobber",
        ],
        "switch": "clobber",
        "type": "boolean",
      },
      Object {
        "default": "false",
        "docs": "Define a GitHub workflow step for sending code coverage metrics to https://codecov.io/ Uses codecov/codecov-action@v1 A secret is required for private repos. Configured with @codeCovTokenSecret.",
        "name": "codeCov",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "codeCov",
        ],
        "switch": "code-cov",
        "type": "boolean",
      },
      Object {
        "default": "- if this option is not specified, only public repositories are supported",
        "docs": "Define the secret name for a specified https://codecov.io/ token A secret is required to send coverage for private repositories.",
        "name": "codeCovTokenSecret",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "codeCovTokenSecret",
        ],
        "switch": "code-cov-token-secret",
        "type": "string",
      },
      Object {
        "default": "- if \`testdir\` is under \`src/**\`, the default is \`true\`, otherwise the default is \`false.",
        "docs": "Compile the code before running tests.",
        "name": "compileBeforeTest",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "compileBeforeTest",
        ],
        "switch": "compile-before-test",
        "type": "boolean",
      },
      Object {
        "default": "- defaults to the value of authorName or \\"\\" if \`authorName\` is undefined.",
        "docs": "License copyright owner.",
        "name": "copyrightOwner",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "copyrightOwner",
        ],
        "switch": "copyright-owner",
        "type": "string",
      },
      Object {
        "default": "- current year",
        "docs": "The copyright years to put in the LICENSE file.",
        "name": "copyrightPeriod",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "copyrightPeriod",
        ],
        "switch": "copyright-period",
        "type": "string",
      },
      Object {
        "default": "\\"main\\"",
        "docs": "The name of the main release branch.",
        "name": "defaultReleaseBranch",
        "parent": "NodeProjectOptions",
        "path": Array [
          "defaultReleaseBranch",
        ],
        "switch": "default-release-branch",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Include dependabot configuration.",
        "name": "dependabot",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "dependabot",
        ],
        "switch": "dependabot",
        "type": "boolean",
      },
      Object {
        "default": "- default options",
        "docs": "Options for dependabot.",
        "name": "dependabotOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "dependabotOptions",
        ],
        "switch": "dependabot-options",
        "type": "DependabotOptions",
      },
      Object {
        "default": "[]",
        "docs": "Runtime dependencies of this module.",
        "name": "deps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "deps",
        ],
        "switch": "deps",
        "type": "unknown",
      },
      Object {
        "docs": "The description is just a string that helps people understand the purpose of the package.",
        "name": "description",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "description",
        ],
        "switch": "description",
        "type": "string",
      },
      Object {
        "default": "false",
        "docs": "Add a VSCode development environment (used for GitHub Codespaces).",
        "name": "devContainer",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "devContainer",
        ],
        "switch": "dev-container",
        "type": "boolean",
      },
      Object {
        "default": "[]",
        "docs": "Build dependencies for this module.",
        "name": "devDeps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "devDeps",
        ],
        "switch": "dev-deps",
        "type": "unknown",
      },
      Object {
        "default": "false",
        "docs": "Do not generate a \`tsconfig.json\` file (used by jsii projects since tsconfig.json is generated by the jsii compiler).",
        "name": "disableTsconfig",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "disableTsconfig",
        ],
        "switch": "disable-tsconfig",
        "type": "boolean",
      },
      Object {
        "default": "false",
        "docs": "Docgen by Typedoc.",
        "name": "docgen",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "docgen",
        ],
        "switch": "docgen",
        "type": "boolean",
      },
      Object {
        "default": "\\"docs\\"",
        "docs": "Docs directory.",
        "name": "docsDirectory",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "docsDirectory",
        ],
        "switch": "docs-directory",
        "type": "string",
      },
      Object {
        "default": "\\"lib/index.js\\"",
        "docs": "Module entrypoint (\`main\` in \`package.json\`).",
        "name": "entrypoint",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "entrypoint",
        ],
        "switch": "entrypoint",
        "type": "string",
      },
      Object {
        "default": "- .d.ts file derived from the project's entrypoint (usually lib/index.d.ts)",
        "docs": "The .d.ts file that includes the type declarations for this module.",
        "name": "entrypointTypes",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "entrypointTypes",
        ],
        "switch": "entrypoint-types",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Setup eslint.",
        "name": "eslint",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "eslint",
        ],
        "switch": "eslint",
        "type": "boolean",
      },
      Object {
        "default": "- opinionated default options",
        "docs": "Eslint options.",
        "name": "eslintOptions",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "eslintOptions",
        ],
        "switch": "eslint-options",
        "type": "EslintOptions",
      },
      Object {
        "docs": "Additional entries to .gitignore.",
        "name": "gitignore",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "gitignore",
        ],
        "switch": "gitignore",
        "type": "unknown",
      },
      Object {
        "default": "false",
        "docs": "Add a Gitpod development environment.",
        "name": "gitpod",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "gitpod",
        ],
        "switch": "gitpod",
        "type": "boolean",
      },
      Object {
        "docs": "Package's Homepage / Website.",
        "name": "homepage",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "homepage",
        ],
        "switch": "homepage",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Setup jest unit tests.",
        "name": "jest",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "jest",
        ],
        "switch": "jest",
        "type": "boolean",
      },
      Object {
        "default": "- default options",
        "docs": "Jest options.",
        "name": "jestOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "jestOptions",
        ],
        "switch": "jest-options",
        "type": "JestOptions",
      },
      Object {
        "default": "\\"latest\\"",
        "docs": "Version requirement of \`jsii-release\` which is used to publish modules to npm.",
        "name": "jsiiReleaseVersion",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "jsiiReleaseVersion",
        ],
        "switch": "jsii-release-version",
        "type": "string",
      },
      Object {
        "docs": "Keywords to include in \`package.json\`.",
        "name": "keywords",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "keywords",
        ],
        "switch": "keywords",
        "type": "unknown",
      },
      Object {
        "default": "\\"lib\\"",
        "docs": "Typescript  artifacts output directory.",
        "name": "libdir",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "libdir",
        ],
        "switch": "libdir",
        "type": "string",
      },
      Object {
        "default": "\\"Apache-2.0\\"",
        "docs": "License's SPDX identifier.",
        "name": "license",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "license",
        ],
        "switch": "license",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Indicates if a license should be added.",
        "name": "licensed",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "licensed",
        ],
        "switch": "licensed",
        "type": "boolean",
      },
      Object {
        "default": "{}",
        "docs": "Configure logging options such as verbosity.",
        "name": "logging",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "logging",
        ],
        "switch": "logging",
        "type": "LoggerOptions",
      },
      Object {
        "default": "- no max",
        "docs": "Minimum node.js version to require via \`engines\` (inclusive).",
        "name": "maxNodeVersion",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "maxNodeVersion",
        ],
        "switch": "max-node-version",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Whether mergify should be enabled on this repository or not.",
        "name": "mergify",
        "optional": true,
        "parent": "GitHubOptions",
        "path": Array [
          "mergify",
        ],
        "switch": "mergify",
        "type": "boolean",
      },
      Object {
        "default": "\\"auto-merge\\"",
        "docs": "Automatically merge PRs that build successfully and have this label.",
        "name": "mergifyAutoMergeLabel",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "mergifyAutoMergeLabel",
        ],
        "switch": "mergify-auto-merge-label",
        "type": "string",
      },
      Object {
        "default": "- default options",
        "docs": "Options for mergify.",
        "name": "mergifyOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "mergifyOptions",
        ],
        "switch": "mergify-options",
        "type": "MergifyOptions",
      },
      Object {
        "default": "- no \\"engines\\" specified",
        "docs": "Minimum Node.js version to require via package.json \`engines\` (inclusive).",
        "name": "minNodeVersion",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "minNodeVersion",
        ],
        "switch": "min-node-version",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Automatically update files modified during builds to pull-request branches.",
        "name": "mutableBuild",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "mutableBuild",
        ],
        "switch": "mutable-build",
        "type": "boolean",
      },
      Object {
        "default": "$BASEDIR",
        "docs": "This is the name of your project.",
        "name": "name",
        "parent": "ProjectOptions",
        "path": Array [
          "name",
        ],
        "switch": "name",
        "type": "string",
      },
      Object {
        "default": "- for scoped packages (e.g. \`foo@bar\`), the default is
\`NpmAccess.RESTRICTED\`, for non-scoped packages, the default is
\`NpmAccess.PUBLIC\`.",
        "docs": "Access level of the npm package.",
        "name": "npmAccess",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "npmAccess",
        ],
        "switch": "npm-access",
        "type": "NpmAccess",
      },
      Object {
        "default": "\\"latest\\"",
        "docs": "Tags can be used to provide an alias instead of version numbers.",
        "name": "npmDistTag",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "npmDistTag",
        ],
        "switch": "npm-dist-tag",
        "type": "string",
      },
      Object {
        "docs": "Additional entries to .npmignore.",
        "name": "npmignore",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "npmignore",
        ],
        "switch": "npmignore",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Defines an .npmignore file. Normally this is only needed for libraries that are packaged as tarballs.",
        "name": "npmignoreEnabled",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "npmignoreEnabled",
        ],
        "switch": "npmignore-enabled",
        "type": "boolean",
      },
      Object {
        "deprecated": true,
        "docs": "The host name of the npm registry to publish to.",
        "name": "npmRegistry",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "npmRegistry",
        ],
        "switch": "npm-registry",
        "type": "string",
      },
      Object {
        "default": "\\"https://registry.npmjs.org\\"",
        "docs": "The base URL of the npm package registry.",
        "name": "npmRegistryUrl",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "npmRegistryUrl",
        ],
        "switch": "npm-registry-url",
        "type": "string",
      },
      Object {
        "default": "NpmTaskExecution.PROJEN",
        "docs": "Determines how tasks are executed when invoked as npm scripts (yarn/npm run xyz).",
        "name": "npmTaskExecution",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "npmTaskExecution",
        ],
        "switch": "npm-task-execution",
        "type": "NpmTaskExecution",
      },
      Object {
        "default": "\\"NPM_TOKEN\\"",
        "docs": "GitHub secret which contains the NPM token to use when publishing packages.",
        "name": "npmTokenSecret",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "npmTokenSecret",
        ],
        "switch": "npm-token-secret",
        "type": "string",
      },
      Object {
        "default": "\\".\\"",
        "docs": "The root directory of the project.",
        "name": "outdir",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "outdir",
        ],
        "switch": "outdir",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Defines a \`yarn package\` command that will produce a tarball and place it under \`dist/js\`.",
        "name": "package",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "package",
        ],
        "switch": "package",
        "type": "boolean",
      },
      Object {
        "default": "NodePackageManager.YARN",
        "docs": "The Node Package Manager used to execute scripts.",
        "name": "packageManager",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "packageManager",
        ],
        "switch": "package-manager",
        "type": "NodePackageManager",
      },
      Object {
        "default": "- defaults to project name",
        "docs": "The \\"name\\" in package.json.",
        "name": "packageName",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "packageName",
        ],
        "switch": "package-name",
        "type": "string",
      },
      Object {
        "docs": "The parent project, if this project is part of a bigger project.",
        "name": "parent",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "parent",
        ],
        "switch": "parent",
        "type": "Project",
      },
      Object {
        "docs": "Options for \`peerDeps\`.",
        "name": "peerDependencyOptions",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "peerDependencyOptions",
        ],
        "switch": "peer-dependency-options",
        "type": "PeerDependencyOptions",
      },
      Object {
        "default": "[]",
        "docs": "Peer dependencies for this module.",
        "name": "peerDeps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "peerDeps",
        ],
        "switch": "peer-deps",
        "type": "unknown",
      },
      Object {
        "default": "ProjectType.UNKNOWN",
        "docs": "Which type of project this is (library/app).",
        "name": "projectType",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "projectType",
        ],
        "switch": "project-type",
        "type": "ProjectType",
      },
      Object {
        "default": "\\"npx projen\\"",
        "docs": "The shell command to use in order to run the projen CLI.",
        "name": "projenCommand",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "projenCommand",
        ],
        "switch": "projen-command",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Indicates of \\"projen\\" should be installed as a devDependency.",
        "name": "projenDevDependency",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenDevDependency",
        ],
        "switch": "projen-dev-dependency",
        "type": "boolean",
      },
      Object {
        "default": "true",
        "docs": "Execute \`projen\` as the first step of the \`build\` task to synthesize project files.",
        "name": "projenDuringBuild",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenDuringBuild",
        ],
        "switch": "projen-during-build",
        "type": "boolean",
      },
      Object {
        "default": "true",
        "docs": "Generate (once) .projenrc.js (in JavaScript). Set to \`false\` in order to disable .projenrc.js generation.",
        "name": "projenrcJs",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenrcJs",
        ],
        "switch": "projenrc-js",
        "type": "boolean",
      },
      Object {
        "default": "- default options",
        "docs": "Options for .projenrc.js.",
        "name": "projenrcJsOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenrcJsOptions",
        ],
        "switch": "projenrc-js-options",
        "type": "ProjenrcOptions",
      },
      Object {
        "default": "false",
        "docs": "Use TypeScript for your projenrc file (\`.projenrc.ts\`).",
        "name": "projenrcTs",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "projenrcTs",
        ],
        "switch": "projenrc-ts",
        "type": "boolean",
      },
      Object {
        "docs": "Options for .projenrc.ts.",
        "name": "projenrcTsOptions",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "projenrcTsOptions",
        ],
        "switch": "projenrc-ts-options",
        "type": "ProjenrcOptions",
      },
      Object {
        "default": "- \\"true\\" if mergify auto-merge is enabled (default)",
        "docs": "Automatically merge projen upgrade PRs when build passes.",
        "name": "projenUpgradeAutoMerge",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenUpgradeAutoMerge",
        ],
        "switch": "projen-upgrade-auto-merge",
        "type": "boolean",
      },
      Object {
        "default": "[ \\"0 6 * * *\\" ]",
        "docs": "Customize the projenUpgrade schedule in cron expression.",
        "name": "projenUpgradeSchedule",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenUpgradeSchedule",
        ],
        "switch": "projen-upgrade-schedule",
        "type": "unknown",
      },
      Object {
        "default": "- no automatic projen upgrade pull requests",
        "docs": "Periodically submits a pull request for projen upgrades (executes \`yarn projen:upgrade\`).",
        "name": "projenUpgradeSecret",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenUpgradeSecret",
        ],
        "switch": "projen-upgrade-secret",
        "type": "string",
      },
      Object {
        "default": "- Defaults to the latest version.",
        "docs": "Version of projen to install.",
        "name": "projenVersion",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenVersion",
        ],
        "switch": "projen-version",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Include a GitHub pull request template.",
        "name": "pullRequestTemplate",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "pullRequestTemplate",
        ],
        "switch": "pull-request-template",
        "type": "boolean",
      },
      Object {
        "default": "- default content",
        "docs": "The contents of the pull request template.",
        "name": "pullRequestTemplateContents",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "pullRequestTemplateContents",
        ],
        "switch": "pull-request-template-contents",
        "type": "string",
      },
      Object {
        "default": "- { filename: 'README.md', contents: '# replace this' }",
        "docs": "The README setup.",
        "name": "readme",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "readme",
        ],
        "switch": "readme",
        "type": "SampleReadmeProps",
      },
      Object {
        "default": "[ \\"main\\" ]",
        "docs": "Branches which trigger a release.",
        "name": "releaseBranches",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "releaseBranches",
        ],
        "switch": "release-branches",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Automatically release new versions every commit to one of branches in \`releaseBranches\`.",
        "name": "releaseEveryCommit",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "releaseEveryCommit",
        ],
        "switch": "release-every-commit",
        "type": "boolean",
      },
      Object {
        "default": "- no scheduled releases",
        "docs": "CRON schedule to trigger new releases.",
        "name": "releaseSchedule",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "releaseSchedule",
        ],
        "switch": "release-schedule",
        "type": "string",
      },
      Object {
        "default": "false",
        "docs": "Automatically release to npm when new versions are introduced.",
        "name": "releaseToNpm",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "releaseToNpm",
        ],
        "switch": "release-to-npm",
        "type": "boolean",
      },
      Object {
        "default": "- true if not a subproject",
        "docs": "Define a GitHub workflow for releasing from \\"main\\" when new versions are bumped.",
        "name": "releaseWorkflow",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "releaseWorkflow",
        ],
        "switch": "release-workflow",
        "type": "boolean",
      },
      Object {
        "docs": "A set of workflow steps to execute in order to setup the workflow container.",
        "name": "releaseWorkflowSetupSteps",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "releaseWorkflowSetupSteps",
        ],
        "switch": "release-workflow-setup-steps",
        "type": "unknown",
      },
      Object {
        "docs": "The repository is the location where the actual code for your package lives.",
        "name": "repository",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "repository",
        ],
        "switch": "repository",
        "type": "string",
      },
      Object {
        "docs": "If the package.json for your package is not in the root directory (for example if it is part of a monorepo), you can specify the directory in which it lives.",
        "name": "repositoryDirectory",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "repositoryDirectory",
        ],
        "switch": "repository-directory",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Generate one-time sample in \`src/\` and \`test/\` if there are no files there.",
        "name": "sampleCode",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "sampleCode",
        ],
        "switch": "sample-code",
        "type": "boolean",
      },
      Object {
        "default": "{}",
        "docs": "npm scripts to include.",
        "name": "scripts",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "scripts",
        ],
        "switch": "scripts",
        "type": "unknown",
      },
      Object {
        "default": "\\"src\\"",
        "docs": "Typescript sources directory.",
        "name": "srcdir",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "srcdir",
        ],
        "switch": "srcdir",
        "type": "string",
      },
      Object {
        "docs": "Package's Stability.",
        "name": "stability",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "stability",
        ],
        "switch": "stability",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Setup Tailwind CSS as a PostCSS plugin.",
        "name": "tailwind",
        "optional": true,
        "parent": "NextJsCommonProjectOptions",
        "path": Array [
          "tailwind",
        ],
        "switch": "tailwind",
        "type": "boolean",
      },
      Object {
        "default": "\\"test\\"",
        "docs": "Jest tests directory. Tests files should be named \`xxx.test.ts\`.",
        "name": "testdir",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "testdir",
        ],
        "switch": "testdir",
        "type": "string",
      },
      Object {
        "docs": "Custom TSConfig.",
        "name": "tsconfig",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "tsconfig",
        ],
        "switch": "tsconfig",
        "type": "TypescriptConfigOptions",
      },
      Object {
        "default": "\\"latest\\"",
        "docs": "TypeScript version to use.",
        "name": "typescriptVersion",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "typescriptVersion",
        ],
        "switch": "typescript-version",
        "type": "string",
      },
      Object {
        "default": "\\"yarn install --frozen-lockfile && yarn projen\\"",
        "docs": "Workflow steps to use in order to bootstrap this repo.",
        "name": "workflowBootstrapSteps",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "workflowBootstrapSteps",
        ],
        "switch": "workflow-bootstrap-steps",
        "type": "unknown",
      },
      Object {
        "default": "- default image",
        "docs": "Container image to use for GitHub workflows.",
        "name": "workflowContainerImage",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "workflowContainerImage",
        ],
        "switch": "workflow-container-image",
        "type": "string",
      },
      Object {
        "default": "- same as \`minNodeVersion\`",
        "docs": "The node version to use in GitHub workflows.",
        "name": "workflowNodeVersion",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "workflowNodeVersion",
        ],
        "switch": "workflow-node-version",
        "type": "string",
      },
    ],
    "pjid": "nextjs-ts",
    "typename": "web.NextJsTypeScriptProject",
  },
  Object {
    "docs": "Node.js project.",
    "docsurl": "https://github.com/projen/projen/blob/master/API.md#projen-nodeproject",
    "fqn": "projen.NodeProject",
    "moduleName": "projen",
    "options": Array [
      Object {
        "default": "true",
        "docs": "Allow the project to include \`peerDependencies\` and \`bundledDependencies\`.",
        "name": "allowLibraryDependencies",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "allowLibraryDependencies",
        ],
        "switch": "allow-library-dependencies",
        "type": "boolean",
      },
      Object {
        "default": "true",
        "docs": "Checks that after build there are no modified files on git.",
        "name": "antitamper",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "antitamper",
        ],
        "switch": "antitamper",
        "type": "boolean",
      },
      Object {
        "default": "\\"dist\\"",
        "docs": "A directory which will contain artifacts to be published to npm.",
        "name": "artifactsDirectory",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "artifactsDirectory",
        ],
        "switch": "artifacts-directory",
        "type": "string",
      },
      Object {
        "docs": "Author's e-mail.",
        "name": "authorEmail",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "authorEmail",
        ],
        "switch": "author-email",
        "type": "string",
      },
      Object {
        "docs": "Author's name.",
        "name": "authorName",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "authorName",
        ],
        "switch": "author-name",
        "type": "string",
      },
      Object {
        "docs": "Author's Organization.",
        "name": "authorOrganization",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "authorOrganization",
        ],
        "switch": "author-organization",
        "type": "boolean",
      },
      Object {
        "docs": "Author's URL / Website.",
        "name": "authorUrl",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "authorUrl",
        ],
        "switch": "author-url",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Automatically add all executables under the \`bin\` directory to your \`package.json\` file under the \`bin\` section.",
        "name": "autoDetectBin",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "autoDetectBin",
        ],
        "switch": "auto-detect-bin",
        "type": "boolean",
      },
      Object {
        "docs": "Binary programs vended with your module.",
        "name": "bin",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "bin",
        ],
        "switch": "bin",
        "type": "unknown",
      },
      Object {
        "default": "- true if not a subproject",
        "docs": "Define a GitHub workflow for building PRs.",
        "name": "buildWorkflow",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "buildWorkflow",
        ],
        "switch": "build-workflow",
        "type": "boolean",
      },
      Object {
        "docs": "List of dependencies to bundle into this module.",
        "name": "bundledDeps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "bundledDeps",
        ],
        "switch": "bundled-deps",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Add a \`clobber\` task which resets the repo to origin.",
        "name": "clobber",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "clobber",
        ],
        "switch": "clobber",
        "type": "boolean",
      },
      Object {
        "default": "false",
        "docs": "Define a GitHub workflow step for sending code coverage metrics to https://codecov.io/ Uses codecov/codecov-action@v1 A secret is required for private repos. Configured with @codeCovTokenSecret.",
        "name": "codeCov",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "codeCov",
        ],
        "switch": "code-cov",
        "type": "boolean",
      },
      Object {
        "default": "- if this option is not specified, only public repositories are supported",
        "docs": "Define the secret name for a specified https://codecov.io/ token A secret is required to send coverage for private repositories.",
        "name": "codeCovTokenSecret",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "codeCovTokenSecret",
        ],
        "switch": "code-cov-token-secret",
        "type": "string",
      },
      Object {
        "default": "- defaults to the value of authorName or \\"\\" if \`authorName\` is undefined.",
        "docs": "License copyright owner.",
        "name": "copyrightOwner",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "copyrightOwner",
        ],
        "switch": "copyright-owner",
        "type": "string",
      },
      Object {
        "default": "- current year",
        "docs": "The copyright years to put in the LICENSE file.",
        "name": "copyrightPeriod",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "copyrightPeriod",
        ],
        "switch": "copyright-period",
        "type": "string",
      },
      Object {
        "default": "\\"main\\"",
        "docs": "The name of the main release branch.",
        "name": "defaultReleaseBranch",
        "parent": "NodeProjectOptions",
        "path": Array [
          "defaultReleaseBranch",
        ],
        "switch": "default-release-branch",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Include dependabot configuration.",
        "name": "dependabot",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "dependabot",
        ],
        "switch": "dependabot",
        "type": "boolean",
      },
      Object {
        "default": "- default options",
        "docs": "Options for dependabot.",
        "name": "dependabotOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "dependabotOptions",
        ],
        "switch": "dependabot-options",
        "type": "DependabotOptions",
      },
      Object {
        "default": "[]",
        "docs": "Runtime dependencies of this module.",
        "name": "deps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "deps",
        ],
        "switch": "deps",
        "type": "unknown",
      },
      Object {
        "docs": "The description is just a string that helps people understand the purpose of the package.",
        "name": "description",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "description",
        ],
        "switch": "description",
        "type": "string",
      },
      Object {
        "default": "false",
        "docs": "Add a VSCode development environment (used for GitHub Codespaces).",
        "name": "devContainer",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "devContainer",
        ],
        "switch": "dev-container",
        "type": "boolean",
      },
      Object {
        "default": "[]",
        "docs": "Build dependencies for this module.",
        "name": "devDeps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "devDeps",
        ],
        "switch": "dev-deps",
        "type": "unknown",
      },
      Object {
        "default": "\\"lib/index.js\\"",
        "docs": "Module entrypoint (\`main\` in \`package.json\`).",
        "name": "entrypoint",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "entrypoint",
        ],
        "switch": "entrypoint",
        "type": "string",
      },
      Object {
        "docs": "Additional entries to .gitignore.",
        "name": "gitignore",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "gitignore",
        ],
        "switch": "gitignore",
        "type": "unknown",
      },
      Object {
        "default": "false",
        "docs": "Add a Gitpod development environment.",
        "name": "gitpod",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "gitpod",
        ],
        "switch": "gitpod",
        "type": "boolean",
      },
      Object {
        "docs": "Package's Homepage / Website.",
        "name": "homepage",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "homepage",
        ],
        "switch": "homepage",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Setup jest unit tests.",
        "name": "jest",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "jest",
        ],
        "switch": "jest",
        "type": "boolean",
      },
      Object {
        "default": "- default options",
        "docs": "Jest options.",
        "name": "jestOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "jestOptions",
        ],
        "switch": "jest-options",
        "type": "JestOptions",
      },
      Object {
        "default": "\\"latest\\"",
        "docs": "Version requirement of \`jsii-release\` which is used to publish modules to npm.",
        "name": "jsiiReleaseVersion",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "jsiiReleaseVersion",
        ],
        "switch": "jsii-release-version",
        "type": "string",
      },
      Object {
        "docs": "Keywords to include in \`package.json\`.",
        "name": "keywords",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "keywords",
        ],
        "switch": "keywords",
        "type": "unknown",
      },
      Object {
        "default": "\\"Apache-2.0\\"",
        "docs": "License's SPDX identifier.",
        "name": "license",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "license",
        ],
        "switch": "license",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Indicates if a license should be added.",
        "name": "licensed",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "licensed",
        ],
        "switch": "licensed",
        "type": "boolean",
      },
      Object {
        "default": "{}",
        "docs": "Configure logging options such as verbosity.",
        "name": "logging",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "logging",
        ],
        "switch": "logging",
        "type": "LoggerOptions",
      },
      Object {
        "default": "- no max",
        "docs": "Minimum node.js version to require via \`engines\` (inclusive).",
        "name": "maxNodeVersion",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "maxNodeVersion",
        ],
        "switch": "max-node-version",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Whether mergify should be enabled on this repository or not.",
        "name": "mergify",
        "optional": true,
        "parent": "GitHubOptions",
        "path": Array [
          "mergify",
        ],
        "switch": "mergify",
        "type": "boolean",
      },
      Object {
        "default": "\\"auto-merge\\"",
        "docs": "Automatically merge PRs that build successfully and have this label.",
        "name": "mergifyAutoMergeLabel",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "mergifyAutoMergeLabel",
        ],
        "switch": "mergify-auto-merge-label",
        "type": "string",
      },
      Object {
        "default": "- default options",
        "docs": "Options for mergify.",
        "name": "mergifyOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "mergifyOptions",
        ],
        "switch": "mergify-options",
        "type": "MergifyOptions",
      },
      Object {
        "default": "- no \\"engines\\" specified",
        "docs": "Minimum Node.js version to require via package.json \`engines\` (inclusive).",
        "name": "minNodeVersion",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "minNodeVersion",
        ],
        "switch": "min-node-version",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Automatically update files modified during builds to pull-request branches.",
        "name": "mutableBuild",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "mutableBuild",
        ],
        "switch": "mutable-build",
        "type": "boolean",
      },
      Object {
        "default": "$BASEDIR",
        "docs": "This is the name of your project.",
        "name": "name",
        "parent": "ProjectOptions",
        "path": Array [
          "name",
        ],
        "switch": "name",
        "type": "string",
      },
      Object {
        "default": "- for scoped packages (e.g. \`foo@bar\`), the default is
\`NpmAccess.RESTRICTED\`, for non-scoped packages, the default is
\`NpmAccess.PUBLIC\`.",
        "docs": "Access level of the npm package.",
        "name": "npmAccess",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "npmAccess",
        ],
        "switch": "npm-access",
        "type": "NpmAccess",
      },
      Object {
        "default": "\\"latest\\"",
        "docs": "Tags can be used to provide an alias instead of version numbers.",
        "name": "npmDistTag",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "npmDistTag",
        ],
        "switch": "npm-dist-tag",
        "type": "string",
      },
      Object {
        "docs": "Additional entries to .npmignore.",
        "name": "npmignore",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "npmignore",
        ],
        "switch": "npmignore",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Defines an .npmignore file. Normally this is only needed for libraries that are packaged as tarballs.",
        "name": "npmignoreEnabled",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "npmignoreEnabled",
        ],
        "switch": "npmignore-enabled",
        "type": "boolean",
      },
      Object {
        "deprecated": true,
        "docs": "The host name of the npm registry to publish to.",
        "name": "npmRegistry",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "npmRegistry",
        ],
        "switch": "npm-registry",
        "type": "string",
      },
      Object {
        "default": "\\"https://registry.npmjs.org\\"",
        "docs": "The base URL of the npm package registry.",
        "name": "npmRegistryUrl",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "npmRegistryUrl",
        ],
        "switch": "npm-registry-url",
        "type": "string",
      },
      Object {
        "default": "NpmTaskExecution.PROJEN",
        "docs": "Determines how tasks are executed when invoked as npm scripts (yarn/npm run xyz).",
        "name": "npmTaskExecution",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "npmTaskExecution",
        ],
        "switch": "npm-task-execution",
        "type": "NpmTaskExecution",
      },
      Object {
        "default": "\\"NPM_TOKEN\\"",
        "docs": "GitHub secret which contains the NPM token to use when publishing packages.",
        "name": "npmTokenSecret",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "npmTokenSecret",
        ],
        "switch": "npm-token-secret",
        "type": "string",
      },
      Object {
        "default": "\\".\\"",
        "docs": "The root directory of the project.",
        "name": "outdir",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "outdir",
        ],
        "switch": "outdir",
        "type": "string",
      },
      Object {
        "default": "NodePackageManager.YARN",
        "docs": "The Node Package Manager used to execute scripts.",
        "name": "packageManager",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "packageManager",
        ],
        "switch": "package-manager",
        "type": "NodePackageManager",
      },
      Object {
        "default": "- defaults to project name",
        "docs": "The \\"name\\" in package.json.",
        "name": "packageName",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "packageName",
        ],
        "switch": "package-name",
        "type": "string",
      },
      Object {
        "docs": "The parent project, if this project is part of a bigger project.",
        "name": "parent",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "parent",
        ],
        "switch": "parent",
        "type": "Project",
      },
      Object {
        "docs": "Options for \`peerDeps\`.",
        "name": "peerDependencyOptions",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "peerDependencyOptions",
        ],
        "switch": "peer-dependency-options",
        "type": "PeerDependencyOptions",
      },
      Object {
        "default": "[]",
        "docs": "Peer dependencies for this module.",
        "name": "peerDeps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "peerDeps",
        ],
        "switch": "peer-deps",
        "type": "unknown",
      },
      Object {
        "default": "ProjectType.UNKNOWN",
        "docs": "Which type of project this is (library/app).",
        "name": "projectType",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "projectType",
        ],
        "switch": "project-type",
        "type": "ProjectType",
      },
      Object {
        "default": "\\"npx projen\\"",
        "docs": "The shell command to use in order to run the projen CLI.",
        "name": "projenCommand",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "projenCommand",
        ],
        "switch": "projen-command",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Indicates of \\"projen\\" should be installed as a devDependency.",
        "name": "projenDevDependency",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenDevDependency",
        ],
        "switch": "projen-dev-dependency",
        "type": "boolean",
      },
      Object {
        "default": "true",
        "docs": "Execute \`projen\` as the first step of the \`build\` task to synthesize project files.",
        "name": "projenDuringBuild",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenDuringBuild",
        ],
        "switch": "projen-during-build",
        "type": "boolean",
      },
      Object {
        "default": "true",
        "docs": "Generate (once) .projenrc.js (in JavaScript). Set to \`false\` in order to disable .projenrc.js generation.",
        "name": "projenrcJs",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenrcJs",
        ],
        "switch": "projenrc-js",
        "type": "boolean",
      },
      Object {
        "default": "- default options",
        "docs": "Options for .projenrc.js.",
        "name": "projenrcJsOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenrcJsOptions",
        ],
        "switch": "projenrc-js-options",
        "type": "ProjenrcOptions",
      },
      Object {
        "default": "- \\"true\\" if mergify auto-merge is enabled (default)",
        "docs": "Automatically merge projen upgrade PRs when build passes.",
        "name": "projenUpgradeAutoMerge",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenUpgradeAutoMerge",
        ],
        "switch": "projen-upgrade-auto-merge",
        "type": "boolean",
      },
      Object {
        "default": "[ \\"0 6 * * *\\" ]",
        "docs": "Customize the projenUpgrade schedule in cron expression.",
        "name": "projenUpgradeSchedule",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenUpgradeSchedule",
        ],
        "switch": "projen-upgrade-schedule",
        "type": "unknown",
      },
      Object {
        "default": "- no automatic projen upgrade pull requests",
        "docs": "Periodically submits a pull request for projen upgrades (executes \`yarn projen:upgrade\`).",
        "name": "projenUpgradeSecret",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenUpgradeSecret",
        ],
        "switch": "projen-upgrade-secret",
        "type": "string",
      },
      Object {
        "default": "- Defaults to the latest version.",
        "docs": "Version of projen to install.",
        "name": "projenVersion",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenVersion",
        ],
        "switch": "projen-version",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Include a GitHub pull request template.",
        "name": "pullRequestTemplate",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "pullRequestTemplate",
        ],
        "switch": "pull-request-template",
        "type": "boolean",
      },
      Object {
        "default": "- default content",
        "docs": "The contents of the pull request template.",
        "name": "pullRequestTemplateContents",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "pullRequestTemplateContents",
        ],
        "switch": "pull-request-template-contents",
        "type": "string",
      },
      Object {
        "default": "- { filename: 'README.md', contents: '# replace this' }",
        "docs": "The README setup.",
        "name": "readme",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "readme",
        ],
        "switch": "readme",
        "type": "SampleReadmeProps",
      },
      Object {
        "default": "[ \\"main\\" ]",
        "docs": "Branches which trigger a release.",
        "name": "releaseBranches",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "releaseBranches",
        ],
        "switch": "release-branches",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Automatically release new versions every commit to one of branches in \`releaseBranches\`.",
        "name": "releaseEveryCommit",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "releaseEveryCommit",
        ],
        "switch": "release-every-commit",
        "type": "boolean",
      },
      Object {
        "default": "- no scheduled releases",
        "docs": "CRON schedule to trigger new releases.",
        "name": "releaseSchedule",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "releaseSchedule",
        ],
        "switch": "release-schedule",
        "type": "string",
      },
      Object {
        "default": "false",
        "docs": "Automatically release to npm when new versions are introduced.",
        "name": "releaseToNpm",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "releaseToNpm",
        ],
        "switch": "release-to-npm",
        "type": "boolean",
      },
      Object {
        "default": "- true if not a subproject",
        "docs": "Define a GitHub workflow for releasing from \\"main\\" when new versions are bumped.",
        "name": "releaseWorkflow",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "releaseWorkflow",
        ],
        "switch": "release-workflow",
        "type": "boolean",
      },
      Object {
        "docs": "A set of workflow steps to execute in order to setup the workflow container.",
        "name": "releaseWorkflowSetupSteps",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "releaseWorkflowSetupSteps",
        ],
        "switch": "release-workflow-setup-steps",
        "type": "unknown",
      },
      Object {
        "docs": "The repository is the location where the actual code for your package lives.",
        "name": "repository",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "repository",
        ],
        "switch": "repository",
        "type": "string",
      },
      Object {
        "docs": "If the package.json for your package is not in the root directory (for example if it is part of a monorepo), you can specify the directory in which it lives.",
        "name": "repositoryDirectory",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "repositoryDirectory",
        ],
        "switch": "repository-directory",
        "type": "string",
      },
      Object {
        "default": "{}",
        "docs": "npm scripts to include.",
        "name": "scripts",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "scripts",
        ],
        "switch": "scripts",
        "type": "unknown",
      },
      Object {
        "docs": "Package's Stability.",
        "name": "stability",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "stability",
        ],
        "switch": "stability",
        "type": "string",
      },
      Object {
        "default": "\\"yarn install --frozen-lockfile && yarn projen\\"",
        "docs": "Workflow steps to use in order to bootstrap this repo.",
        "name": "workflowBootstrapSteps",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "workflowBootstrapSteps",
        ],
        "switch": "workflow-bootstrap-steps",
        "type": "unknown",
      },
      Object {
        "default": "- default image",
        "docs": "Container image to use for GitHub workflows.",
        "name": "workflowContainerImage",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "workflowContainerImage",
        ],
        "switch": "workflow-container-image",
        "type": "string",
      },
      Object {
        "default": "- same as \`minNodeVersion\`",
        "docs": "The node version to use in GitHub workflows.",
        "name": "workflowNodeVersion",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "workflowNodeVersion",
        ],
        "switch": "workflow-node-version",
        "type": "string",
      },
    ],
    "pjid": "node",
    "typename": "NodeProject",
  },
  Object {
    "docs": "Base project.",
    "docsurl": "https://github.com/projen/projen/blob/master/API.md#projen-project",
    "fqn": "projen.Project",
    "moduleName": "projen",
    "options": Array [
      Object {
        "default": "true",
        "docs": "Add a \`clobber\` task which resets the repo to origin.",
        "name": "clobber",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "clobber",
        ],
        "switch": "clobber",
        "type": "boolean",
      },
      Object {
        "default": "false",
        "docs": "Add a VSCode development environment (used for GitHub Codespaces).",
        "name": "devContainer",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "devContainer",
        ],
        "switch": "dev-container",
        "type": "boolean",
      },
      Object {
        "default": "false",
        "docs": "Add a Gitpod development environment.",
        "name": "gitpod",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "gitpod",
        ],
        "switch": "gitpod",
        "type": "boolean",
      },
      Object {
        "default": "{}",
        "docs": "Configure logging options such as verbosity.",
        "name": "logging",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "logging",
        ],
        "switch": "logging",
        "type": "LoggerOptions",
      },
      Object {
        "default": "true",
        "docs": "Whether mergify should be enabled on this repository or not.",
        "name": "mergify",
        "optional": true,
        "parent": "GitHubOptions",
        "path": Array [
          "mergify",
        ],
        "switch": "mergify",
        "type": "boolean",
      },
      Object {
        "default": "$BASEDIR",
        "docs": "This is the name of your project.",
        "name": "name",
        "parent": "ProjectOptions",
        "path": Array [
          "name",
        ],
        "switch": "name",
        "type": "string",
      },
      Object {
        "default": "\\".\\"",
        "docs": "The root directory of the project.",
        "name": "outdir",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "outdir",
        ],
        "switch": "outdir",
        "type": "string",
      },
      Object {
        "docs": "The parent project, if this project is part of a bigger project.",
        "name": "parent",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "parent",
        ],
        "switch": "parent",
        "type": "Project",
      },
      Object {
        "default": "ProjectType.UNKNOWN",
        "docs": "Which type of project this is (library/app).",
        "name": "projectType",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "projectType",
        ],
        "switch": "project-type",
        "type": "ProjectType",
      },
      Object {
        "default": "- { filename: 'README.md', contents: '# replace this' }",
        "docs": "The README setup.",
        "name": "readme",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "readme",
        ],
        "switch": "readme",
        "type": "SampleReadmeProps",
      },
    ],
    "pjid": "project",
    "typename": "Project",
  },
  Object {
    "docs": "Python project.",
    "docsurl": "https://github.com/projen/projen/blob/master/API.md#projen-python.pythonproject",
    "fqn": "projen.python.PythonProject",
    "moduleName": "projen",
    "options": Array [
      Object {
        "default": "$GIT_USER_EMAIL",
        "docs": "Author's e-mail.",
        "name": "authorEmail",
        "parent": "PythonPackagingOptions",
        "path": Array [
          "authorEmail",
        ],
        "switch": "author-email",
        "type": "string",
      },
      Object {
        "default": "$GIT_USER_NAME",
        "docs": "Author's name.",
        "name": "authorName",
        "parent": "PythonPackagingOptions",
        "path": Array [
          "authorName",
        ],
        "switch": "author-name",
        "type": "string",
      },
      Object {
        "docs": "A list of PyPI trove classifiers that describe the project.",
        "name": "classifiers",
        "optional": true,
        "parent": "PythonPackagingOptions",
        "path": Array [
          "classifiers",
        ],
        "switch": "classifiers",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Add a \`clobber\` task which resets the repo to origin.",
        "name": "clobber",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "clobber",
        ],
        "switch": "clobber",
        "type": "boolean",
      },
      Object {
        "default": "[]",
        "docs": "List of runtime dependencies for this project.",
        "name": "deps",
        "optional": true,
        "parent": "PythonProjectOptions",
        "path": Array [
          "deps",
        ],
        "switch": "deps",
        "type": "unknown",
      },
      Object {
        "docs": "A short description of the package.",
        "name": "description",
        "optional": true,
        "parent": "PythonPackagingOptions",
        "path": Array [
          "description",
        ],
        "switch": "description",
        "type": "string",
      },
      Object {
        "default": "false",
        "docs": "Add a VSCode development environment (used for GitHub Codespaces).",
        "name": "devContainer",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "devContainer",
        ],
        "switch": "dev-container",
        "type": "boolean",
      },
      Object {
        "default": "[]",
        "docs": "List of dev dependencies for this project.",
        "name": "devDeps",
        "optional": true,
        "parent": "PythonProjectOptions",
        "path": Array [
          "devDeps",
        ],
        "switch": "dev-deps",
        "type": "unknown",
      },
      Object {
        "default": "false",
        "docs": "Add a Gitpod development environment.",
        "name": "gitpod",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "gitpod",
        ],
        "switch": "gitpod",
        "type": "boolean",
      },
      Object {
        "docs": "A URL to the website of the project.",
        "name": "homepage",
        "optional": true,
        "parent": "PythonPackagingOptions",
        "path": Array [
          "homepage",
        ],
        "switch": "homepage",
        "type": "string",
      },
      Object {
        "docs": "License of this package as an SPDX identifier.",
        "name": "license",
        "optional": true,
        "parent": "PythonPackagingOptions",
        "path": Array [
          "license",
        ],
        "switch": "license",
        "type": "string",
      },
      Object {
        "default": "{}",
        "docs": "Configure logging options such as verbosity.",
        "name": "logging",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "logging",
        ],
        "switch": "logging",
        "type": "LoggerOptions",
      },
      Object {
        "default": "true",
        "docs": "Whether mergify should be enabled on this repository or not.",
        "name": "mergify",
        "optional": true,
        "parent": "GitHubOptions",
        "path": Array [
          "mergify",
        ],
        "switch": "mergify",
        "type": "boolean",
      },
      Object {
        "default": "$PYTHON_MODULE_NAME",
        "docs": "Name of the python package as used in imports and filenames.",
        "name": "moduleName",
        "parent": "PythonProjectOptions",
        "path": Array [
          "moduleName",
        ],
        "switch": "module-name",
        "type": "string",
      },
      Object {
        "default": "$BASEDIR",
        "docs": "This is the name of your project.",
        "name": "name",
        "parent": "ProjectOptions",
        "path": Array [
          "name",
        ],
        "switch": "name",
        "type": "string",
      },
      Object {
        "default": "\\".\\"",
        "docs": "The root directory of the project.",
        "name": "outdir",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "outdir",
        ],
        "switch": "outdir",
        "type": "string",
      },
      Object {
        "docs": "The parent project, if this project is part of a bigger project.",
        "name": "parent",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "parent",
        ],
        "switch": "parent",
        "type": "Project",
      },
      Object {
        "default": "true",
        "docs": "Use pip with a requirements.txt file to track project dependencies.",
        "name": "pip",
        "optional": true,
        "parent": "PythonProjectOptions",
        "path": Array [
          "pip",
        ],
        "switch": "pip",
        "type": "boolean",
      },
      Object {
        "default": "false",
        "docs": "Use poetry to manage your project dependencies, virtual environment, and (optional) packaging/publishing.",
        "name": "poetry",
        "optional": true,
        "parent": "PythonProjectOptions",
        "path": Array [
          "poetry",
        ],
        "switch": "poetry",
        "type": "boolean",
      },
      Object {
        "docs": "Additional options to set for poetry if using poetry.",
        "name": "poetryOptions",
        "optional": true,
        "parent": "PythonPackagingOptions",
        "path": Array [
          "poetryOptions",
        ],
        "switch": "poetry-options",
        "type": "PoetryPyprojectOptionsWithoutDeps",
      },
      Object {
        "default": "ProjectType.UNKNOWN",
        "docs": "Which type of project this is (library/app).",
        "name": "projectType",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "projectType",
        ],
        "switch": "project-type",
        "type": "ProjectType",
      },
      Object {
        "default": "true",
        "docs": "Include pytest tests.",
        "name": "pytest",
        "optional": true,
        "parent": "PythonProjectOptions",
        "path": Array [
          "pytest",
        ],
        "switch": "pytest",
        "type": "boolean",
      },
      Object {
        "default": "- defaults",
        "docs": "pytest options.",
        "name": "pytestOptions",
        "optional": true,
        "parent": "PythonProjectOptions",
        "path": Array [
          "pytestOptions",
        ],
        "switch": "pytest-options",
        "type": "PytestOptions",
      },
      Object {
        "default": "- { filename: 'README.md', contents: '# replace this' }",
        "docs": "The README setup.",
        "name": "readme",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "readme",
        ],
        "switch": "readme",
        "type": "SampleReadmeProps",
      },
      Object {
        "default": "true",
        "docs": "Include sample code and test if the relevant directories don't exist.",
        "name": "sample",
        "optional": true,
        "parent": "PythonProjectOptions",
        "path": Array [
          "sample",
        ],
        "switch": "sample",
        "type": "boolean",
      },
      Object {
        "docs": "Additional fields to pass in the setup() function if using setuptools.",
        "name": "setupConfig",
        "optional": true,
        "parent": "PythonPackagingOptions",
        "path": Array [
          "setupConfig",
        ],
        "switch": "setup-config",
        "type": "unknown",
      },
      Object {
        "default": "- true if the project type is library",
        "docs": "Use setuptools with a setup.py script for packaging and publishing.",
        "name": "setuptools",
        "optional": true,
        "parent": "PythonProjectOptions",
        "path": Array [
          "setuptools",
        ],
        "switch": "setuptools",
        "type": "boolean",
      },
      Object {
        "default": "true",
        "docs": "Use venv to manage a virtual environment for installing dependencies inside.",
        "name": "venv",
        "optional": true,
        "parent": "PythonProjectOptions",
        "path": Array [
          "venv",
        ],
        "switch": "venv",
        "type": "boolean",
      },
      Object {
        "default": "- defaults",
        "docs": "Venv options.",
        "name": "venvOptions",
        "optional": true,
        "parent": "PythonProjectOptions",
        "path": Array [
          "venvOptions",
        ],
        "switch": "venv-options",
        "type": "VenvOptions",
      },
      Object {
        "default": "\\"0.1.0\\"",
        "docs": "Version of the package.",
        "name": "version",
        "parent": "PythonPackagingOptions",
        "path": Array [
          "version",
        ],
        "switch": "version",
        "type": "string",
      },
    ],
    "pjid": "python",
    "typename": "python.PythonProject",
  },
  Object {
    "docs": "React project without TypeScript.",
    "docsurl": "https://github.com/projen/projen/blob/master/API.md#projen-web.reactproject",
    "fqn": "projen.web.ReactProject",
    "moduleName": "projen",
    "options": Array [
      Object {
        "default": "true",
        "docs": "Allow the project to include \`peerDependencies\` and \`bundledDependencies\`.",
        "name": "allowLibraryDependencies",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "allowLibraryDependencies",
        ],
        "switch": "allow-library-dependencies",
        "type": "boolean",
      },
      Object {
        "default": "true",
        "docs": "Checks that after build there are no modified files on git.",
        "name": "antitamper",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "antitamper",
        ],
        "switch": "antitamper",
        "type": "boolean",
      },
      Object {
        "default": "\\"dist\\"",
        "docs": "A directory which will contain artifacts to be published to npm.",
        "name": "artifactsDirectory",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "artifactsDirectory",
        ],
        "switch": "artifacts-directory",
        "type": "string",
      },
      Object {
        "docs": "Author's e-mail.",
        "name": "authorEmail",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "authorEmail",
        ],
        "switch": "author-email",
        "type": "string",
      },
      Object {
        "docs": "Author's name.",
        "name": "authorName",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "authorName",
        ],
        "switch": "author-name",
        "type": "string",
      },
      Object {
        "docs": "Author's Organization.",
        "name": "authorOrganization",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "authorOrganization",
        ],
        "switch": "author-organization",
        "type": "boolean",
      },
      Object {
        "docs": "Author's URL / Website.",
        "name": "authorUrl",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "authorUrl",
        ],
        "switch": "author-url",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Automatically add all executables under the \`bin\` directory to your \`package.json\` file under the \`bin\` section.",
        "name": "autoDetectBin",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "autoDetectBin",
        ],
        "switch": "auto-detect-bin",
        "type": "boolean",
      },
      Object {
        "docs": "Binary programs vended with your module.",
        "name": "bin",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "bin",
        ],
        "switch": "bin",
        "type": "unknown",
      },
      Object {
        "default": "- true if not a subproject",
        "docs": "Define a GitHub workflow for building PRs.",
        "name": "buildWorkflow",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "buildWorkflow",
        ],
        "switch": "build-workflow",
        "type": "boolean",
      },
      Object {
        "docs": "List of dependencies to bundle into this module.",
        "name": "bundledDeps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "bundledDeps",
        ],
        "switch": "bundled-deps",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Add a \`clobber\` task which resets the repo to origin.",
        "name": "clobber",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "clobber",
        ],
        "switch": "clobber",
        "type": "boolean",
      },
      Object {
        "default": "false",
        "docs": "Define a GitHub workflow step for sending code coverage metrics to https://codecov.io/ Uses codecov/codecov-action@v1 A secret is required for private repos. Configured with @codeCovTokenSecret.",
        "name": "codeCov",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "codeCov",
        ],
        "switch": "code-cov",
        "type": "boolean",
      },
      Object {
        "default": "- if this option is not specified, only public repositories are supported",
        "docs": "Define the secret name for a specified https://codecov.io/ token A secret is required to send coverage for private repositories.",
        "name": "codeCovTokenSecret",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "codeCovTokenSecret",
        ],
        "switch": "code-cov-token-secret",
        "type": "string",
      },
      Object {
        "default": "- defaults to the value of authorName or \\"\\" if \`authorName\` is undefined.",
        "docs": "License copyright owner.",
        "name": "copyrightOwner",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "copyrightOwner",
        ],
        "switch": "copyright-owner",
        "type": "string",
      },
      Object {
        "default": "- current year",
        "docs": "The copyright years to put in the LICENSE file.",
        "name": "copyrightPeriod",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "copyrightPeriod",
        ],
        "switch": "copyright-period",
        "type": "string",
      },
      Object {
        "default": "\\"main\\"",
        "docs": "The name of the main release branch.",
        "name": "defaultReleaseBranch",
        "parent": "NodeProjectOptions",
        "path": Array [
          "defaultReleaseBranch",
        ],
        "switch": "default-release-branch",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Include dependabot configuration.",
        "name": "dependabot",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "dependabot",
        ],
        "switch": "dependabot",
        "type": "boolean",
      },
      Object {
        "default": "- default options",
        "docs": "Options for dependabot.",
        "name": "dependabotOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "dependabotOptions",
        ],
        "switch": "dependabot-options",
        "type": "DependabotOptions",
      },
      Object {
        "default": "[]",
        "docs": "Runtime dependencies of this module.",
        "name": "deps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "deps",
        ],
        "switch": "deps",
        "type": "unknown",
      },
      Object {
        "docs": "The description is just a string that helps people understand the purpose of the package.",
        "name": "description",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "description",
        ],
        "switch": "description",
        "type": "string",
      },
      Object {
        "default": "false",
        "docs": "Add a VSCode development environment (used for GitHub Codespaces).",
        "name": "devContainer",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "devContainer",
        ],
        "switch": "dev-container",
        "type": "boolean",
      },
      Object {
        "default": "[]",
        "docs": "Build dependencies for this module.",
        "name": "devDeps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "devDeps",
        ],
        "switch": "dev-deps",
        "type": "unknown",
      },
      Object {
        "default": "\\"lib/index.js\\"",
        "docs": "Module entrypoint (\`main\` in \`package.json\`).",
        "name": "entrypoint",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "entrypoint",
        ],
        "switch": "entrypoint",
        "type": "string",
      },
      Object {
        "docs": "Additional entries to .gitignore.",
        "name": "gitignore",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "gitignore",
        ],
        "switch": "gitignore",
        "type": "unknown",
      },
      Object {
        "default": "false",
        "docs": "Add a Gitpod development environment.",
        "name": "gitpod",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "gitpod",
        ],
        "switch": "gitpod",
        "type": "boolean",
      },
      Object {
        "docs": "Package's Homepage / Website.",
        "name": "homepage",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "homepage",
        ],
        "switch": "homepage",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Setup jest unit tests.",
        "name": "jest",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "jest",
        ],
        "switch": "jest",
        "type": "boolean",
      },
      Object {
        "default": "- default options",
        "docs": "Jest options.",
        "name": "jestOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "jestOptions",
        ],
        "switch": "jest-options",
        "type": "JestOptions",
      },
      Object {
        "default": "\\"latest\\"",
        "docs": "Version requirement of \`jsii-release\` which is used to publish modules to npm.",
        "name": "jsiiReleaseVersion",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "jsiiReleaseVersion",
        ],
        "switch": "jsii-release-version",
        "type": "string",
      },
      Object {
        "docs": "Keywords to include in \`package.json\`.",
        "name": "keywords",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "keywords",
        ],
        "switch": "keywords",
        "type": "unknown",
      },
      Object {
        "default": "\\"Apache-2.0\\"",
        "docs": "License's SPDX identifier.",
        "name": "license",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "license",
        ],
        "switch": "license",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Indicates if a license should be added.",
        "name": "licensed",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "licensed",
        ],
        "switch": "licensed",
        "type": "boolean",
      },
      Object {
        "default": "{}",
        "docs": "Configure logging options such as verbosity.",
        "name": "logging",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "logging",
        ],
        "switch": "logging",
        "type": "LoggerOptions",
      },
      Object {
        "default": "- no max",
        "docs": "Minimum node.js version to require via \`engines\` (inclusive).",
        "name": "maxNodeVersion",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "maxNodeVersion",
        ],
        "switch": "max-node-version",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Whether mergify should be enabled on this repository or not.",
        "name": "mergify",
        "optional": true,
        "parent": "GitHubOptions",
        "path": Array [
          "mergify",
        ],
        "switch": "mergify",
        "type": "boolean",
      },
      Object {
        "default": "\\"auto-merge\\"",
        "docs": "Automatically merge PRs that build successfully and have this label.",
        "name": "mergifyAutoMergeLabel",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "mergifyAutoMergeLabel",
        ],
        "switch": "mergify-auto-merge-label",
        "type": "string",
      },
      Object {
        "default": "- default options",
        "docs": "Options for mergify.",
        "name": "mergifyOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "mergifyOptions",
        ],
        "switch": "mergify-options",
        "type": "MergifyOptions",
      },
      Object {
        "default": "- no \\"engines\\" specified",
        "docs": "Minimum Node.js version to require via package.json \`engines\` (inclusive).",
        "name": "minNodeVersion",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "minNodeVersion",
        ],
        "switch": "min-node-version",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Automatically update files modified during builds to pull-request branches.",
        "name": "mutableBuild",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "mutableBuild",
        ],
        "switch": "mutable-build",
        "type": "boolean",
      },
      Object {
        "default": "$BASEDIR",
        "docs": "This is the name of your project.",
        "name": "name",
        "parent": "ProjectOptions",
        "path": Array [
          "name",
        ],
        "switch": "name",
        "type": "string",
      },
      Object {
        "default": "- for scoped packages (e.g. \`foo@bar\`), the default is
\`NpmAccess.RESTRICTED\`, for non-scoped packages, the default is
\`NpmAccess.PUBLIC\`.",
        "docs": "Access level of the npm package.",
        "name": "npmAccess",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "npmAccess",
        ],
        "switch": "npm-access",
        "type": "NpmAccess",
      },
      Object {
        "default": "\\"latest\\"",
        "docs": "Tags can be used to provide an alias instead of version numbers.",
        "name": "npmDistTag",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "npmDistTag",
        ],
        "switch": "npm-dist-tag",
        "type": "string",
      },
      Object {
        "docs": "Additional entries to .npmignore.",
        "name": "npmignore",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "npmignore",
        ],
        "switch": "npmignore",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Defines an .npmignore file. Normally this is only needed for libraries that are packaged as tarballs.",
        "name": "npmignoreEnabled",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "npmignoreEnabled",
        ],
        "switch": "npmignore-enabled",
        "type": "boolean",
      },
      Object {
        "deprecated": true,
        "docs": "The host name of the npm registry to publish to.",
        "name": "npmRegistry",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "npmRegistry",
        ],
        "switch": "npm-registry",
        "type": "string",
      },
      Object {
        "default": "\\"https://registry.npmjs.org\\"",
        "docs": "The base URL of the npm package registry.",
        "name": "npmRegistryUrl",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "npmRegistryUrl",
        ],
        "switch": "npm-registry-url",
        "type": "string",
      },
      Object {
        "default": "NpmTaskExecution.PROJEN",
        "docs": "Determines how tasks are executed when invoked as npm scripts (yarn/npm run xyz).",
        "name": "npmTaskExecution",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "npmTaskExecution",
        ],
        "switch": "npm-task-execution",
        "type": "NpmTaskExecution",
      },
      Object {
        "default": "\\"NPM_TOKEN\\"",
        "docs": "GitHub secret which contains the NPM token to use when publishing packages.",
        "name": "npmTokenSecret",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "npmTokenSecret",
        ],
        "switch": "npm-token-secret",
        "type": "string",
      },
      Object {
        "default": "\\".\\"",
        "docs": "The root directory of the project.",
        "name": "outdir",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "outdir",
        ],
        "switch": "outdir",
        "type": "string",
      },
      Object {
        "default": "NodePackageManager.YARN",
        "docs": "The Node Package Manager used to execute scripts.",
        "name": "packageManager",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "packageManager",
        ],
        "switch": "package-manager",
        "type": "NodePackageManager",
      },
      Object {
        "default": "- defaults to project name",
        "docs": "The \\"name\\" in package.json.",
        "name": "packageName",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "packageName",
        ],
        "switch": "package-name",
        "type": "string",
      },
      Object {
        "docs": "The parent project, if this project is part of a bigger project.",
        "name": "parent",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "parent",
        ],
        "switch": "parent",
        "type": "Project",
      },
      Object {
        "docs": "Options for \`peerDeps\`.",
        "name": "peerDependencyOptions",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "peerDependencyOptions",
        ],
        "switch": "peer-dependency-options",
        "type": "PeerDependencyOptions",
      },
      Object {
        "default": "[]",
        "docs": "Peer dependencies for this module.",
        "name": "peerDeps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "peerDeps",
        ],
        "switch": "peer-deps",
        "type": "unknown",
      },
      Object {
        "default": "ProjectType.UNKNOWN",
        "docs": "Which type of project this is (library/app).",
        "name": "projectType",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "projectType",
        ],
        "switch": "project-type",
        "type": "ProjectType",
      },
      Object {
        "default": "\\"npx projen\\"",
        "docs": "The shell command to use in order to run the projen CLI.",
        "name": "projenCommand",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "projenCommand",
        ],
        "switch": "projen-command",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Indicates of \\"projen\\" should be installed as a devDependency.",
        "name": "projenDevDependency",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenDevDependency",
        ],
        "switch": "projen-dev-dependency",
        "type": "boolean",
      },
      Object {
        "default": "true",
        "docs": "Execute \`projen\` as the first step of the \`build\` task to synthesize project files.",
        "name": "projenDuringBuild",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenDuringBuild",
        ],
        "switch": "projen-during-build",
        "type": "boolean",
      },
      Object {
        "default": "true",
        "docs": "Generate (once) .projenrc.js (in JavaScript). Set to \`false\` in order to disable .projenrc.js generation.",
        "name": "projenrcJs",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenrcJs",
        ],
        "switch": "projenrc-js",
        "type": "boolean",
      },
      Object {
        "default": "- default options",
        "docs": "Options for .projenrc.js.",
        "name": "projenrcJsOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenrcJsOptions",
        ],
        "switch": "projenrc-js-options",
        "type": "ProjenrcOptions",
      },
      Object {
        "default": "- \\"true\\" if mergify auto-merge is enabled (default)",
        "docs": "Automatically merge projen upgrade PRs when build passes.",
        "name": "projenUpgradeAutoMerge",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenUpgradeAutoMerge",
        ],
        "switch": "projen-upgrade-auto-merge",
        "type": "boolean",
      },
      Object {
        "default": "[ \\"0 6 * * *\\" ]",
        "docs": "Customize the projenUpgrade schedule in cron expression.",
        "name": "projenUpgradeSchedule",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenUpgradeSchedule",
        ],
        "switch": "projen-upgrade-schedule",
        "type": "unknown",
      },
      Object {
        "default": "- no automatic projen upgrade pull requests",
        "docs": "Periodically submits a pull request for projen upgrades (executes \`yarn projen:upgrade\`).",
        "name": "projenUpgradeSecret",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenUpgradeSecret",
        ],
        "switch": "projen-upgrade-secret",
        "type": "string",
      },
      Object {
        "default": "- Defaults to the latest version.",
        "docs": "Version of projen to install.",
        "name": "projenVersion",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenVersion",
        ],
        "switch": "projen-version",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Include a GitHub pull request template.",
        "name": "pullRequestTemplate",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "pullRequestTemplate",
        ],
        "switch": "pull-request-template",
        "type": "boolean",
      },
      Object {
        "default": "- default content",
        "docs": "The contents of the pull request template.",
        "name": "pullRequestTemplateContents",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "pullRequestTemplateContents",
        ],
        "switch": "pull-request-template-contents",
        "type": "string",
      },
      Object {
        "default": "- { filename: 'README.md', contents: '# replace this' }",
        "docs": "The README setup.",
        "name": "readme",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "readme",
        ],
        "switch": "readme",
        "type": "SampleReadmeProps",
      },
      Object {
        "default": "[ \\"main\\" ]",
        "docs": "Branches which trigger a release.",
        "name": "releaseBranches",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "releaseBranches",
        ],
        "switch": "release-branches",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Automatically release new versions every commit to one of branches in \`releaseBranches\`.",
        "name": "releaseEveryCommit",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "releaseEveryCommit",
        ],
        "switch": "release-every-commit",
        "type": "boolean",
      },
      Object {
        "default": "- no scheduled releases",
        "docs": "CRON schedule to trigger new releases.",
        "name": "releaseSchedule",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "releaseSchedule",
        ],
        "switch": "release-schedule",
        "type": "string",
      },
      Object {
        "default": "false",
        "docs": "Automatically release to npm when new versions are introduced.",
        "name": "releaseToNpm",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "releaseToNpm",
        ],
        "switch": "release-to-npm",
        "type": "boolean",
      },
      Object {
        "default": "- true if not a subproject",
        "docs": "Define a GitHub workflow for releasing from \\"main\\" when new versions are bumped.",
        "name": "releaseWorkflow",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "releaseWorkflow",
        ],
        "switch": "release-workflow",
        "type": "boolean",
      },
      Object {
        "docs": "A set of workflow steps to execute in order to setup the workflow container.",
        "name": "releaseWorkflowSetupSteps",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "releaseWorkflowSetupSteps",
        ],
        "switch": "release-workflow-setup-steps",
        "type": "unknown",
      },
      Object {
        "docs": "The repository is the location where the actual code for your package lives.",
        "name": "repository",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "repository",
        ],
        "switch": "repository",
        "type": "string",
      },
      Object {
        "docs": "If the package.json for your package is not in the root directory (for example if it is part of a monorepo), you can specify the directory in which it lives.",
        "name": "repositoryDirectory",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "repositoryDirectory",
        ],
        "switch": "repository-directory",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Generate one-time sample in \`src/\` and \`public/\` if there are no files there.",
        "name": "sampleCode",
        "optional": true,
        "parent": "ReactProjectOptions",
        "path": Array [
          "sampleCode",
        ],
        "switch": "sample-code",
        "type": "boolean",
      },
      Object {
        "default": "{}",
        "docs": "npm scripts to include.",
        "name": "scripts",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "scripts",
        ],
        "switch": "scripts",
        "type": "unknown",
      },
      Object {
        "default": "\\"src\\"",
        "docs": "Source directory.",
        "name": "srcdir",
        "optional": true,
        "parent": "ReactProjectOptions",
        "path": Array [
          "srcdir",
        ],
        "switch": "srcdir",
        "type": "string",
      },
      Object {
        "docs": "Package's Stability.",
        "name": "stability",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "stability",
        ],
        "switch": "stability",
        "type": "string",
      },
      Object {
        "default": "\\"yarn install --frozen-lockfile && yarn projen\\"",
        "docs": "Workflow steps to use in order to bootstrap this repo.",
        "name": "workflowBootstrapSteps",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "workflowBootstrapSteps",
        ],
        "switch": "workflow-bootstrap-steps",
        "type": "unknown",
      },
      Object {
        "default": "- default image",
        "docs": "Container image to use for GitHub workflows.",
        "name": "workflowContainerImage",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "workflowContainerImage",
        ],
        "switch": "workflow-container-image",
        "type": "string",
      },
      Object {
        "default": "- same as \`minNodeVersion\`",
        "docs": "The node version to use in GitHub workflows.",
        "name": "workflowNodeVersion",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "workflowNodeVersion",
        ],
        "switch": "workflow-node-version",
        "type": "string",
      },
    ],
    "pjid": "react",
    "typename": "web.ReactProject",
  },
  Object {
    "docs": "React project with TypeScript.",
    "docsurl": "https://github.com/projen/projen/blob/master/API.md#projen-web.reacttypescriptproject",
    "fqn": "projen.web.ReactTypeScriptProject",
    "moduleName": "projen",
    "options": Array [
      Object {
        "default": "true",
        "docs": "Allow the project to include \`peerDependencies\` and \`bundledDependencies\`.",
        "name": "allowLibraryDependencies",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "allowLibraryDependencies",
        ],
        "switch": "allow-library-dependencies",
        "type": "boolean",
      },
      Object {
        "default": "true",
        "docs": "Checks that after build there are no modified files on git.",
        "name": "antitamper",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "antitamper",
        ],
        "switch": "antitamper",
        "type": "boolean",
      },
      Object {
        "default": "\\"dist\\"",
        "docs": "A directory which will contain artifacts to be published to npm.",
        "name": "artifactsDirectory",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "artifactsDirectory",
        ],
        "switch": "artifacts-directory",
        "type": "string",
      },
      Object {
        "docs": "Author's e-mail.",
        "name": "authorEmail",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "authorEmail",
        ],
        "switch": "author-email",
        "type": "string",
      },
      Object {
        "docs": "Author's name.",
        "name": "authorName",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "authorName",
        ],
        "switch": "author-name",
        "type": "string",
      },
      Object {
        "docs": "Author's Organization.",
        "name": "authorOrganization",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "authorOrganization",
        ],
        "switch": "author-organization",
        "type": "boolean",
      },
      Object {
        "docs": "Author's URL / Website.",
        "name": "authorUrl",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "authorUrl",
        ],
        "switch": "author-url",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Automatically add all executables under the \`bin\` directory to your \`package.json\` file under the \`bin\` section.",
        "name": "autoDetectBin",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "autoDetectBin",
        ],
        "switch": "auto-detect-bin",
        "type": "boolean",
      },
      Object {
        "docs": "Binary programs vended with your module.",
        "name": "bin",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "bin",
        ],
        "switch": "bin",
        "type": "unknown",
      },
      Object {
        "default": "- true if not a subproject",
        "docs": "Define a GitHub workflow for building PRs.",
        "name": "buildWorkflow",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "buildWorkflow",
        ],
        "switch": "build-workflow",
        "type": "boolean",
      },
      Object {
        "docs": "List of dependencies to bundle into this module.",
        "name": "bundledDeps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "bundledDeps",
        ],
        "switch": "bundled-deps",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Add a \`clobber\` task which resets the repo to origin.",
        "name": "clobber",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "clobber",
        ],
        "switch": "clobber",
        "type": "boolean",
      },
      Object {
        "default": "false",
        "docs": "Define a GitHub workflow step for sending code coverage metrics to https://codecov.io/ Uses codecov/codecov-action@v1 A secret is required for private repos. Configured with @codeCovTokenSecret.",
        "name": "codeCov",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "codeCov",
        ],
        "switch": "code-cov",
        "type": "boolean",
      },
      Object {
        "default": "- if this option is not specified, only public repositories are supported",
        "docs": "Define the secret name for a specified https://codecov.io/ token A secret is required to send coverage for private repositories.",
        "name": "codeCovTokenSecret",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "codeCovTokenSecret",
        ],
        "switch": "code-cov-token-secret",
        "type": "string",
      },
      Object {
        "default": "- if \`testdir\` is under \`src/**\`, the default is \`true\`, otherwise the default is \`false.",
        "docs": "Compile the code before running tests.",
        "name": "compileBeforeTest",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "compileBeforeTest",
        ],
        "switch": "compile-before-test",
        "type": "boolean",
      },
      Object {
        "default": "- defaults to the value of authorName or \\"\\" if \`authorName\` is undefined.",
        "docs": "License copyright owner.",
        "name": "copyrightOwner",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "copyrightOwner",
        ],
        "switch": "copyright-owner",
        "type": "string",
      },
      Object {
        "default": "- current year",
        "docs": "The copyright years to put in the LICENSE file.",
        "name": "copyrightPeriod",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "copyrightPeriod",
        ],
        "switch": "copyright-period",
        "type": "string",
      },
      Object {
        "default": "\\"main\\"",
        "docs": "The name of the main release branch.",
        "name": "defaultReleaseBranch",
        "parent": "NodeProjectOptions",
        "path": Array [
          "defaultReleaseBranch",
        ],
        "switch": "default-release-branch",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Include dependabot configuration.",
        "name": "dependabot",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "dependabot",
        ],
        "switch": "dependabot",
        "type": "boolean",
      },
      Object {
        "default": "- default options",
        "docs": "Options for dependabot.",
        "name": "dependabotOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "dependabotOptions",
        ],
        "switch": "dependabot-options",
        "type": "DependabotOptions",
      },
      Object {
        "default": "[]",
        "docs": "Runtime dependencies of this module.",
        "name": "deps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "deps",
        ],
        "switch": "deps",
        "type": "unknown",
      },
      Object {
        "docs": "The description is just a string that helps people understand the purpose of the package.",
        "name": "description",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "description",
        ],
        "switch": "description",
        "type": "string",
      },
      Object {
        "default": "false",
        "docs": "Add a VSCode development environment (used for GitHub Codespaces).",
        "name": "devContainer",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "devContainer",
        ],
        "switch": "dev-container",
        "type": "boolean",
      },
      Object {
        "default": "[]",
        "docs": "Build dependencies for this module.",
        "name": "devDeps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "devDeps",
        ],
        "switch": "dev-deps",
        "type": "unknown",
      },
      Object {
        "default": "false",
        "docs": "Do not generate a \`tsconfig.json\` file (used by jsii projects since tsconfig.json is generated by the jsii compiler).",
        "name": "disableTsconfig",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "disableTsconfig",
        ],
        "switch": "disable-tsconfig",
        "type": "boolean",
      },
      Object {
        "default": "false",
        "docs": "Docgen by Typedoc.",
        "name": "docgen",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "docgen",
        ],
        "switch": "docgen",
        "type": "boolean",
      },
      Object {
        "default": "\\"docs\\"",
        "docs": "Docs directory.",
        "name": "docsDirectory",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "docsDirectory",
        ],
        "switch": "docs-directory",
        "type": "string",
      },
      Object {
        "default": "\\"lib/index.js\\"",
        "docs": "Module entrypoint (\`main\` in \`package.json\`).",
        "name": "entrypoint",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "entrypoint",
        ],
        "switch": "entrypoint",
        "type": "string",
      },
      Object {
        "default": "- .d.ts file derived from the project's entrypoint (usually lib/index.d.ts)",
        "docs": "The .d.ts file that includes the type declarations for this module.",
        "name": "entrypointTypes",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "entrypointTypes",
        ],
        "switch": "entrypoint-types",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Setup eslint.",
        "name": "eslint",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "eslint",
        ],
        "switch": "eslint",
        "type": "boolean",
      },
      Object {
        "default": "- opinionated default options",
        "docs": "Eslint options.",
        "name": "eslintOptions",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "eslintOptions",
        ],
        "switch": "eslint-options",
        "type": "EslintOptions",
      },
      Object {
        "docs": "Additional entries to .gitignore.",
        "name": "gitignore",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "gitignore",
        ],
        "switch": "gitignore",
        "type": "unknown",
      },
      Object {
        "default": "false",
        "docs": "Add a Gitpod development environment.",
        "name": "gitpod",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "gitpod",
        ],
        "switch": "gitpod",
        "type": "boolean",
      },
      Object {
        "docs": "Package's Homepage / Website.",
        "name": "homepage",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "homepage",
        ],
        "switch": "homepage",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Setup jest unit tests.",
        "name": "jest",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "jest",
        ],
        "switch": "jest",
        "type": "boolean",
      },
      Object {
        "default": "- default options",
        "docs": "Jest options.",
        "name": "jestOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "jestOptions",
        ],
        "switch": "jest-options",
        "type": "JestOptions",
      },
      Object {
        "default": "\\"latest\\"",
        "docs": "Version requirement of \`jsii-release\` which is used to publish modules to npm.",
        "name": "jsiiReleaseVersion",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "jsiiReleaseVersion",
        ],
        "switch": "jsii-release-version",
        "type": "string",
      },
      Object {
        "docs": "Keywords to include in \`package.json\`.",
        "name": "keywords",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "keywords",
        ],
        "switch": "keywords",
        "type": "unknown",
      },
      Object {
        "default": "\\"lib\\"",
        "docs": "Typescript  artifacts output directory.",
        "name": "libdir",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "libdir",
        ],
        "switch": "libdir",
        "type": "string",
      },
      Object {
        "default": "\\"Apache-2.0\\"",
        "docs": "License's SPDX identifier.",
        "name": "license",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "license",
        ],
        "switch": "license",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Indicates if a license should be added.",
        "name": "licensed",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "licensed",
        ],
        "switch": "licensed",
        "type": "boolean",
      },
      Object {
        "default": "{}",
        "docs": "Configure logging options such as verbosity.",
        "name": "logging",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "logging",
        ],
        "switch": "logging",
        "type": "LoggerOptions",
      },
      Object {
        "default": "- no max",
        "docs": "Minimum node.js version to require via \`engines\` (inclusive).",
        "name": "maxNodeVersion",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "maxNodeVersion",
        ],
        "switch": "max-node-version",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Whether mergify should be enabled on this repository or not.",
        "name": "mergify",
        "optional": true,
        "parent": "GitHubOptions",
        "path": Array [
          "mergify",
        ],
        "switch": "mergify",
        "type": "boolean",
      },
      Object {
        "default": "\\"auto-merge\\"",
        "docs": "Automatically merge PRs that build successfully and have this label.",
        "name": "mergifyAutoMergeLabel",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "mergifyAutoMergeLabel",
        ],
        "switch": "mergify-auto-merge-label",
        "type": "string",
      },
      Object {
        "default": "- default options",
        "docs": "Options for mergify.",
        "name": "mergifyOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "mergifyOptions",
        ],
        "switch": "mergify-options",
        "type": "MergifyOptions",
      },
      Object {
        "default": "- no \\"engines\\" specified",
        "docs": "Minimum Node.js version to require via package.json \`engines\` (inclusive).",
        "name": "minNodeVersion",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "minNodeVersion",
        ],
        "switch": "min-node-version",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Automatically update files modified during builds to pull-request branches.",
        "name": "mutableBuild",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "mutableBuild",
        ],
        "switch": "mutable-build",
        "type": "boolean",
      },
      Object {
        "default": "$BASEDIR",
        "docs": "This is the name of your project.",
        "name": "name",
        "parent": "ProjectOptions",
        "path": Array [
          "name",
        ],
        "switch": "name",
        "type": "string",
      },
      Object {
        "default": "- for scoped packages (e.g. \`foo@bar\`), the default is
\`NpmAccess.RESTRICTED\`, for non-scoped packages, the default is
\`NpmAccess.PUBLIC\`.",
        "docs": "Access level of the npm package.",
        "name": "npmAccess",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "npmAccess",
        ],
        "switch": "npm-access",
        "type": "NpmAccess",
      },
      Object {
        "default": "\\"latest\\"",
        "docs": "Tags can be used to provide an alias instead of version numbers.",
        "name": "npmDistTag",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "npmDistTag",
        ],
        "switch": "npm-dist-tag",
        "type": "string",
      },
      Object {
        "docs": "Additional entries to .npmignore.",
        "name": "npmignore",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "npmignore",
        ],
        "switch": "npmignore",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Defines an .npmignore file. Normally this is only needed for libraries that are packaged as tarballs.",
        "name": "npmignoreEnabled",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "npmignoreEnabled",
        ],
        "switch": "npmignore-enabled",
        "type": "boolean",
      },
      Object {
        "deprecated": true,
        "docs": "The host name of the npm registry to publish to.",
        "name": "npmRegistry",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "npmRegistry",
        ],
        "switch": "npm-registry",
        "type": "string",
      },
      Object {
        "default": "\\"https://registry.npmjs.org\\"",
        "docs": "The base URL of the npm package registry.",
        "name": "npmRegistryUrl",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "npmRegistryUrl",
        ],
        "switch": "npm-registry-url",
        "type": "string",
      },
      Object {
        "default": "NpmTaskExecution.PROJEN",
        "docs": "Determines how tasks are executed when invoked as npm scripts (yarn/npm run xyz).",
        "name": "npmTaskExecution",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "npmTaskExecution",
        ],
        "switch": "npm-task-execution",
        "type": "NpmTaskExecution",
      },
      Object {
        "default": "\\"NPM_TOKEN\\"",
        "docs": "GitHub secret which contains the NPM token to use when publishing packages.",
        "name": "npmTokenSecret",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "npmTokenSecret",
        ],
        "switch": "npm-token-secret",
        "type": "string",
      },
      Object {
        "default": "\\".\\"",
        "docs": "The root directory of the project.",
        "name": "outdir",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "outdir",
        ],
        "switch": "outdir",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Defines a \`yarn package\` command that will produce a tarball and place it under \`dist/js\`.",
        "name": "package",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "package",
        ],
        "switch": "package",
        "type": "boolean",
      },
      Object {
        "default": "NodePackageManager.YARN",
        "docs": "The Node Package Manager used to execute scripts.",
        "name": "packageManager",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "packageManager",
        ],
        "switch": "package-manager",
        "type": "NodePackageManager",
      },
      Object {
        "default": "- defaults to project name",
        "docs": "The \\"name\\" in package.json.",
        "name": "packageName",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "packageName",
        ],
        "switch": "package-name",
        "type": "string",
      },
      Object {
        "docs": "The parent project, if this project is part of a bigger project.",
        "name": "parent",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "parent",
        ],
        "switch": "parent",
        "type": "Project",
      },
      Object {
        "docs": "Options for \`peerDeps\`.",
        "name": "peerDependencyOptions",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "peerDependencyOptions",
        ],
        "switch": "peer-dependency-options",
        "type": "PeerDependencyOptions",
      },
      Object {
        "default": "[]",
        "docs": "Peer dependencies for this module.",
        "name": "peerDeps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "peerDeps",
        ],
        "switch": "peer-deps",
        "type": "unknown",
      },
      Object {
        "default": "ProjectType.UNKNOWN",
        "docs": "Which type of project this is (library/app).",
        "name": "projectType",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "projectType",
        ],
        "switch": "project-type",
        "type": "ProjectType",
      },
      Object {
        "default": "\\"npx projen\\"",
        "docs": "The shell command to use in order to run the projen CLI.",
        "name": "projenCommand",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "projenCommand",
        ],
        "switch": "projen-command",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Indicates of \\"projen\\" should be installed as a devDependency.",
        "name": "projenDevDependency",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenDevDependency",
        ],
        "switch": "projen-dev-dependency",
        "type": "boolean",
      },
      Object {
        "default": "true",
        "docs": "Execute \`projen\` as the first step of the \`build\` task to synthesize project files.",
        "name": "projenDuringBuild",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenDuringBuild",
        ],
        "switch": "projen-during-build",
        "type": "boolean",
      },
      Object {
        "default": "true",
        "docs": "Generate (once) .projenrc.js (in JavaScript). Set to \`false\` in order to disable .projenrc.js generation.",
        "name": "projenrcJs",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenrcJs",
        ],
        "switch": "projenrc-js",
        "type": "boolean",
      },
      Object {
        "default": "- default options",
        "docs": "Options for .projenrc.js.",
        "name": "projenrcJsOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenrcJsOptions",
        ],
        "switch": "projenrc-js-options",
        "type": "ProjenrcOptions",
      },
      Object {
        "default": "false",
        "docs": "Use TypeScript for your projenrc file (\`.projenrc.ts\`).",
        "name": "projenrcTs",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "projenrcTs",
        ],
        "switch": "projenrc-ts",
        "type": "boolean",
      },
      Object {
        "docs": "Options for .projenrc.ts.",
        "name": "projenrcTsOptions",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "projenrcTsOptions",
        ],
        "switch": "projenrc-ts-options",
        "type": "ProjenrcOptions",
      },
      Object {
        "default": "- \\"true\\" if mergify auto-merge is enabled (default)",
        "docs": "Automatically merge projen upgrade PRs when build passes.",
        "name": "projenUpgradeAutoMerge",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenUpgradeAutoMerge",
        ],
        "switch": "projen-upgrade-auto-merge",
        "type": "boolean",
      },
      Object {
        "default": "[ \\"0 6 * * *\\" ]",
        "docs": "Customize the projenUpgrade schedule in cron expression.",
        "name": "projenUpgradeSchedule",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenUpgradeSchedule",
        ],
        "switch": "projen-upgrade-schedule",
        "type": "unknown",
      },
      Object {
        "default": "- no automatic projen upgrade pull requests",
        "docs": "Periodically submits a pull request for projen upgrades (executes \`yarn projen:upgrade\`).",
        "name": "projenUpgradeSecret",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenUpgradeSecret",
        ],
        "switch": "projen-upgrade-secret",
        "type": "string",
      },
      Object {
        "default": "- Defaults to the latest version.",
        "docs": "Version of projen to install.",
        "name": "projenVersion",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenVersion",
        ],
        "switch": "projen-version",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Include a GitHub pull request template.",
        "name": "pullRequestTemplate",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "pullRequestTemplate",
        ],
        "switch": "pull-request-template",
        "type": "boolean",
      },
      Object {
        "default": "- default content",
        "docs": "The contents of the pull request template.",
        "name": "pullRequestTemplateContents",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "pullRequestTemplateContents",
        ],
        "switch": "pull-request-template-contents",
        "type": "string",
      },
      Object {
        "default": "- { filename: 'README.md', contents: '# replace this' }",
        "docs": "The README setup.",
        "name": "readme",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "readme",
        ],
        "switch": "readme",
        "type": "SampleReadmeProps",
      },
      Object {
        "default": "[ \\"main\\" ]",
        "docs": "Branches which trigger a release.",
        "name": "releaseBranches",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "releaseBranches",
        ],
        "switch": "release-branches",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Automatically release new versions every commit to one of branches in \`releaseBranches\`.",
        "name": "releaseEveryCommit",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "releaseEveryCommit",
        ],
        "switch": "release-every-commit",
        "type": "boolean",
      },
      Object {
        "default": "- no scheduled releases",
        "docs": "CRON schedule to trigger new releases.",
        "name": "releaseSchedule",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "releaseSchedule",
        ],
        "switch": "release-schedule",
        "type": "string",
      },
      Object {
        "default": "false",
        "docs": "Automatically release to npm when new versions are introduced.",
        "name": "releaseToNpm",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "releaseToNpm",
        ],
        "switch": "release-to-npm",
        "type": "boolean",
      },
      Object {
        "default": "- true if not a subproject",
        "docs": "Define a GitHub workflow for releasing from \\"main\\" when new versions are bumped.",
        "name": "releaseWorkflow",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "releaseWorkflow",
        ],
        "switch": "release-workflow",
        "type": "boolean",
      },
      Object {
        "docs": "A set of workflow steps to execute in order to setup the workflow container.",
        "name": "releaseWorkflowSetupSteps",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "releaseWorkflowSetupSteps",
        ],
        "switch": "release-workflow-setup-steps",
        "type": "unknown",
      },
      Object {
        "docs": "The repository is the location where the actual code for your package lives.",
        "name": "repository",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "repository",
        ],
        "switch": "repository",
        "type": "string",
      },
      Object {
        "docs": "If the package.json for your package is not in the root directory (for example if it is part of a monorepo), you can specify the directory in which it lives.",
        "name": "repositoryDirectory",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "repositoryDirectory",
        ],
        "switch": "repository-directory",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Generate one-time sample in \`src/\` and \`test/\` if there are no files there.",
        "name": "sampleCode",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "sampleCode",
        ],
        "switch": "sample-code",
        "type": "boolean",
      },
      Object {
        "default": "{}",
        "docs": "npm scripts to include.",
        "name": "scripts",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "scripts",
        ],
        "switch": "scripts",
        "type": "unknown",
      },
      Object {
        "default": "\\"src\\"",
        "docs": "Typescript sources directory.",
        "name": "srcdir",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "srcdir",
        ],
        "switch": "srcdir",
        "type": "string",
      },
      Object {
        "docs": "Package's Stability.",
        "name": "stability",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "stability",
        ],
        "switch": "stability",
        "type": "string",
      },
      Object {
        "default": "\\"test\\"",
        "docs": "Jest tests directory. Tests files should be named \`xxx.test.ts\`.",
        "name": "testdir",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "testdir",
        ],
        "switch": "testdir",
        "type": "string",
      },
      Object {
        "docs": "Custom TSConfig.",
        "name": "tsconfig",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "tsconfig",
        ],
        "switch": "tsconfig",
        "type": "TypescriptConfigOptions",
      },
      Object {
        "default": "\\"latest\\"",
        "docs": "TypeScript version to use.",
        "name": "typescriptVersion",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "typescriptVersion",
        ],
        "switch": "typescript-version",
        "type": "string",
      },
      Object {
        "default": "\\"yarn install --frozen-lockfile && yarn projen\\"",
        "docs": "Workflow steps to use in order to bootstrap this repo.",
        "name": "workflowBootstrapSteps",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "workflowBootstrapSteps",
        ],
        "switch": "workflow-bootstrap-steps",
        "type": "unknown",
      },
      Object {
        "default": "- default image",
        "docs": "Container image to use for GitHub workflows.",
        "name": "workflowContainerImage",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "workflowContainerImage",
        ],
        "switch": "workflow-container-image",
        "type": "string",
      },
      Object {
        "default": "- same as \`minNodeVersion\`",
        "docs": "The node version to use in GitHub workflows.",
        "name": "workflowNodeVersion",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "workflowNodeVersion",
        ],
        "switch": "workflow-node-version",
        "type": "string",
      },
    ],
    "pjid": "react-ts",
    "typename": "web.ReactTypeScriptProject",
  },
  Object {
    "docs": "TypeScript project.",
    "docsurl": "https://github.com/projen/projen/blob/master/API.md#projen-typescriptproject",
    "fqn": "projen.TypeScriptProject",
    "moduleName": "projen",
    "options": Array [
      Object {
        "default": "true",
        "docs": "Allow the project to include \`peerDependencies\` and \`bundledDependencies\`.",
        "name": "allowLibraryDependencies",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "allowLibraryDependencies",
        ],
        "switch": "allow-library-dependencies",
        "type": "boolean",
      },
      Object {
        "default": "true",
        "docs": "Checks that after build there are no modified files on git.",
        "name": "antitamper",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "antitamper",
        ],
        "switch": "antitamper",
        "type": "boolean",
      },
      Object {
        "default": "\\"dist\\"",
        "docs": "A directory which will contain artifacts to be published to npm.",
        "name": "artifactsDirectory",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "artifactsDirectory",
        ],
        "switch": "artifacts-directory",
        "type": "string",
      },
      Object {
        "docs": "Author's e-mail.",
        "name": "authorEmail",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "authorEmail",
        ],
        "switch": "author-email",
        "type": "string",
      },
      Object {
        "docs": "Author's name.",
        "name": "authorName",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "authorName",
        ],
        "switch": "author-name",
        "type": "string",
      },
      Object {
        "docs": "Author's Organization.",
        "name": "authorOrganization",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "authorOrganization",
        ],
        "switch": "author-organization",
        "type": "boolean",
      },
      Object {
        "docs": "Author's URL / Website.",
        "name": "authorUrl",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "authorUrl",
        ],
        "switch": "author-url",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Automatically add all executables under the \`bin\` directory to your \`package.json\` file under the \`bin\` section.",
        "name": "autoDetectBin",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "autoDetectBin",
        ],
        "switch": "auto-detect-bin",
        "type": "boolean",
      },
      Object {
        "docs": "Binary programs vended with your module.",
        "name": "bin",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "bin",
        ],
        "switch": "bin",
        "type": "unknown",
      },
      Object {
        "default": "- true if not a subproject",
        "docs": "Define a GitHub workflow for building PRs.",
        "name": "buildWorkflow",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "buildWorkflow",
        ],
        "switch": "build-workflow",
        "type": "boolean",
      },
      Object {
        "docs": "List of dependencies to bundle into this module.",
        "name": "bundledDeps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "bundledDeps",
        ],
        "switch": "bundled-deps",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Add a \`clobber\` task which resets the repo to origin.",
        "name": "clobber",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "clobber",
        ],
        "switch": "clobber",
        "type": "boolean",
      },
      Object {
        "default": "false",
        "docs": "Define a GitHub workflow step for sending code coverage metrics to https://codecov.io/ Uses codecov/codecov-action@v1 A secret is required for private repos. Configured with @codeCovTokenSecret.",
        "name": "codeCov",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "codeCov",
        ],
        "switch": "code-cov",
        "type": "boolean",
      },
      Object {
        "default": "- if this option is not specified, only public repositories are supported",
        "docs": "Define the secret name for a specified https://codecov.io/ token A secret is required to send coverage for private repositories.",
        "name": "codeCovTokenSecret",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "codeCovTokenSecret",
        ],
        "switch": "code-cov-token-secret",
        "type": "string",
      },
      Object {
        "default": "- if \`testdir\` is under \`src/**\`, the default is \`true\`, otherwise the default is \`false.",
        "docs": "Compile the code before running tests.",
        "name": "compileBeforeTest",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "compileBeforeTest",
        ],
        "switch": "compile-before-test",
        "type": "boolean",
      },
      Object {
        "default": "- defaults to the value of authorName or \\"\\" if \`authorName\` is undefined.",
        "docs": "License copyright owner.",
        "name": "copyrightOwner",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "copyrightOwner",
        ],
        "switch": "copyright-owner",
        "type": "string",
      },
      Object {
        "default": "- current year",
        "docs": "The copyright years to put in the LICENSE file.",
        "name": "copyrightPeriod",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "copyrightPeriod",
        ],
        "switch": "copyright-period",
        "type": "string",
      },
      Object {
        "default": "\\"main\\"",
        "docs": "The name of the main release branch.",
        "name": "defaultReleaseBranch",
        "parent": "NodeProjectOptions",
        "path": Array [
          "defaultReleaseBranch",
        ],
        "switch": "default-release-branch",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Include dependabot configuration.",
        "name": "dependabot",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "dependabot",
        ],
        "switch": "dependabot",
        "type": "boolean",
      },
      Object {
        "default": "- default options",
        "docs": "Options for dependabot.",
        "name": "dependabotOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "dependabotOptions",
        ],
        "switch": "dependabot-options",
        "type": "DependabotOptions",
      },
      Object {
        "default": "[]",
        "docs": "Runtime dependencies of this module.",
        "name": "deps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "deps",
        ],
        "switch": "deps",
        "type": "unknown",
      },
      Object {
        "docs": "The description is just a string that helps people understand the purpose of the package.",
        "name": "description",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "description",
        ],
        "switch": "description",
        "type": "string",
      },
      Object {
        "default": "false",
        "docs": "Add a VSCode development environment (used for GitHub Codespaces).",
        "name": "devContainer",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "devContainer",
        ],
        "switch": "dev-container",
        "type": "boolean",
      },
      Object {
        "default": "[]",
        "docs": "Build dependencies for this module.",
        "name": "devDeps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "devDeps",
        ],
        "switch": "dev-deps",
        "type": "unknown",
      },
      Object {
        "default": "false",
        "docs": "Do not generate a \`tsconfig.json\` file (used by jsii projects since tsconfig.json is generated by the jsii compiler).",
        "name": "disableTsconfig",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "disableTsconfig",
        ],
        "switch": "disable-tsconfig",
        "type": "boolean",
      },
      Object {
        "default": "false",
        "docs": "Docgen by Typedoc.",
        "name": "docgen",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "docgen",
        ],
        "switch": "docgen",
        "type": "boolean",
      },
      Object {
        "default": "\\"docs\\"",
        "docs": "Docs directory.",
        "name": "docsDirectory",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "docsDirectory",
        ],
        "switch": "docs-directory",
        "type": "string",
      },
      Object {
        "default": "\\"lib/index.js\\"",
        "docs": "Module entrypoint (\`main\` in \`package.json\`).",
        "name": "entrypoint",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "entrypoint",
        ],
        "switch": "entrypoint",
        "type": "string",
      },
      Object {
        "default": "- .d.ts file derived from the project's entrypoint (usually lib/index.d.ts)",
        "docs": "The .d.ts file that includes the type declarations for this module.",
        "name": "entrypointTypes",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "entrypointTypes",
        ],
        "switch": "entrypoint-types",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Setup eslint.",
        "name": "eslint",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "eslint",
        ],
        "switch": "eslint",
        "type": "boolean",
      },
      Object {
        "default": "- opinionated default options",
        "docs": "Eslint options.",
        "name": "eslintOptions",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "eslintOptions",
        ],
        "switch": "eslint-options",
        "type": "EslintOptions",
      },
      Object {
        "docs": "Additional entries to .gitignore.",
        "name": "gitignore",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "gitignore",
        ],
        "switch": "gitignore",
        "type": "unknown",
      },
      Object {
        "default": "false",
        "docs": "Add a Gitpod development environment.",
        "name": "gitpod",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "gitpod",
        ],
        "switch": "gitpod",
        "type": "boolean",
      },
      Object {
        "docs": "Package's Homepage / Website.",
        "name": "homepage",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "homepage",
        ],
        "switch": "homepage",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Setup jest unit tests.",
        "name": "jest",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "jest",
        ],
        "switch": "jest",
        "type": "boolean",
      },
      Object {
        "default": "- default options",
        "docs": "Jest options.",
        "name": "jestOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "jestOptions",
        ],
        "switch": "jest-options",
        "type": "JestOptions",
      },
      Object {
        "default": "\\"latest\\"",
        "docs": "Version requirement of \`jsii-release\` which is used to publish modules to npm.",
        "name": "jsiiReleaseVersion",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "jsiiReleaseVersion",
        ],
        "switch": "jsii-release-version",
        "type": "string",
      },
      Object {
        "docs": "Keywords to include in \`package.json\`.",
        "name": "keywords",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "keywords",
        ],
        "switch": "keywords",
        "type": "unknown",
      },
      Object {
        "default": "\\"lib\\"",
        "docs": "Typescript  artifacts output directory.",
        "name": "libdir",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "libdir",
        ],
        "switch": "libdir",
        "type": "string",
      },
      Object {
        "default": "\\"Apache-2.0\\"",
        "docs": "License's SPDX identifier.",
        "name": "license",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "license",
        ],
        "switch": "license",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Indicates if a license should be added.",
        "name": "licensed",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "licensed",
        ],
        "switch": "licensed",
        "type": "boolean",
      },
      Object {
        "default": "{}",
        "docs": "Configure logging options such as verbosity.",
        "name": "logging",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "logging",
        ],
        "switch": "logging",
        "type": "LoggerOptions",
      },
      Object {
        "default": "- no max",
        "docs": "Minimum node.js version to require via \`engines\` (inclusive).",
        "name": "maxNodeVersion",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "maxNodeVersion",
        ],
        "switch": "max-node-version",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Whether mergify should be enabled on this repository or not.",
        "name": "mergify",
        "optional": true,
        "parent": "GitHubOptions",
        "path": Array [
          "mergify",
        ],
        "switch": "mergify",
        "type": "boolean",
      },
      Object {
        "default": "\\"auto-merge\\"",
        "docs": "Automatically merge PRs that build successfully and have this label.",
        "name": "mergifyAutoMergeLabel",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "mergifyAutoMergeLabel",
        ],
        "switch": "mergify-auto-merge-label",
        "type": "string",
      },
      Object {
        "default": "- default options",
        "docs": "Options for mergify.",
        "name": "mergifyOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "mergifyOptions",
        ],
        "switch": "mergify-options",
        "type": "MergifyOptions",
      },
      Object {
        "default": "- no \\"engines\\" specified",
        "docs": "Minimum Node.js version to require via package.json \`engines\` (inclusive).",
        "name": "minNodeVersion",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "minNodeVersion",
        ],
        "switch": "min-node-version",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Automatically update files modified during builds to pull-request branches.",
        "name": "mutableBuild",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "mutableBuild",
        ],
        "switch": "mutable-build",
        "type": "boolean",
      },
      Object {
        "default": "$BASEDIR",
        "docs": "This is the name of your project.",
        "name": "name",
        "parent": "ProjectOptions",
        "path": Array [
          "name",
        ],
        "switch": "name",
        "type": "string",
      },
      Object {
        "default": "- for scoped packages (e.g. \`foo@bar\`), the default is
\`NpmAccess.RESTRICTED\`, for non-scoped packages, the default is
\`NpmAccess.PUBLIC\`.",
        "docs": "Access level of the npm package.",
        "name": "npmAccess",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "npmAccess",
        ],
        "switch": "npm-access",
        "type": "NpmAccess",
      },
      Object {
        "default": "\\"latest\\"",
        "docs": "Tags can be used to provide an alias instead of version numbers.",
        "name": "npmDistTag",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "npmDistTag",
        ],
        "switch": "npm-dist-tag",
        "type": "string",
      },
      Object {
        "docs": "Additional entries to .npmignore.",
        "name": "npmignore",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "npmignore",
        ],
        "switch": "npmignore",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Defines an .npmignore file. Normally this is only needed for libraries that are packaged as tarballs.",
        "name": "npmignoreEnabled",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "npmignoreEnabled",
        ],
        "switch": "npmignore-enabled",
        "type": "boolean",
      },
      Object {
        "deprecated": true,
        "docs": "The host name of the npm registry to publish to.",
        "name": "npmRegistry",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "npmRegistry",
        ],
        "switch": "npm-registry",
        "type": "string",
      },
      Object {
        "default": "\\"https://registry.npmjs.org\\"",
        "docs": "The base URL of the npm package registry.",
        "name": "npmRegistryUrl",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "npmRegistryUrl",
        ],
        "switch": "npm-registry-url",
        "type": "string",
      },
      Object {
        "default": "NpmTaskExecution.PROJEN",
        "docs": "Determines how tasks are executed when invoked as npm scripts (yarn/npm run xyz).",
        "name": "npmTaskExecution",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "npmTaskExecution",
        ],
        "switch": "npm-task-execution",
        "type": "NpmTaskExecution",
      },
      Object {
        "default": "\\"NPM_TOKEN\\"",
        "docs": "GitHub secret which contains the NPM token to use when publishing packages.",
        "name": "npmTokenSecret",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "npmTokenSecret",
        ],
        "switch": "npm-token-secret",
        "type": "string",
      },
      Object {
        "default": "\\".\\"",
        "docs": "The root directory of the project.",
        "name": "outdir",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "outdir",
        ],
        "switch": "outdir",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Defines a \`yarn package\` command that will produce a tarball and place it under \`dist/js\`.",
        "name": "package",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "package",
        ],
        "switch": "package",
        "type": "boolean",
      },
      Object {
        "default": "NodePackageManager.YARN",
        "docs": "The Node Package Manager used to execute scripts.",
        "name": "packageManager",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "packageManager",
        ],
        "switch": "package-manager",
        "type": "NodePackageManager",
      },
      Object {
        "default": "- defaults to project name",
        "docs": "The \\"name\\" in package.json.",
        "name": "packageName",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "packageName",
        ],
        "switch": "package-name",
        "type": "string",
      },
      Object {
        "docs": "The parent project, if this project is part of a bigger project.",
        "name": "parent",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "parent",
        ],
        "switch": "parent",
        "type": "Project",
      },
      Object {
        "docs": "Options for \`peerDeps\`.",
        "name": "peerDependencyOptions",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "peerDependencyOptions",
        ],
        "switch": "peer-dependency-options",
        "type": "PeerDependencyOptions",
      },
      Object {
        "default": "[]",
        "docs": "Peer dependencies for this module.",
        "name": "peerDeps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "peerDeps",
        ],
        "switch": "peer-deps",
        "type": "unknown",
      },
      Object {
        "default": "ProjectType.UNKNOWN",
        "docs": "Which type of project this is (library/app).",
        "name": "projectType",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "projectType",
        ],
        "switch": "project-type",
        "type": "ProjectType",
      },
      Object {
        "default": "\\"npx projen\\"",
        "docs": "The shell command to use in order to run the projen CLI.",
        "name": "projenCommand",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "projenCommand",
        ],
        "switch": "projen-command",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Indicates of \\"projen\\" should be installed as a devDependency.",
        "name": "projenDevDependency",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenDevDependency",
        ],
        "switch": "projen-dev-dependency",
        "type": "boolean",
      },
      Object {
        "default": "true",
        "docs": "Execute \`projen\` as the first step of the \`build\` task to synthesize project files.",
        "name": "projenDuringBuild",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenDuringBuild",
        ],
        "switch": "projen-during-build",
        "type": "boolean",
      },
      Object {
        "default": "true",
        "docs": "Generate (once) .projenrc.js (in JavaScript). Set to \`false\` in order to disable .projenrc.js generation.",
        "name": "projenrcJs",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenrcJs",
        ],
        "switch": "projenrc-js",
        "type": "boolean",
      },
      Object {
        "default": "- default options",
        "docs": "Options for .projenrc.js.",
        "name": "projenrcJsOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenrcJsOptions",
        ],
        "switch": "projenrc-js-options",
        "type": "ProjenrcOptions",
      },
      Object {
        "default": "false",
        "docs": "Use TypeScript for your projenrc file (\`.projenrc.ts\`).",
        "name": "projenrcTs",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "projenrcTs",
        ],
        "switch": "projenrc-ts",
        "type": "boolean",
      },
      Object {
        "docs": "Options for .projenrc.ts.",
        "name": "projenrcTsOptions",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "projenrcTsOptions",
        ],
        "switch": "projenrc-ts-options",
        "type": "ProjenrcOptions",
      },
      Object {
        "default": "- \\"true\\" if mergify auto-merge is enabled (default)",
        "docs": "Automatically merge projen upgrade PRs when build passes.",
        "name": "projenUpgradeAutoMerge",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenUpgradeAutoMerge",
        ],
        "switch": "projen-upgrade-auto-merge",
        "type": "boolean",
      },
      Object {
        "default": "[ \\"0 6 * * *\\" ]",
        "docs": "Customize the projenUpgrade schedule in cron expression.",
        "name": "projenUpgradeSchedule",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenUpgradeSchedule",
        ],
        "switch": "projen-upgrade-schedule",
        "type": "unknown",
      },
      Object {
        "default": "- no automatic projen upgrade pull requests",
        "docs": "Periodically submits a pull request for projen upgrades (executes \`yarn projen:upgrade\`).",
        "name": "projenUpgradeSecret",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenUpgradeSecret",
        ],
        "switch": "projen-upgrade-secret",
        "type": "string",
      },
      Object {
        "default": "- Defaults to the latest version.",
        "docs": "Version of projen to install.",
        "name": "projenVersion",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenVersion",
        ],
        "switch": "projen-version",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Include a GitHub pull request template.",
        "name": "pullRequestTemplate",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "pullRequestTemplate",
        ],
        "switch": "pull-request-template",
        "type": "boolean",
      },
      Object {
        "default": "- default content",
        "docs": "The contents of the pull request template.",
        "name": "pullRequestTemplateContents",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "pullRequestTemplateContents",
        ],
        "switch": "pull-request-template-contents",
        "type": "string",
      },
      Object {
        "default": "- { filename: 'README.md', contents: '# replace this' }",
        "docs": "The README setup.",
        "name": "readme",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "readme",
        ],
        "switch": "readme",
        "type": "SampleReadmeProps",
      },
      Object {
        "default": "[ \\"main\\" ]",
        "docs": "Branches which trigger a release.",
        "name": "releaseBranches",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "releaseBranches",
        ],
        "switch": "release-branches",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Automatically release new versions every commit to one of branches in \`releaseBranches\`.",
        "name": "releaseEveryCommit",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "releaseEveryCommit",
        ],
        "switch": "release-every-commit",
        "type": "boolean",
      },
      Object {
        "default": "- no scheduled releases",
        "docs": "CRON schedule to trigger new releases.",
        "name": "releaseSchedule",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "releaseSchedule",
        ],
        "switch": "release-schedule",
        "type": "string",
      },
      Object {
        "default": "false",
        "docs": "Automatically release to npm when new versions are introduced.",
        "name": "releaseToNpm",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "releaseToNpm",
        ],
        "switch": "release-to-npm",
        "type": "boolean",
      },
      Object {
        "default": "- true if not a subproject",
        "docs": "Define a GitHub workflow for releasing from \\"main\\" when new versions are bumped.",
        "name": "releaseWorkflow",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "releaseWorkflow",
        ],
        "switch": "release-workflow",
        "type": "boolean",
      },
      Object {
        "docs": "A set of workflow steps to execute in order to setup the workflow container.",
        "name": "releaseWorkflowSetupSteps",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "releaseWorkflowSetupSteps",
        ],
        "switch": "release-workflow-setup-steps",
        "type": "unknown",
      },
      Object {
        "docs": "The repository is the location where the actual code for your package lives.",
        "name": "repository",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "repository",
        ],
        "switch": "repository",
        "type": "string",
      },
      Object {
        "docs": "If the package.json for your package is not in the root directory (for example if it is part of a monorepo), you can specify the directory in which it lives.",
        "name": "repositoryDirectory",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "repositoryDirectory",
        ],
        "switch": "repository-directory",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Generate one-time sample in \`src/\` and \`test/\` if there are no files there.",
        "name": "sampleCode",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "sampleCode",
        ],
        "switch": "sample-code",
        "type": "boolean",
      },
      Object {
        "default": "{}",
        "docs": "npm scripts to include.",
        "name": "scripts",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "scripts",
        ],
        "switch": "scripts",
        "type": "unknown",
      },
      Object {
        "default": "\\"src\\"",
        "docs": "Typescript sources directory.",
        "name": "srcdir",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "srcdir",
        ],
        "switch": "srcdir",
        "type": "string",
      },
      Object {
        "docs": "Package's Stability.",
        "name": "stability",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "stability",
        ],
        "switch": "stability",
        "type": "string",
      },
      Object {
        "default": "\\"test\\"",
        "docs": "Jest tests directory. Tests files should be named \`xxx.test.ts\`.",
        "name": "testdir",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "testdir",
        ],
        "switch": "testdir",
        "type": "string",
      },
      Object {
        "docs": "Custom TSConfig.",
        "name": "tsconfig",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "tsconfig",
        ],
        "switch": "tsconfig",
        "type": "TypescriptConfigOptions",
      },
      Object {
        "default": "\\"latest\\"",
        "docs": "TypeScript version to use.",
        "name": "typescriptVersion",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "typescriptVersion",
        ],
        "switch": "typescript-version",
        "type": "string",
      },
      Object {
        "default": "\\"yarn install --frozen-lockfile && yarn projen\\"",
        "docs": "Workflow steps to use in order to bootstrap this repo.",
        "name": "workflowBootstrapSteps",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "workflowBootstrapSteps",
        ],
        "switch": "workflow-bootstrap-steps",
        "type": "unknown",
      },
      Object {
        "default": "- default image",
        "docs": "Container image to use for GitHub workflows.",
        "name": "workflowContainerImage",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "workflowContainerImage",
        ],
        "switch": "workflow-container-image",
        "type": "string",
      },
      Object {
        "default": "- same as \`minNodeVersion\`",
        "docs": "The node version to use in GitHub workflows.",
        "name": "workflowNodeVersion",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "workflowNodeVersion",
        ],
        "switch": "workflow-node-version",
        "type": "string",
      },
    ],
    "pjid": "typescript",
    "typename": "TypeScriptProject",
  },
  Object {
    "docs": "TypeScript app.",
    "docsurl": "https://github.com/projen/projen/blob/master/API.md#projen-typescriptappproject",
    "fqn": "projen.TypeScriptAppProject",
    "moduleName": "projen",
    "options": Array [
      Object {
        "default": "true",
        "docs": "Allow the project to include \`peerDependencies\` and \`bundledDependencies\`.",
        "name": "allowLibraryDependencies",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "allowLibraryDependencies",
        ],
        "switch": "allow-library-dependencies",
        "type": "boolean",
      },
      Object {
        "default": "true",
        "docs": "Checks that after build there are no modified files on git.",
        "name": "antitamper",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "antitamper",
        ],
        "switch": "antitamper",
        "type": "boolean",
      },
      Object {
        "default": "\\"dist\\"",
        "docs": "A directory which will contain artifacts to be published to npm.",
        "name": "artifactsDirectory",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "artifactsDirectory",
        ],
        "switch": "artifacts-directory",
        "type": "string",
      },
      Object {
        "docs": "Author's e-mail.",
        "name": "authorEmail",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "authorEmail",
        ],
        "switch": "author-email",
        "type": "string",
      },
      Object {
        "docs": "Author's name.",
        "name": "authorName",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "authorName",
        ],
        "switch": "author-name",
        "type": "string",
      },
      Object {
        "docs": "Author's Organization.",
        "name": "authorOrganization",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "authorOrganization",
        ],
        "switch": "author-organization",
        "type": "boolean",
      },
      Object {
        "docs": "Author's URL / Website.",
        "name": "authorUrl",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "authorUrl",
        ],
        "switch": "author-url",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Automatically add all executables under the \`bin\` directory to your \`package.json\` file under the \`bin\` section.",
        "name": "autoDetectBin",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "autoDetectBin",
        ],
        "switch": "auto-detect-bin",
        "type": "boolean",
      },
      Object {
        "docs": "Binary programs vended with your module.",
        "name": "bin",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "bin",
        ],
        "switch": "bin",
        "type": "unknown",
      },
      Object {
        "default": "- true if not a subproject",
        "docs": "Define a GitHub workflow for building PRs.",
        "name": "buildWorkflow",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "buildWorkflow",
        ],
        "switch": "build-workflow",
        "type": "boolean",
      },
      Object {
        "docs": "List of dependencies to bundle into this module.",
        "name": "bundledDeps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "bundledDeps",
        ],
        "switch": "bundled-deps",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Add a \`clobber\` task which resets the repo to origin.",
        "name": "clobber",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "clobber",
        ],
        "switch": "clobber",
        "type": "boolean",
      },
      Object {
        "default": "false",
        "docs": "Define a GitHub workflow step for sending code coverage metrics to https://codecov.io/ Uses codecov/codecov-action@v1 A secret is required for private repos. Configured with @codeCovTokenSecret.",
        "name": "codeCov",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "codeCov",
        ],
        "switch": "code-cov",
        "type": "boolean",
      },
      Object {
        "default": "- if this option is not specified, only public repositories are supported",
        "docs": "Define the secret name for a specified https://codecov.io/ token A secret is required to send coverage for private repositories.",
        "name": "codeCovTokenSecret",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "codeCovTokenSecret",
        ],
        "switch": "code-cov-token-secret",
        "type": "string",
      },
      Object {
        "default": "- if \`testdir\` is under \`src/**\`, the default is \`true\`, otherwise the default is \`false.",
        "docs": "Compile the code before running tests.",
        "name": "compileBeforeTest",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "compileBeforeTest",
        ],
        "switch": "compile-before-test",
        "type": "boolean",
      },
      Object {
        "default": "- defaults to the value of authorName or \\"\\" if \`authorName\` is undefined.",
        "docs": "License copyright owner.",
        "name": "copyrightOwner",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "copyrightOwner",
        ],
        "switch": "copyright-owner",
        "type": "string",
      },
      Object {
        "default": "- current year",
        "docs": "The copyright years to put in the LICENSE file.",
        "name": "copyrightPeriod",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "copyrightPeriod",
        ],
        "switch": "copyright-period",
        "type": "string",
      },
      Object {
        "default": "\\"main\\"",
        "docs": "The name of the main release branch.",
        "name": "defaultReleaseBranch",
        "parent": "NodeProjectOptions",
        "path": Array [
          "defaultReleaseBranch",
        ],
        "switch": "default-release-branch",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Include dependabot configuration.",
        "name": "dependabot",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "dependabot",
        ],
        "switch": "dependabot",
        "type": "boolean",
      },
      Object {
        "default": "- default options",
        "docs": "Options for dependabot.",
        "name": "dependabotOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "dependabotOptions",
        ],
        "switch": "dependabot-options",
        "type": "DependabotOptions",
      },
      Object {
        "default": "[]",
        "docs": "Runtime dependencies of this module.",
        "name": "deps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "deps",
        ],
        "switch": "deps",
        "type": "unknown",
      },
      Object {
        "docs": "The description is just a string that helps people understand the purpose of the package.",
        "name": "description",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "description",
        ],
        "switch": "description",
        "type": "string",
      },
      Object {
        "default": "false",
        "docs": "Add a VSCode development environment (used for GitHub Codespaces).",
        "name": "devContainer",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "devContainer",
        ],
        "switch": "dev-container",
        "type": "boolean",
      },
      Object {
        "default": "[]",
        "docs": "Build dependencies for this module.",
        "name": "devDeps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "devDeps",
        ],
        "switch": "dev-deps",
        "type": "unknown",
      },
      Object {
        "default": "false",
        "docs": "Do not generate a \`tsconfig.json\` file (used by jsii projects since tsconfig.json is generated by the jsii compiler).",
        "name": "disableTsconfig",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "disableTsconfig",
        ],
        "switch": "disable-tsconfig",
        "type": "boolean",
      },
      Object {
        "default": "false",
        "docs": "Docgen by Typedoc.",
        "name": "docgen",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "docgen",
        ],
        "switch": "docgen",
        "type": "boolean",
      },
      Object {
        "default": "\\"docs\\"",
        "docs": "Docs directory.",
        "name": "docsDirectory",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "docsDirectory",
        ],
        "switch": "docs-directory",
        "type": "string",
      },
      Object {
        "default": "\\"lib/index.js\\"",
        "docs": "Module entrypoint (\`main\` in \`package.json\`).",
        "name": "entrypoint",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "entrypoint",
        ],
        "switch": "entrypoint",
        "type": "string",
      },
      Object {
        "default": "- .d.ts file derived from the project's entrypoint (usually lib/index.d.ts)",
        "docs": "The .d.ts file that includes the type declarations for this module.",
        "name": "entrypointTypes",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "entrypointTypes",
        ],
        "switch": "entrypoint-types",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Setup eslint.",
        "name": "eslint",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "eslint",
        ],
        "switch": "eslint",
        "type": "boolean",
      },
      Object {
        "default": "- opinionated default options",
        "docs": "Eslint options.",
        "name": "eslintOptions",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "eslintOptions",
        ],
        "switch": "eslint-options",
        "type": "EslintOptions",
      },
      Object {
        "docs": "Additional entries to .gitignore.",
        "name": "gitignore",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "gitignore",
        ],
        "switch": "gitignore",
        "type": "unknown",
      },
      Object {
        "default": "false",
        "docs": "Add a Gitpod development environment.",
        "name": "gitpod",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "gitpod",
        ],
        "switch": "gitpod",
        "type": "boolean",
      },
      Object {
        "docs": "Package's Homepage / Website.",
        "name": "homepage",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "homepage",
        ],
        "switch": "homepage",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Setup jest unit tests.",
        "name": "jest",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "jest",
        ],
        "switch": "jest",
        "type": "boolean",
      },
      Object {
        "default": "- default options",
        "docs": "Jest options.",
        "name": "jestOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "jestOptions",
        ],
        "switch": "jest-options",
        "type": "JestOptions",
      },
      Object {
        "default": "\\"latest\\"",
        "docs": "Version requirement of \`jsii-release\` which is used to publish modules to npm.",
        "name": "jsiiReleaseVersion",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "jsiiReleaseVersion",
        ],
        "switch": "jsii-release-version",
        "type": "string",
      },
      Object {
        "docs": "Keywords to include in \`package.json\`.",
        "name": "keywords",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "keywords",
        ],
        "switch": "keywords",
        "type": "unknown",
      },
      Object {
        "default": "\\"lib\\"",
        "docs": "Typescript  artifacts output directory.",
        "name": "libdir",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "libdir",
        ],
        "switch": "libdir",
        "type": "string",
      },
      Object {
        "default": "\\"Apache-2.0\\"",
        "docs": "License's SPDX identifier.",
        "name": "license",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "license",
        ],
        "switch": "license",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Indicates if a license should be added.",
        "name": "licensed",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "licensed",
        ],
        "switch": "licensed",
        "type": "boolean",
      },
      Object {
        "default": "{}",
        "docs": "Configure logging options such as verbosity.",
        "name": "logging",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "logging",
        ],
        "switch": "logging",
        "type": "LoggerOptions",
      },
      Object {
        "default": "- no max",
        "docs": "Minimum node.js version to require via \`engines\` (inclusive).",
        "name": "maxNodeVersion",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "maxNodeVersion",
        ],
        "switch": "max-node-version",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Whether mergify should be enabled on this repository or not.",
        "name": "mergify",
        "optional": true,
        "parent": "GitHubOptions",
        "path": Array [
          "mergify",
        ],
        "switch": "mergify",
        "type": "boolean",
      },
      Object {
        "default": "\\"auto-merge\\"",
        "docs": "Automatically merge PRs that build successfully and have this label.",
        "name": "mergifyAutoMergeLabel",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "mergifyAutoMergeLabel",
        ],
        "switch": "mergify-auto-merge-label",
        "type": "string",
      },
      Object {
        "default": "- default options",
        "docs": "Options for mergify.",
        "name": "mergifyOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "mergifyOptions",
        ],
        "switch": "mergify-options",
        "type": "MergifyOptions",
      },
      Object {
        "default": "- no \\"engines\\" specified",
        "docs": "Minimum Node.js version to require via package.json \`engines\` (inclusive).",
        "name": "minNodeVersion",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "minNodeVersion",
        ],
        "switch": "min-node-version",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Automatically update files modified during builds to pull-request branches.",
        "name": "mutableBuild",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "mutableBuild",
        ],
        "switch": "mutable-build",
        "type": "boolean",
      },
      Object {
        "default": "$BASEDIR",
        "docs": "This is the name of your project.",
        "name": "name",
        "parent": "ProjectOptions",
        "path": Array [
          "name",
        ],
        "switch": "name",
        "type": "string",
      },
      Object {
        "default": "- for scoped packages (e.g. \`foo@bar\`), the default is
\`NpmAccess.RESTRICTED\`, for non-scoped packages, the default is
\`NpmAccess.PUBLIC\`.",
        "docs": "Access level of the npm package.",
        "name": "npmAccess",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "npmAccess",
        ],
        "switch": "npm-access",
        "type": "NpmAccess",
      },
      Object {
        "default": "\\"latest\\"",
        "docs": "Tags can be used to provide an alias instead of version numbers.",
        "name": "npmDistTag",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "npmDistTag",
        ],
        "switch": "npm-dist-tag",
        "type": "string",
      },
      Object {
        "docs": "Additional entries to .npmignore.",
        "name": "npmignore",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "npmignore",
        ],
        "switch": "npmignore",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Defines an .npmignore file. Normally this is only needed for libraries that are packaged as tarballs.",
        "name": "npmignoreEnabled",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "npmignoreEnabled",
        ],
        "switch": "npmignore-enabled",
        "type": "boolean",
      },
      Object {
        "deprecated": true,
        "docs": "The host name of the npm registry to publish to.",
        "name": "npmRegistry",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "npmRegistry",
        ],
        "switch": "npm-registry",
        "type": "string",
      },
      Object {
        "default": "\\"https://registry.npmjs.org\\"",
        "docs": "The base URL of the npm package registry.",
        "name": "npmRegistryUrl",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "npmRegistryUrl",
        ],
        "switch": "npm-registry-url",
        "type": "string",
      },
      Object {
        "default": "NpmTaskExecution.PROJEN",
        "docs": "Determines how tasks are executed when invoked as npm scripts (yarn/npm run xyz).",
        "name": "npmTaskExecution",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "npmTaskExecution",
        ],
        "switch": "npm-task-execution",
        "type": "NpmTaskExecution",
      },
      Object {
        "default": "\\"NPM_TOKEN\\"",
        "docs": "GitHub secret which contains the NPM token to use when publishing packages.",
        "name": "npmTokenSecret",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "npmTokenSecret",
        ],
        "switch": "npm-token-secret",
        "type": "string",
      },
      Object {
        "default": "\\".\\"",
        "docs": "The root directory of the project.",
        "name": "outdir",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "outdir",
        ],
        "switch": "outdir",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Defines a \`yarn package\` command that will produce a tarball and place it under \`dist/js\`.",
        "name": "package",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "package",
        ],
        "switch": "package",
        "type": "boolean",
      },
      Object {
        "default": "NodePackageManager.YARN",
        "docs": "The Node Package Manager used to execute scripts.",
        "name": "packageManager",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "packageManager",
        ],
        "switch": "package-manager",
        "type": "NodePackageManager",
      },
      Object {
        "default": "- defaults to project name",
        "docs": "The \\"name\\" in package.json.",
        "name": "packageName",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "packageName",
        ],
        "switch": "package-name",
        "type": "string",
      },
      Object {
        "docs": "The parent project, if this project is part of a bigger project.",
        "name": "parent",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "parent",
        ],
        "switch": "parent",
        "type": "Project",
      },
      Object {
        "docs": "Options for \`peerDeps\`.",
        "name": "peerDependencyOptions",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "peerDependencyOptions",
        ],
        "switch": "peer-dependency-options",
        "type": "PeerDependencyOptions",
      },
      Object {
        "default": "[]",
        "docs": "Peer dependencies for this module.",
        "name": "peerDeps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "peerDeps",
        ],
        "switch": "peer-deps",
        "type": "unknown",
      },
      Object {
        "default": "ProjectType.UNKNOWN",
        "docs": "Which type of project this is (library/app).",
        "name": "projectType",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "projectType",
        ],
        "switch": "project-type",
        "type": "ProjectType",
      },
      Object {
        "default": "\\"npx projen\\"",
        "docs": "The shell command to use in order to run the projen CLI.",
        "name": "projenCommand",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "projenCommand",
        ],
        "switch": "projen-command",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Indicates of \\"projen\\" should be installed as a devDependency.",
        "name": "projenDevDependency",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenDevDependency",
        ],
        "switch": "projen-dev-dependency",
        "type": "boolean",
      },
      Object {
        "default": "true",
        "docs": "Execute \`projen\` as the first step of the \`build\` task to synthesize project files.",
        "name": "projenDuringBuild",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenDuringBuild",
        ],
        "switch": "projen-during-build",
        "type": "boolean",
      },
      Object {
        "default": "true",
        "docs": "Generate (once) .projenrc.js (in JavaScript). Set to \`false\` in order to disable .projenrc.js generation.",
        "name": "projenrcJs",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenrcJs",
        ],
        "switch": "projenrc-js",
        "type": "boolean",
      },
      Object {
        "default": "- default options",
        "docs": "Options for .projenrc.js.",
        "name": "projenrcJsOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenrcJsOptions",
        ],
        "switch": "projenrc-js-options",
        "type": "ProjenrcOptions",
      },
      Object {
        "default": "false",
        "docs": "Use TypeScript for your projenrc file (\`.projenrc.ts\`).",
        "name": "projenrcTs",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "projenrcTs",
        ],
        "switch": "projenrc-ts",
        "type": "boolean",
      },
      Object {
        "docs": "Options for .projenrc.ts.",
        "name": "projenrcTsOptions",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "projenrcTsOptions",
        ],
        "switch": "projenrc-ts-options",
        "type": "ProjenrcOptions",
      },
      Object {
        "default": "- \\"true\\" if mergify auto-merge is enabled (default)",
        "docs": "Automatically merge projen upgrade PRs when build passes.",
        "name": "projenUpgradeAutoMerge",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenUpgradeAutoMerge",
        ],
        "switch": "projen-upgrade-auto-merge",
        "type": "boolean",
      },
      Object {
        "default": "[ \\"0 6 * * *\\" ]",
        "docs": "Customize the projenUpgrade schedule in cron expression.",
        "name": "projenUpgradeSchedule",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenUpgradeSchedule",
        ],
        "switch": "projen-upgrade-schedule",
        "type": "unknown",
      },
      Object {
        "default": "- no automatic projen upgrade pull requests",
        "docs": "Periodically submits a pull request for projen upgrades (executes \`yarn projen:upgrade\`).",
        "name": "projenUpgradeSecret",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenUpgradeSecret",
        ],
        "switch": "projen-upgrade-secret",
        "type": "string",
      },
      Object {
        "default": "- Defaults to the latest version.",
        "docs": "Version of projen to install.",
        "name": "projenVersion",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "projenVersion",
        ],
        "switch": "projen-version",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Include a GitHub pull request template.",
        "name": "pullRequestTemplate",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "pullRequestTemplate",
        ],
        "switch": "pull-request-template",
        "type": "boolean",
      },
      Object {
        "default": "- default content",
        "docs": "The contents of the pull request template.",
        "name": "pullRequestTemplateContents",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "pullRequestTemplateContents",
        ],
        "switch": "pull-request-template-contents",
        "type": "string",
      },
      Object {
        "default": "- { filename: 'README.md', contents: '# replace this' }",
        "docs": "The README setup.",
        "name": "readme",
        "optional": true,
        "parent": "ProjectOptions",
        "path": Array [
          "readme",
        ],
        "switch": "readme",
        "type": "SampleReadmeProps",
      },
      Object {
        "default": "[ \\"main\\" ]",
        "docs": "Branches which trigger a release.",
        "name": "releaseBranches",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "releaseBranches",
        ],
        "switch": "release-branches",
        "type": "unknown",
      },
      Object {
        "default": "true",
        "docs": "Automatically release new versions every commit to one of branches in \`releaseBranches\`.",
        "name": "releaseEveryCommit",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "releaseEveryCommit",
        ],
        "switch": "release-every-commit",
        "type": "boolean",
      },
      Object {
        "default": "- no scheduled releases",
        "docs": "CRON schedule to trigger new releases.",
        "name": "releaseSchedule",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "releaseSchedule",
        ],
        "switch": "release-schedule",
        "type": "string",
      },
      Object {
        "default": "false",
        "docs": "Automatically release to npm when new versions are introduced.",
        "name": "releaseToNpm",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "releaseToNpm",
        ],
        "switch": "release-to-npm",
        "type": "boolean",
      },
      Object {
        "default": "- true if not a subproject",
        "docs": "Define a GitHub workflow for releasing from \\"main\\" when new versions are bumped.",
        "name": "releaseWorkflow",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "releaseWorkflow",
        ],
        "switch": "release-workflow",
        "type": "boolean",
      },
      Object {
        "docs": "A set of workflow steps to execute in order to setup the workflow container.",
        "name": "releaseWorkflowSetupSteps",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "releaseWorkflowSetupSteps",
        ],
        "switch": "release-workflow-setup-steps",
        "type": "unknown",
      },
      Object {
        "docs": "The repository is the location where the actual code for your package lives.",
        "name": "repository",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "repository",
        ],
        "switch": "repository",
        "type": "string",
      },
      Object {
        "docs": "If the package.json for your package is not in the root directory (for example if it is part of a monorepo), you can specify the directory in which it lives.",
        "name": "repositoryDirectory",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "repositoryDirectory",
        ],
        "switch": "repository-directory",
        "type": "string",
      },
      Object {
        "default": "true",
        "docs": "Generate one-time sample in \`src/\` and \`test/\` if there are no files there.",
        "name": "sampleCode",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "sampleCode",
        ],
        "switch": "sample-code",
        "type": "boolean",
      },
      Object {
        "default": "{}",
        "docs": "npm scripts to include.",
        "name": "scripts",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "scripts",
        ],
        "switch": "scripts",
        "type": "unknown",
      },
      Object {
        "default": "\\"src\\"",
        "docs": "Typescript sources directory.",
        "name": "srcdir",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "srcdir",
        ],
        "switch": "srcdir",
        "type": "string",
      },
      Object {
        "docs": "Package's Stability.",
        "name": "stability",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": Array [
          "stability",
        ],
        "switch": "stability",
        "type": "string",
      },
      Object {
        "default": "\\"test\\"",
        "docs": "Jest tests directory. Tests files should be named \`xxx.test.ts\`.",
        "name": "testdir",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "testdir",
        ],
        "switch": "testdir",
        "type": "string",
      },
      Object {
        "docs": "Custom TSConfig.",
        "name": "tsconfig",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "tsconfig",
        ],
        "switch": "tsconfig",
        "type": "TypescriptConfigOptions",
      },
      Object {
        "default": "\\"latest\\"",
        "docs": "TypeScript version to use.",
        "name": "typescriptVersion",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": Array [
          "typescriptVersion",
        ],
        "switch": "typescript-version",
        "type": "string",
      },
      Object {
        "default": "\\"yarn install --frozen-lockfile && yarn projen\\"",
        "docs": "Workflow steps to use in order to bootstrap this repo.",
        "name": "workflowBootstrapSteps",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "workflowBootstrapSteps",
        ],
        "switch": "workflow-bootstrap-steps",
        "type": "unknown",
      },
      Object {
        "default": "- default image",
        "docs": "Container image to use for GitHub workflows.",
        "name": "workflowContainerImage",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "workflowContainerImage",
        ],
        "switch": "workflow-container-image",
        "type": "string",
      },
      Object {
        "default": "- same as \`minNodeVersion\`",
        "docs": "The node version to use in GitHub workflows.",
        "name": "workflowNodeVersion",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": Array [
          "workflowNodeVersion",
        ],
        "switch": "workflow-node-version",
        "type": "string",
      },
    ],
    "pjid": "typescript-app",
    "typename": "TypeScriptAppProject",
  },
]
`;
