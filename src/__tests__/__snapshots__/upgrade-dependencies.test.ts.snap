// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`custom options 1`] = `
"# ~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".

name: upgrade-dependencies
on:
  workflow_dispatch: {}
  schedule:
    - cron: 0 0 1 * *
jobs:
  upgrade-dependencies:
    name: Upgrade & Build
    permissions: read-all
    runs-on: ubuntu-latest
    outputs:
      build-conclusion: \${{ steps.build.outputs.conclusion }}
      build-log: \${{ steps.build.outputs.log }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install dependencies
        run: yarn install --check-files --frozen-lockfile
      - name: Upgrade dependencies
        run: npx projen deps:upgrade
      - name: Build
        id: build
        run: >-
          npx projen build && echo \\"::set-output name=conclusion::success\\" ||
          echo \\"::set-output name=conclusion::failure\\"

          echo \\"::set-output name=log::https://github.com/\${REPO}/actions/runs/\${{ github.run_id }}\\"
        env:
          GITHUB_TOKEN: \${{ secrets.GITHUB_TOKEN }}
          REPO: \${{ github.event.repository.full_name }}
      - name: Create Patch
        run: |-
          git add .
          git diff --patch --staged > \${{ runner.temp }}/dependencies.patch
      - name: Upload patch
        uses: actions/upload-artifact@v2
        with:
          name: dependencies.patch
          path: \${{ runner.temp }}/dependencies.patch
  create-pr:
    needs: upgrade-dependencies
    name: Create Pull Request
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download patch
        uses: actions/download-artifact@v2
        with:
          name: dependencies.patch
          path: \${{ runner.temp }}
      - name: Apply patch
        run: '[ -s \${{ runner.temp }}/dependencies.patch ] && git apply \${{ runner.temp
          }}/dependencies.patch || echo \\"Empty patch. Skipping.\\"'
      - name: Create Pull Request
        id: create-pull-request
        uses: peter-evans/create-pull-request@v3
        with:
          token: \${{ secrets.GITHUB_TOKEN }}
          commit-message: Upgrade dependencies
          branch: github-actions/dependencies
          title: \\"chore(deps): Upgrade dependencies\\"
          body: >-
            Upgrade dependencies.


            Since this PR was created with a GitHub Action, the build workflow wasn't triggered on it.

            > See https://github.com/peter-evans/create-pull-request/issues/48


            In order to validate it, build was executed during the creation of this PR instead.

            > See \${{ needs.upgrade-dependencies.outputs.build-log }}


            ------


            *Automatically created by projen via GitHubActions*
      - name: Update status check
        if: steps.create-pull-request.outputs.pull-request-url != ''
        run: \\"curl -i --fail -X POST -H \\\\\\"Accept: application/vnd.github.v3+json\\\\\\" -H
          \\\\\\"Authorization: token \${GITHUB_TOKEN}\\\\\\"
          https://api.github.com/repos/\${REPO}/check-runs -d
          '{\\\\\\"name\\\\\\":\\\\\\"build\\\\\\",\\\\\\"head_sha\\\\\\":\\\\\\"github-actions/dependencies\\\\\\",\\\\\\"s\\\\
          tatus\\\\\\":\\\\\\"completed\\\\\\",\\\\\\"conclusion\\\\\\":\\\\\\"\${{
          needs.upgrade-dependencies.outputs.build-conclusion
          }}\\\\\\",\\\\\\"output\\\\\\":{\\\\\\"title\\\\\\":\\\\\\"Created via the upgrade-dependencies
          workflow.\\\\\\",\\\\\\"summary\\\\\\":\\\\\\"Build log is available here: \${{
          needs.upgrade-dependencies.outputs.build-log }}\\\\\\"}}'\\"
        env:
          GITHUB_TOKEN: \${{ secrets.GITHUB_TOKEN }}
          REPO: \${{ github.event.repository.full_name }}
"
`;

exports[`default options 1`] = `
"# ~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".

name: upgrade-dependencies
on:
  workflow_dispatch: {}
  schedule:
    - cron: 0 0 * * *
jobs:
  upgrade-dependencies:
    name: Upgrade & Build
    permissions: read-all
    runs-on: ubuntu-latest
    outputs:
      build-conclusion: \${{ steps.build.outputs.conclusion }}
      build-log: \${{ steps.build.outputs.log }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install dependencies
        run: yarn install --check-files --frozen-lockfile
      - name: Upgrade dependencies
        run: npx projen deps:upgrade
      - name: Build
        id: build
        run: >-
          npx projen build && echo \\"::set-output name=conclusion::success\\" ||
          echo \\"::set-output name=conclusion::failure\\"

          echo \\"::set-output name=log::https://github.com/\${REPO}/actions/runs/\${{ github.run_id }}\\"
        env:
          GITHUB_TOKEN: \${{ secrets.GITHUB_TOKEN }}
          REPO: \${{ github.event.repository.full_name }}
      - name: Create Patch
        run: |-
          git add .
          git diff --patch --staged > \${{ runner.temp }}/dependencies.patch
      - name: Upload patch
        uses: actions/upload-artifact@v2
        with:
          name: dependencies.patch
          path: \${{ runner.temp }}/dependencies.patch
  create-pr:
    needs: upgrade-dependencies
    name: Create Pull Request
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download patch
        uses: actions/download-artifact@v2
        with:
          name: dependencies.patch
          path: \${{ runner.temp }}
      - name: Apply patch
        run: '[ -s \${{ runner.temp }}/dependencies.patch ] && git apply \${{ runner.temp
          }}/dependencies.patch || echo \\"Empty patch. Skipping.\\"'
      - name: Create Pull Request
        id: create-pull-request
        uses: peter-evans/create-pull-request@v3
        with:
          token: \${{ secrets.GITHUB_TOKEN }}
          commit-message: Upgrade dependencies
          branch: github-actions/dependencies
          title: \\"chore(deps): Upgrade dependencies\\"
          body: >-
            Upgrade dependencies.


            Since this PR was created with a GitHub Action, the build workflow wasn't triggered on it.

            > See https://github.com/peter-evans/create-pull-request/issues/48


            In order to validate it, build was executed during the creation of this PR instead.

            > See \${{ needs.upgrade-dependencies.outputs.build-log }}


            ------


            *Automatically created by projen via GitHubActions*
      - name: Update status check
        if: steps.create-pull-request.outputs.pull-request-url != ''
        run: \\"curl -i --fail -X POST -H \\\\\\"Accept: application/vnd.github.v3+json\\\\\\" -H
          \\\\\\"Authorization: token \${GITHUB_TOKEN}\\\\\\"
          https://api.github.com/repos/\${REPO}/check-runs -d
          '{\\\\\\"name\\\\\\":\\\\\\"build\\\\\\",\\\\\\"head_sha\\\\\\":\\\\\\"github-actions/dependencies\\\\\\",\\\\\\"s\\\\
          tatus\\\\\\":\\\\\\"completed\\\\\\",\\\\\\"conclusion\\\\\\":\\\\\\"\${{
          needs.upgrade-dependencies.outputs.build-conclusion
          }}\\\\\\",\\\\\\"output\\\\\\":{\\\\\\"title\\\\\\":\\\\\\"Created via the upgrade-dependencies
          workflow.\\\\\\",\\\\\\"summary\\\\\\":\\\\\\"Build log is available here: \${{
          needs.upgrade-dependencies.outputs.build-log }}\\\\\\"}}'\\"
        env:
          GITHUB_TOKEN: \${{ secrets.GITHUB_TOKEN }}
          REPO: \${{ github.event.repository.full_name }}
"
`;
