// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`deps upgrade commit can be signed 1`] = `
Object {
  "name": "Create Pull Request",
  "needs": "upgrade",
  "permissions": Object {
    "checks": "write",
    "contents": "write",
    "pull-requests": "write",
  },
  "runs-on": "ubuntu-latest",
  "steps": Array [
    Object {
      "name": "Checkout",
      "uses": "actions/checkout@v2",
      "with": Object {
        "ref": "main",
      },
    },
    Object {
      "name": "Set git identity",
      "run": "git config user.name \\"github-actions\\"
git config user.email \\"github-actions@github.com\\"",
    },
    Object {
      "name": "Download patch",
      "uses": "actions/download-artifact@v2",
      "with": Object {
        "name": ".upgrade.tmp.patch",
        "path": "\${{ runner.temp }}",
      },
    },
    Object {
      "name": "Apply patch",
      "run": "[ -s \${{ runner.temp }}/.upgrade.tmp.patch ] && git apply \${{ runner.temp }}/.upgrade.tmp.patch || echo \\"Empty patch. Skipping.\\"",
    },
    Object {
      "id": "create-pr",
      "name": "Create Pull Request",
      "uses": "peter-evans/create-pull-request@v3",
      "with": Object {
        "author": "github-actions <github-actions@github.com>",
        "body": "Upgrades project dependencies. See details in [workflow run].

[Workflow Run]: https://github.com/\${{ github.repository }}/actions/runs/\${{ github.run_id }}

------

*Automatically created by projen via the \\"upgrade-main\\" workflow*",
        "branch": "github-actions/upgrade-main",
        "commit-message": "chore(deps): upgrade dependencies

Upgrades project dependencies. See details in [workflow run].

[Workflow Run]: https://github.com/\${{ github.repository }}/actions/runs/\${{ github.run_id }}

------

*Automatically created by projen via the \\"upgrade-main\\" workflow*",
        "committer": "github-actions <github-actions@github.com>",
        "signoff": true,
        "title": "chore(deps): upgrade dependencies",
        "token": "\${{ secrets.GITHUB_TOKEN }}",
      },
    },
    Object {
      "env": Object {
        "GITHUB_TOKEN": "\${{ secrets.GITHUB_TOKEN }}",
      },
      "if": "steps.create-pr.outputs.pull-request-url != ''",
      "name": "Update status check",
      "run": "curl -i --fail -X POST -H \\"Accept: application/vnd.github.v3+json\\" -H \\"Authorization: token \${GITHUB_TOKEN}\\" https://api.github.com/repos/\${{ github.repository }}/check-runs -d '{\\"name\\":\\"build\\",\\"head_sha\\":\\"github-actions/upgrade-main\\",\\"status\\":\\"completed\\",\\"conclusion\\":\\"\${{ needs.upgrade.outputs.conclusion }}\\",\\"output\\":{\\"title\\":\\"Created via the upgrade-main workflow.\\",\\"summary\\":\\"Action run URL: https://github.com/\${{ github.repository }}/actions/runs/\${{ github.run_id }}\\"}}'",
    },
  ],
}
`;

exports[`enable anti-tamper 1`] = `
Array [
  Object {
    "name": "Checkout",
    "uses": "actions/checkout@v2",
  },
  Object {
    "name": "Set git identity",
    "run": "git config user.name \\"github-actions\\"
git config user.email \\"github-actions@github.com\\"",
  },
  Object {
    "name": "Anti-tamper check",
    "run": "git diff --ignore-space-at-eol --exit-code",
  },
  Object {
    "name": "Install dependencies",
    "run": "npm ci",
  },
  Object {
    "name": "build",
    "run": "npx projen build",
  },
  Object {
    "id": "git_diff",
    "name": "Check for changes",
    "run": "git diff --exit-code || echo \\"::set-output name=has_changes::true\\"",
  },
  Object {
    "if": "steps.git_diff.outputs.has_changes",
    "name": "Commit and push changes (if changed)",
    "run": "git add . && git commit -m \\"chore: self mutation\\" && git push origin HEAD:\${{ github.event.pull_request.head.ref }}",
  },
  Object {
    "env": Object {
      "GITHUB_TOKEN": "\${{ secrets.GITHUB_TOKEN }}",
    },
    "if": "steps.git_diff.outputs.has_changes",
    "name": "Update status check (if changed)",
    "run": "gh api -X POST /repos/\${{ github.event.pull_request.head.repo.full_name }}/check-runs -F name=\\"build\\" -F head_sha=\\"$(git rev-parse HEAD)\\" -F status=\\"completed\\" -F conclusion=\\"success\\"",
  },
  Object {
    "env": Object {
      "GITHUB_TOKEN": "\${{ secrets.GITHUB_TOKEN }}",
    },
    "if": "steps.git_diff.outputs.has_changes",
    "name": "Cancel workflow (if changed)",
    "run": "gh api -X POST /repos/\${{ github.event.pull_request.head.repo.full_name }}/actions/runs/\${{ github.run_id }}/cancel",
  },
  Object {
    "name": "Anti-tamper check",
    "run": "git diff --ignore-space-at-eol --exit-code",
  },
]
`;

exports[`mutableBuild will push changes to PR branches 1`] = `
Array [
  Object {
    "name": "Checkout",
    "uses": "actions/checkout@v2",
    "with": Object {
      "ref": "\${{ github.event.pull_request.head.ref }}",
      "repository": "\${{ github.event.pull_request.head.repo.full_name }}",
    },
  },
  Object {
    "name": "Set git identity",
    "run": "git config user.name \\"github-actions\\"
git config user.email \\"github-actions@github.com\\"",
  },
  Object {
    "name": "Install dependencies",
    "run": "yarn install --check-files --frozen-lockfile",
  },
  Object {
    "name": "build",
    "run": "npx projen build",
  },
  Object {
    "id": "git_diff",
    "name": "Check for changes",
    "run": "git diff --exit-code || echo \\"::set-output name=has_changes::true\\"",
  },
  Object {
    "if": "steps.git_diff.outputs.has_changes",
    "name": "Commit and push changes (if changed)",
    "run": "git add . && git commit -m \\"chore: self mutation\\" && git push origin HEAD:\${{ github.event.pull_request.head.ref }}",
  },
  Object {
    "env": Object {
      "GITHUB_TOKEN": "\${{ secrets.GITHUB_TOKEN }}",
    },
    "if": "steps.git_diff.outputs.has_changes",
    "name": "Update status check (if changed)",
    "run": "gh api -X POST /repos/\${{ github.event.pull_request.head.repo.full_name }}/check-runs -F name=\\"build\\" -F head_sha=\\"$(git rev-parse HEAD)\\" -F status=\\"completed\\" -F conclusion=\\"success\\"",
  },
  Object {
    "env": Object {
      "GITHUB_TOKEN": "\${{ secrets.GITHUB_TOKEN }}",
    },
    "if": "steps.git_diff.outputs.has_changes",
    "name": "Cancel workflow (if changed)",
    "run": "gh api -X POST /repos/\${{ github.event.pull_request.head.repo.full_name }}/actions/runs/\${{ github.run_id }}/cancel",
  },
]
`;
