// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`publish to go customizations 1`] = `
"# ~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".

name: Release
on:
  push:
    branches:
      - master
  workflow_dispatch: {}
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CI: \\"true\\"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Install dependencies
        run: yarn install --check-files --frozen-lockfile
      - name: Synthesize project files
        run: npx projen
      - name: Anti-tamper check
        run: git diff --exit-code
      - name: Set git identity
        run: |-
          git config user.name \\"Auto-bump\\"
          git config user.email \\"github-actions@github.com\\"
      - name: Bump to next version
        run: npx projen bump
      - name: Build
        run: npx projen build
      - name: Anti-tamper check
        run: git diff --exit-code
      - name: Push commits
        run: git push origin $BRANCH
        env:
          BRANCH: \${{ github.ref }}
      - name: Push tags
        run: git push --follow-tags origin $BRANCH
        env:
          BRANCH: \${{ github.ref }}
      - name: Upload artifact
        uses: actions/upload-artifact@v2.1.1
        with:
          name: dist
          path: dist
    container:
      image: jsii/superchain
  release_npm:
    name: Release to NPM
    needs: build
    runs-on: ubuntu-latest
    container:
      image: jsii/superchain
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist
      - name: Release
        run: npx -p jsii-release@latest jsii-release-npm
        env:
          NPM_TOKEN: \${{ secrets.NPM_TOKEN }}
          NPM_DIST_TAG: latest
          NPM_REGISTRY: registry.npmjs.org
  release_golang:
    name: Release to Go
    needs: build
    runs-on: ubuntu-latest
    container:
      image: jsii/superchain
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist
      - name: Release
        run: npx -p jsii-release@latest jsii-release-golang
        env:
          GITHUB_REPO: github.com/foo/bar
          GITHUB_TOKEN: \${{ secrets.CUSTOM_SECRET }}
          GIT_BRANCH: custom-branch
          GIT_USER_NAME: custom user
          GIT_USER_EMAIL: custom@email.com
          GIT_COMMIT_MESSAGE: custom commit message
"
`;

exports[`publish to go defaults 1`] = `
"# ~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".

name: Release
on:
  push:
    branches:
      - master
  workflow_dispatch: {}
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CI: \\"true\\"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Install dependencies
        run: yarn install --check-files --frozen-lockfile
      - name: Synthesize project files
        run: npx projen
      - name: Anti-tamper check
        run: git diff --exit-code
      - name: Set git identity
        run: |-
          git config user.name \\"Auto-bump\\"
          git config user.email \\"github-actions@github.com\\"
      - name: Bump to next version
        run: npx projen bump
      - name: Build
        run: npx projen build
      - name: Anti-tamper check
        run: git diff --exit-code
      - name: Push commits
        run: git push origin $BRANCH
        env:
          BRANCH: \${{ github.ref }}
      - name: Push tags
        run: git push --follow-tags origin $BRANCH
        env:
          BRANCH: \${{ github.ref }}
      - name: Upload artifact
        uses: actions/upload-artifact@v2.1.1
        with:
          name: dist
          path: dist
    container:
      image: jsii/superchain
  release_npm:
    name: Release to NPM
    needs: build
    runs-on: ubuntu-latest
    container:
      image: jsii/superchain
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist
      - name: Release
        run: npx -p jsii-release@latest jsii-release-npm
        env:
          NPM_TOKEN: \${{ secrets.NPM_TOKEN }}
          NPM_DIST_TAG: latest
          NPM_REGISTRY: registry.npmjs.org
  release_golang:
    name: Release to Go
    needs: build
    runs-on: ubuntu-latest
    container:
      image: jsii/superchain
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist
      - name: Release
        run: npx -p jsii-release@latest jsii-release-golang
        env:
          GITHUB_TOKEN: \${{ secrets.GO_GITHUB_TOKEN }}
          GIT_USER_NAME: GitHub Actions
          GIT_USER_EMAIL: github-actions@github.com
"
`;
