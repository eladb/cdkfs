# ~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".

name: build
on:
  pull_request: {}
  workflow_dispatch: {}
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      self_mutation_commit: ${{ steps.self_mutation.outputs.self_mutation_commit }}
    env:
      CI: "true"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
      - name: Set git identity
        run: |-
          git config --global init.defaultBranch main
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
      - name: Setup Node.js
        uses: actions/setup-node@v2.2.0
        with:
          node-version: 12.22.0
      - name: Install dependencies
        run: yarn install --check-files --frozen-lockfile
      - name: build
        run: /bin/bash ./projen.bash build
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          directory: coverage
      - name: Self mutation
        id: self_mutation
        env:
          GITHUB_TOKEN: PROJEN_GITHUB_TOKEN
        run: >-
          if ! git diff --exit-code; then
            git add .
            git commit -m "chore: self mutation"
            git push https://$GITHUB_ACTOR:$GITHUB_TOKEN@github.com/${{ github.event.pull_request.head.repo.full_name }}.git HEAD:${{ github.event.pull_request.head.ref }}
            echo "::set-output name=self_mutation_commit::$(git rev-parse HEAD)"
          fi
      - name: Upload artifact
        uses: actions/upload-artifact@v2.1.1
        if: always()
        with:
          name: build-artifact
          path: |-
            .
            !.git
            !node_modules
  package-js:
    needs: build
    runs-on: ubuntu-latest
    permissions: {}
    steps:
      - uses: actions/setup-node@v2
        with:
          node-version: 14.x
      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: build-artifact
      - name: Install Dependencies
        run: yarn install --check-files --frozen-lockfile
      - name: Create js artifact
        run: npx projen package:js
  package-java:
    needs: build
    runs-on: ubuntu-latest
    permissions: {}
    steps:
      - uses: actions/setup-java@v2
        with:
          distribution: temurin
          java-version: 11.x
      - uses: actions/setup-node@v2
        with:
          node-version: 14.x
      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: build-artifact
      - name: Install Dependencies
        run: yarn install --check-files --frozen-lockfile
      - name: Create java artifact
        run: npx projen package:java
  package-python:
    needs: build
    runs-on: ubuntu-latest
    permissions: {}
    steps:
      - uses: actions/setup-node@v2
        with:
          node-version: 14.x
      - uses: actions/setup-python@v2
        with:
          python-version: 3.x
      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: build-artifact
      - name: Install Dependencies
        run: yarn install --check-files --frozen-lockfile
      - name: Create python artifact
        run: npx projen package:python
  package-go:
    needs: build
    runs-on: ubuntu-latest
    permissions: {}
    steps:
      - uses: actions/setup-node@v2
        with:
          node-version: 14.x
      - uses: actions/setup-go@v2
        with:
          go-version: ^1.16.0
      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: build-artifact
      - name: Install Dependencies
        run: yarn install --check-files --frozen-lockfile
      - name: Create go artifact
        run: npx projen package:go
