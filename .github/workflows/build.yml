# ~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".

name: build
on:
  pull_request: {}
  workflow_dispatch: {}
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      has_changes: ${{ steps.git_diff.outputs.has_changes }}
    env:
      CI: "true"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
      - name: Set git identity
        run: |-
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
      - name: Setup Node.js
        uses: actions/setup-node@v2.2.0
        with:
          node-version: 12.22.0
      - name: Install dependencies
        run: yarn install --check-files --frozen-lockfile
      - name: build
        run: /bin/bash ./projen.bash build
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          directory: coverage
      - name: Check for changes
        id: git_diff
        run: git diff --exit-code || echo "::set-output name=has_changes::true"
      - if: steps.git_diff.outputs.has_changes
        name: Commit and push changes (if changed)
        run: 'git add . && git commit -m "chore: self mutation" && git push origin
          HEAD:${{ github.event.pull_request.head.ref }}'
      - name: Upload artifact
        uses: actions/upload-artifact@v2.1.1
        if: always()
        with:
          name: build-artifact
          path: dist
  update-status:
    needs:
      - build
      - package-js
      - package-java
      - package-python
      - package-go
    runs-on: ubuntu-latest
    permissions:
      checks: write
      actions: write
    if: ${{ jobs.build.outputs.has_changes }}
    steps:
      - name: Update status check (if changed)
        run: gh api -X POST /repos/${{ github.event.pull_request.head.repo.full_name
          }}/check-runs -F name="build" -F head_sha="$(git rev-parse HEAD)" -F
          status="completed" -F conclusion="success"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Cancel workflow (if changed)
        run: gh api -X POST /repos/${{ github.event.pull_request.head.repo.full_name
          }}/actions/runs/${{ github.run_id }}/cancel
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  package-js:
    needs: build
    runs-on: ubuntu-latest
    permissions: {}
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: build-artifact
          path: dist
      - uses: actions/setup-node@v2
        with:
          node-version: 14
      - name: Create js artifact
        run: >-
          tar -xzvf dist/js/*.tgz

          rm -fr dist/

          jsii_version=$(node -p "JSON.parse(fs.readFileSync('package/.jsii')).jsiiVersion.split(' ')[0]")

          npx jsii-pacmak@$jsii_version -vvvv --outdir dist --target js package/
  package-java:
    needs: build
    runs-on: ubuntu-latest
    permissions: {}
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: build-artifact
          path: dist
      - uses: actions/setup-node@v2
        with:
          node-version: 14
      - uses: actions/setup-java@v2
        with:
          distribution: temurin
          java-version: 11
      - name: Create java artifact
        run: >-
          tar -xzvf dist/js/*.tgz

          rm -fr dist/

          jsii_version=$(node -p "JSON.parse(fs.readFileSync('package/.jsii')).jsiiVersion.split(' ')[0]")

          npx jsii-pacmak@$jsii_version -vvvv --outdir dist --target java package/
  package-python:
    needs: build
    runs-on: ubuntu-latest
    permissions: {}
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: build-artifact
          path: dist
      - uses: actions/setup-node@v2
        with:
          node-version: 14
      - uses: actions/setup-python@v2
        with:
          python-version: 3
      - name: Create python artifact
        run: >-
          tar -xzvf dist/js/*.tgz

          rm -fr dist/

          jsii_version=$(node -p "JSON.parse(fs.readFileSync('package/.jsii')).jsiiVersion.split(' ')[0]")

          npx jsii-pacmak@$jsii_version -vvvv --outdir dist --target python package/
  package-go:
    needs: build
    runs-on: ubuntu-latest
    permissions: {}
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: build-artifact
          path: dist
      - uses: actions/setup-node@v2
        with:
          node-version: 14
      - name: Create go artifact
        run: >-
          tar -xzvf dist/js/*.tgz

          rm -fr dist/

          jsii_version=$(node -p "JSON.parse(fs.readFileSync('package/.jsii')).jsiiVersion.split(' ')[0]")

          npx jsii-pacmak@$jsii_version -vvvv --outdir dist --target go package/
